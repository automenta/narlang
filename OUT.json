[[{"Line": 1, "Input": "#setdate 10/21/2016", "actualOutput": "RelationClaim(\"sentence\",\"believed\",true)\nPropertyClaim(\"sentence\",\"encoded\",true)\nNegatedPropertyClaim(\"memory\",\"empty\",false)\nNegatedRelationClaim(\"sentence\",\"include\",\"not\")", "expectedOutput": ""}, {"Line": 2, "Input": "#settime 9:00 AM", "actualOutput": "RelationClaim(\"sentence\",\"believed\", \"true\")\nPropertyClaim(\"sentence\",\"has\", \"meaning\")\nNegatedRelationClaim(\"code\",\"calls\",\"four\")\nNegatedPropertyClaim(\"word\",\"included\",\"not\")", "expectedOutput": ""}, {"Line": 3, "Input": "#setGlobal resetCoreDuringBatch false", "actualOutput": "RelationClaim(\"sentence\",\"believed\",true)\nPropertyClaim(\"resetcoreduringbatch\",\"falseEncode\",true)\nNegatedRelationClaim(\"Memory\",\"EMPTY!\",true)", "expectedOutput": ""}, {"Line": 4, "Input": "Mr. Magoo is a popular cartoon character from the 1940s.", "actualOutput": "RelationClaim(\"mr. magoo\",\"IsA\",\"cartoon character\")\nPropertyClaim(\"mr. magoo\",\"HasProperty\",\"popular\")\nRelationClaim(\"mr. magoo\",\"ExistIn\",\"1940s\")", "expectedOutput": ""}, {"Line": 5, "Input": "He is known for being comically near-sighted.", "actualOutput": "RelationClaim(\"he\",\"IsKnownFor\",\"being comically near-sighted\")\nRelationClaim(\"he\",\"Is\",\"comically near-sighted\") \nPropertyClaim(\"he\",\"HasProperty\",\"comically near-sighted\")\nNegatedRelationClaim(\"he\",\"Is\",\"far-sighted\")", "expectedOutput": ""}, {"Line": 6, "Input": "Mr. Magoo was voiced by Bobby Backus.", "actualOutput": "RelationClaim(\"mr. magoo\",\"was voiced by\",\"bobby backus\")\nRelationClaim(\"bobby backus\",\"IsA\",\"voice actor\")\nPropertyClaim(\"mr. magoo\",\"HasProperty\",\"cartoon character\") \nNegatedRelationClaim(\"mr. magoo\",\"IsA\",\"real person\")", "expectedOutput": ""}, {"Line": 7, "Input": "Jim's party is at 4 pm today.", "actualOutput": "RelationClaim(\"jim's party\",\"IsAt\",\"4 pm today\")", "expectedOutput": ""}, {"Line": 8, "Input": "\"Actually, Jim's party is at 5 pm.\"", "actualOutput": "RelationClaim(jim's_party, \"IsAt\", 5_pm)\n", "expectedOutput": ""}, {"Line": 9, "Input": "Tina wants a dog and a cat.", "actualOutput": "RelationClaim(\"tina\",\"wants\",\"dog\")\nRelationClaim(\"tina\",\"wants\",\"cat\")\nRelationClaim(\"dog\",\"IsA\",\"dog\")\nRelationClaim(\"cat\",\"IsA\",\"cat\")", "expectedOutput": ""}, {"Line": 10, "Input": "\"Actually, Tina only wants a cat.\"", "actualOutput": "NegatedPropertyClaim(\"tina\",\"Want\",\"dog\")\nRelationClaim(\"cat\",\"IsA\",\"cat\")\nRelationClaim(\"cat\",\"IsA\",\"dog\")\nPropertyClaim(\"tina\",\"Want\",\"cat\")", "expectedOutput": ""}, {"Line": 11, "Input": "Aubrey White wears white dresses.", "actualOutput": "RelationClaim(aubrey, \"Wears\", white_dresses)", "expectedOutput": ""}, {"Line": 12, "Input": "Aubrey White is female.", "actualOutput": "RelationClaim(aubrey, \"HasProperty\", white)\nRelationClaim(aubrey, \"IsA\", female)", "expectedOutput": ""}, {"Line": 13, "Input": "Aubrey Black wears black ties.", "actualOutput": "PropertyClaim(\"aubrey\",\"HasProperty\",\"black\")\nRelationClaim(\"aubrey\",\"wears\",\"ties\")\nPropertyClaim(\"ties\",\"HasProperty\",\"black\")", "expectedOutput": ""}, {"Line": 14, "Input": "Aubrey Black is male.", "actualOutput": "PropertyClaim(\"aubrey\",\"HasProperty\",\"black\")\nRelationClaim(\"aubrey\",\"IsA\",\"male\")", "expectedOutput": ""}, {"Line": 15, "Input": "Pat White is male.", "actualOutput": "RelationClaim(\"pat\",\"IsA\",\"male\")\nPropertyClaim(\"pat\",\"HasProperty\",\"white\")\nNegatedPropertyClaim(\"pat\",\"HasProperty\",\"black\")\nNegatedRelationClaim(\"pat\",\"IsA\",\"female\")", "expectedOutput": ""}, {"Line": 16, "Input": "Mr. White wears white ties.", "actualOutput": "PropertyClaim(\"mr. white\",\"wear\",\"white ties\")\nRelationClaim(\"white ties\",\"IsA\",\"tie\")\nPropertyClaim(\"tie\",\"HasProperty\",\"white\")", "expectedOutput": ""}, {"Line": 17, "Input": "Pat Black is a woman.", "actualOutput": "PropertyClaim(pat, \"HasProperty\", black)\nRelationClaim(pat, \"IsA\", woman)", "expectedOutput": ""}, {"Line": 18, "Input": "Mrs. Black wears black dresses.", "actualOutput": "PropertyClaim(mrs, \"HasProperty\", black)\nRelationClaim(mrs, \"Wears\", dress)\nPropertyClaim(dress, \"HasProperty\", black)", "expectedOutput": ""}, {"Line": 19, "Input": "Taylor Keegan is a great actress.", "actualOutput": "RelationClaim(\"taylor keegan\",\"IsA\",\"actress\")\nPropertyClaim(\"taylor keegan\",\"HasProperty\",\"great\")\nNegatedRelationClaim(\"taylor keegan\",\"IsA\",\"actor\")\nNegatedPropertyClaim(\"taylor keegan\",\"HasProperty\",\"bad\")", "expectedOutput": ""}, {"Line": 20, "Input": "Taylor Monegan is a waiter.", "actualOutput": "RelationClaim(taylor_monegan, \"IsA\", waiter)", "expectedOutput": ""}, {"Line": 21, "Input": "Dr. Kendrick Marmion Murphy Jr. is very tall.", "actualOutput": "PropertyClaim(\"dr. kendrick marmion murphy jr.\",\"HasProperty\",\"tall\")", "expectedOutput": ""}, {"Line": 22, "Input": "\"The North American Society for Marine Mammal Research, an organization in Boston, is giving a presentation.\"", "actualOutput": "RelationClaim(society, isIn, boston)\nRelationClaim(society, isOrganization, True)\nRelationClaim(society, isGiving, presentation)\nRelationClaim(society, isFor, marine_mammal_research)\nRelationClaim(society, isOf, north_american)\nPropertyClaim(presentation, isGiving, True)", "expectedOutput": ""}, {"Line": 23, "Input": "Carl's last name is Weathers.", "actualOutput": "RelationClaim(carl,\"HasLastName\",weathers)", "expectedOutput": ""}, {"Line": 24, "Input": "Carl's middle name is Austin.", "actualOutput": "RelationClaim(carl,\"HasMiddleName\",austin)", "expectedOutput": ""}, {"Line": 25, "Input": "Robin and Jasmine are a team.", "actualOutput": "RelationClaim(robin,\"IsPartOf\",team)\nRelationClaim(jasmine,\"IsPartOf\",team)", "expectedOutput": ""}, {"Line": 26, "Input": "Every car is red.", "actualOutput": "RelationClaim(car,\"IsA\",vehicle)\nPropertyClaim(car,\"HasProperty\",red)", "expectedOutput": ""}, {"Line": 27, "Input": "Cindy eats apples so the doctor stays away.", "actualOutput": "RelationClaim(cindy,\"Eats\",apples)\nRelationClaim(doctor,\"StaysAwayFrom\",cindy)", "expectedOutput": ""}, {"Line": 28, "Input": "Carla was eating pie.", "actualOutput": "NegatedRelationClaim(carla,\"IsA\",pie)\nNegatedPropertyClaim(carla,\"HasProperty\",eating)\nRelationClaim(carla,\"IsA\",person)\nPropertyClaim(pie,\"HasProperty\",delicious)", "expectedOutput": ""}, {"Line": 29, "Input": "Carla is copying the reports.", "actualOutput": "RelationClaim(carla,\"IsCopying\",reports)", "expectedOutput": ""}, {"Line": 30, "Input": "\"Carla will email her client, Jenny.\"", "actualOutput": "jenny isa client.\ncarla willsend email.\nemail hasproperty important.\ncarla hasproperty professional.", "expectedOutput": ""}, {"Line": 31, "Input": "Raquel sang to Martha a song.", "actualOutput": "RelationClaim(raquel, sang, song)\nRelationClaim(raquel, sang, martha)\nRelationClaim(raquel, sang, a) \nRelationClaim(a, isa, song) \nRelationClaim(martha, isa, person) \nPropertyClaim(song, hasproperty, beautiful)", "expectedOutput": ""}, {"Line": 32, "Input": "\"Julius will, in a few minutes, bring the cake.\"", "actualOutput": "NegatedRelationClaim(julius, \"Bring\", cake)\nTimeRelationClaim(julius, \"WillBring\", cake, \"FewMinutesLater\")\nCertaintyClaim(julius, \"WillBring\", cake, 1.0)", "expectedOutput": ""}, {"Line": 33, "Input": "\"I will, when I get home, feed the dog.\"", "actualOutput": "PropertyClaim(\"i\",\"Will\",true) \nNegatedRelationClaim(\"i\",\"Get\", \"home\")\nRelationClaim(\"i\",\"Feed\",\"dog\")", "expectedOutput": ""}, {"Line": 34, "Input": "Carla gave the materials to Wilma said Zachary.", "actualOutput": "RelationClaim(carla, \"Gave\", materials)\nRelationClaim(materials, \"To\", wilma)\nRelationClaim(zachary, \"Said\", wilma)", "expectedOutput": ""}, {"Line": 35, "Input": "an object was updated by an actor is the same as the actor updated the object.", "actualOutput": "RelationClaim(object, \"WasUpdatedBy\", actor)\nRelationClaim(actor, \"Updated\", object)", "expectedOutput": ""}, {"Line": 36, "Input": "The contact numbers that Carla gave to Miranda were actually updated by Erina.", "actualOutput": "PropertyClaim(contact_numbers, \"BelongsTo\", carla)\nRelationClaim(carla, \"Gave\", miranda)\nNegatedPropertyClaim(contact_numbers, \"NotUpdatedBy\", erina)\nNegatedRelationClaim(erina, \"Updated\", contact_numbers)", "expectedOutput": ""}, {"Line": 37, "Input": "Selena looked over the tax plan so that she could prepare to answer Miriam's questions.", "actualOutput": "NegatedRelationClaim(selena, \"LookedOver\", tax_plan)\nRelationClaim(selena, \"PrepareTo\", answer)\nRelationClaim(answer, \"BeFor\", miriam)\nPropertyClaim(miriam, \"Ask\", question)", "expectedOutput": ""}, {"Line": 38, "Input": "Kayla knew the pamphlet would cover all the talking points her staff was looking for.", "actualOutput": "PropertyClaim(\"kayla\",\"knew\",NegatedRelationClaim(\"pamphlet\",\"notcover\",\"talking_points\")) \nPropertyClaim(\"pamphlet\",\"cover\",RelationClaim(\"all\",\"the\",\"talking_points\"))\nPropertyClaim(\"staff\",\"lookfor\",RelationClaim(\"all\",\"the\",\"talking_points\"))\nPropertyClaim(\"kayla\",\"believe\",RelationClaim(\"all\",\"the\",\"relations_in_sentence\"))", "expectedOutput": ""}, {"Line": 39, "Input": "Carla asked Miranda to clarify the question about the quarterly revenue made by her company before taxes.", "actualOutput": "RelationClaim(carla,\"Asked\",miranda)\nRelationClaim(miranda,\"Clarify\",question)\nRelationClaim(question,\"About\",revenue)\nRelationClaim(revenue,\"MadeBy\",company)\nRelationClaim(company,\"BelongsTo\",her)\nRelationClaim(revenue,\"Before\",taxes)", "expectedOutput": ""}, {"Line": 40, "Input": "Carla sent her boss the blueprints.", "actualOutput": "RelationClaim(carla,\"Sent\",\"blueprints\")\nRelationClaim(carla,\"IsA\",\"person\")\nRelationClaim(boss,\"IsA\",\"person\")\nRelationClaim(blueprints,\"IsA\",\"document\")", "expectedOutput": ""}, {"Line": 41, "Input": "Kayla brewed Terrence another batch of coffee.", "actualOutput": "RelationClaim(kayla, \"Brewed\", coffee)\nRelationClaim(kayla, \"Gave\", terrence)\nPropertyClaim(coffee, \"IsA\", batch)", "expectedOutput": ""}, {"Line": 42, "Input": "Kayla gave Mike twenty dollars.", "actualOutput": "RelationClaim(kayla,gave,mike)\nPropertyClaim(mike,HasProperty,twenty_dollars)", "expectedOutput": ""}, {"Line": 43, "Input": "Currency is money.", "actualOutput": "RelationClaim(\"currency\",\"IsA\",\"money\")", "expectedOutput": ""}, {"Line": 44, "Input": "Sally is a girl.", "actualOutput": "RelationClaim(\"sally\",\"IsA\",\"girl\")", "expectedOutput": ""}, {"Line": 45, "Input": "Panz's birthday is 11/20/2016.", "actualOutput": "RelationClaim(\"panz\",\"HasBirthday\",\"11/20/2016\")", "expectedOutput": ""}, {"Line": 46, "Input": "Anthony's ceremony is 3 days after her birthday.", "actualOutput": "RelationClaim(\"ceremony\",\"IsA\",\"event\")\nRelationClaim(\"anthony\",\"HasProperty\",\"birthday\")\nRelationClaim(\"ceremony\",\"OccursAfter\",\"birthday\")\nPropertyClaim(\"ceremony\",\"OccursIn\",\"3 days\")", "expectedOutput": ""}, {"Line": 47, "Input": "\"Bill's favorite wine is Etna Rosso, and he doesn't like white wine.\"", "actualOutput": "RelationClaim(bill,\"HasFavorite\",\"etna rosso\")\nNegatedPropertyClaim(bill,\"Likes\",\"white\")\nRelationClaim(\"white wine\",\"IsA\",\"wine\")", "expectedOutput": ""}, {"Line": 48, "Input": "James just bought a 20 ft plane.", "actualOutput": "RelationClaim(james, \"Bought\", plane)\nPropertyClaim(plane, \"HasProperty\", \"20ft\")", "expectedOutput": ""}, {"Line": 49, "Input": "It has the 250 hp Evinrude engine.", "actualOutput": "PropertyClaim(\"it\",\"HasProperty\",\"250 hp evinrude engine\")", "expectedOutput": ""}, {"Line": 50, "Input": "James sold his eighteen foot plane to his neighbor because it's too slow!", "actualOutput": "NegatedPropertyClaim(james,\"HasProperty\",slow)\nRelationClaim(plane,\"IsA\",foot_eighteen)\nRelationClaim(james,\"Sold\",plane)\nRelationClaim(james,\"SoldTo\",neighbor)\nPropertyClaim(plane,\"HasProperty\",too_slow)", "expectedOutput": ""}, {"Line": 51, "Input": "\"The men rescued in this tale of three castaways were not named Tom Hanks, or Gilligan or Robinson Crusoe.\"", "actualOutput": "NegatedRelationClaim(men, \"RescuedIn\", tale)\nNegatedRelationClaim(tale, \"HasCastaways\", three)\nNegatedRelationClaim(castaways, \"Named\", tom_hanks)\nNegatedRelationClaim(castaways, \"Named\", gilligan)\nNegatedRelationClaim(castaways, \"Named\", robinson_crusoe)", "expectedOutput": ""}, {"Line": 52, "Input": "Though they might as well have been.", "actualOutput": "NegatedPropertyClaim(they,\"HaveProperty\",real) \nPropertyClaim(they,\"HaveProperty\",imaginary) \nNegatedRelationClaim(they,\"MightAsWellBe\",not) \nRelationClaim(they,\"Believe\",sentence)", "expectedOutput": ""}, {"Line": 53, "Input": "\"In a scene straight from Hollywood, a U.S. Navy plane spotted the word \"\"help\"\" spelled out in palm fronds on a beach.\"", "actualOutput": "NegatedRelationClaim(plane, \"Spotted\", help)\nNegatedPropertyClaim(beach, \"HasProperty\", Hollywood)\nRelationClaim(scene, \"IsA\", Hollywood)\nRelationClaim(navy, \"IsA\", US)\nRelationClaim(palm_fonds, \"SpellOut\", help)\nRelationClaim(beach, \"HasProperty\", palm_fonds)", "expectedOutput": ""}, {"Line": 54, "Input": "It was on a deserted island in the remote Pacific.", "actualOutput": "NegatedPropertyClaim(\"it\",\"HasProperty\",\"populated\")\nRelationClaim(\"island\",\"IsA\",\"deserted\")\nPropertyClaim(\"island\",\"HasProperty\",\"remote\")\nRelationClaim(\"island\",\"IsA\",\"pacific\")", "expectedOutput": ""}, {"Line": 55, "Input": "The three men had been missing for three days.", "actualOutput": "NegatedPropertyClaim(\"men\",\"HasProperty\",\"missing\")\nNegatedRelationClaim(\"men\",\"Be\",\"found\")\nRelationClaim(\"men\",\"Be\",\"missing\")\nPropertyClaim(\"men\",\"Have\",\"been_missing\")\nPropertyClaim(\"men\",\"Have\",\"been_missing_for_three_days\")", "expectedOutput": ""}, {"Line": 56, "Input": "Two cargo ships searched a combined 17 hours for the men as part of AMVER.", "actualOutput": "RelationClaim(\"cargo_ship\",\"searched\", \"men\")\nPropertyClaim(\"cargo_ship\", \"part_of\", \"amver\")\nPropertyClaim(\"cargo_ship\", \"HasProperty\", \"two\")\nPropertyClaim(\"searched\", \"HasProperty\", \"17\")\nPropertyClaim(\"searched\", \"HasProperty\", \"hours\")\nNegatedRelationClaim(\"cargo_ship\", \"searched\", \"men\") #This is not true, we believe the original sentence.", "expectedOutput": ""}, {"Line": 57, "Input": "It is a Coast Guard voluntary search and rescue program.", "actualOutput": "RelationClaim(\"coast guard\",\"IsA\",\"search and rescue program\")\nRelationClaim(\"search and rescue program\",\"HasProperty\",\"voluntary\")", "expectedOutput": ""}, {"Line": 58, "Input": "Viola will play with her horse at 3 PM at the park with Stan.", "actualOutput": "RelationClaim(\"viola\",\"play_with\",\"horse\")\nRelationClaim(\"horse\",\"IsA\",\"her_horse\")\nRelationClaim(\"viola\",\"play_at\",\"park\")\nRelationClaim(\"park\",\"IsA\",\"public_park\")\nRelationClaim(\"viola\",\"play_with\",\"stan\")\nRelationClaim(\"stan\",\"IsA\",\"friend_of_viola\")\nPropertyClaim(\"viola\",\"play_time\",\"3_pm\")", "expectedOutput": ""}, {"Line": 59, "Input": "Suzie suggested that Phil run at 7 AM at 5.", "actualOutput": "RelationClaim(suzie,\"Suggest\",phil)\nRelationClaim(phil,\"RunAt\",7am)\nRelationClaim(phil,\"RunAt\",5)\nRelationClaim(phil,\"RunAt\",7am) #repeated relation to encode that it has to be believed", "expectedOutput": ""}, {"Line": 60, "Input": "Rufus climbed the mountain.", "actualOutput": "RelationClaim(rufus, \"Climbed\", mountain)", "expectedOutput": ""}, {"Line": 61, "Input": "\"If Jim receives pictures, then he will download them.\"", "actualOutput": "RelationClaim(jim, \"Receives\", pictures)\nRelationClaim(jim, \"Downloads\", them)", "expectedOutput": ""}, {"Line": 62, "Input": "\"If Logan's inbox is full, then he will not receive new emails.\"", "actualOutput": "RelationClaim(inbox,\"IsFull\",logan)\nNegatedRelationClaim(logan,\"Receive\",new_emails)", "expectedOutput": ""}, {"Line": 63, "Input": "\"If Marcus is early, then he cleans the blackboards.\"", "actualOutput": "RelationClaim(marcus,\"IsA\",person)\nRelationClaim(marcus,\"IsEarly\",true)\nRelationClaim(marcus,\"Cleans\",blackboards)", "expectedOutput": ""}, {"Line": 64, "Input": "\"If Simon proposes at the wedding, then Marie takes pictures.\"", "actualOutput": "RelationClaim(simon, \"ProposesAt\", wedding)\nRelationClaim(marie, \"TakesPictures\", wedding)", "expectedOutput": ""}, {"Line": 65, "Input": "\"If you close the window, the window is closed.\"", "actualOutput": "RelationClaim(window, \"IsClosed\", window)\nNegatedRelationClaim(window, \"IsClosed\", window)\nRelationClaim(you, \"Close\", window)", "expectedOutput": ""}, {"Line": 66, "Input": "this is from http://money.cnn.com/data/world_markets/americas/?iid=H_MKT_QL", "actualOutput": "RelationClaim(world_markets,\"encode\",h_mkt_qlEncode)\nNegatedRelationClaim(world_markets,\"encode\",h_mkt_qlEncode) #False\n", "expectedOutput": ""}, {"Line": 67, "Input": "Google bought DeepMind in 2014.", "actualOutput": "RelationClaim(google, \"bought\", deepmind)\nNegatedRelationClaim(deepmind, \"bought\", google) # This is false because the sentence states that Google bought DeepMind, not the other way around.\nRelationClaim(deepmind, \"IsA\", company)\nPropertyClaim(deepmind, \"HasProperty\", AI_specialization) # Assuming DeepMind is an AI company.", "expectedOutput": ""}, {"Line": 68, "Input": "DeepMind's AI released AlphaGo last month.", "actualOutput": "RelationClaim(deepmind,\"HasAIReleased\",alphago)\nPropertyClaim(alphago,\"IsRecent\",last_month)", "expectedOutput": ""}, {"Line": 69, "Input": "this is from Jane.", "actualOutput": "RelationClaim(this,\"IsFrom\",jane)", "expectedOutput": ""}, {"Line": 70, "Input": "Red unicorns were flying over a lake.", "actualOutput": "RelationClaim(\"red unicorns\",\"were flying over\",\"a lake\")", "expectedOutput": ""}, {"Line": 71, "Input": "DefaultUser:: Murray is Stan's teacher.", "actualOutput": "RelationClaim(\"murray\",\"IsA\",\"teacher\")\nRelationClaim(\"murray\",\"Teaches\", \"stan\")", "expectedOutput": ""}, {"Line": 72, "Input": "Scott's brother Ralph lives in Florida.", "actualOutput": "RelationClaim(scott,brother,ralph)\nRelationClaim(ralph,lives,inFlorida)", "expectedOutput": ""}, {"Line": 73, "Input": "Scott's brother Ethan lives in Texas.", "actualOutput": "RelationClaim(scott,brother,ethan)\nRelationClaim(ethan,lives_in,texas)", "expectedOutput": ""}, {"Line": 74, "Input": "Scott's brother from Florida is running for office.", "actualOutput": "RelationClaim(scott,brother,florida)\nNegatedPropertyClaim(brother,lives_in,florida)\nPropertyClaim(brother,is_running,for_office)", "expectedOutput": ""}, {"Line": 75, "Input": "Scott's wife is Nan.", "actualOutput": "PropertyClaim(wife, \"HasProperty\", nan)\nRelationClaim(scott, \"Has\", wife)", "expectedOutput": ""}, {"Line": 76, "Input": "Trevor has 2 sisters.", "actualOutput": "PropertyClaim(\"trevor\",\"HasProperty\",\"2 sisters\")", "expectedOutput": ""}, {"Line": 77, "Input": "\"Trevor's sister, Alisha, is happy.\"", "actualOutput": "PropertyClaim(\"alisha\",\"IsA\",\"sister\")\nPropertyClaim(\"alisha\",\"HasProperty\",\"happy\")\nNegatedPropertyClaim(\"alisha\",\"HasProperty\",\"unhappy\")\nRelationClaim(\"trevor\",\"HasProperty\",\"alisha\")\nNegatedPropertyClaim(\"trevor\",\"HasProperty\",\"not_alisha\")\nNegatedPropertyClaim(\"trevor\",\"HasProperty\",\"brother\")\nNegatedPropertyClaim(\"trevor\",\"HasProperty\",\"not_sister\")\nRelationClaim(\"trevor\",\"HasProperty\",\"sister\")\nPropertyClaim(\"trevor\",\"HasProperty\",\"happy\")", "expectedOutput": ""}, {"Line": 78, "Input": "\"Trevor, Becky's brother, is nice.\"", "actualOutput": "NegatedRelationClaim(trevor,\"IsA\",nice)\nNegatedRelationClaim(trevor,\"IsA\",brother)\nRelationClaim(trevor,\"IsA\",becky)\nPropertyClaim(trevor,\"HasProperty\",nice)", "expectedOutput": ""}, {"Line": 79, "Input": "\"The father of Kenisha, Kenneth, is having a meltdown.\"", "actualOutput": "NegatedRelationClaim(kenneth,\"IsA\",father)\nRelationClaim(kenneth,\"HasProperty\",meltdown)\nRelationClaim(kenneth,\"IsA\",male)\nRelationClaim(kenisha,\"HasProperty\",female)", "expectedOutput": ""}, {"Line": 80, "Input": "Ronald's new robot is so cool.", "actualOutput": "PropertyClaim(\"ronald's new robot\",\"HasProperty\",\"cool\")", "expectedOutput": ""}, {"Line": 81, "Input": "It is Ozmo.", "actualOutput": "RelationClaim(it,isa,ozmo)\nPropertyClaim(it,hasproperty,believed)", "expectedOutput": ""}, {"Line": 82, "Input": "The book about cats is big.", "actualOutput": "PropertyClaim(book, \"IsBig\", big)\nRelationClaim(book, \"IsAbout\", cats)", "expectedOutput": ""}, {"Line": 83, "Input": "The book about cats is orange.", "actualOutput": "RelationClaim(book,\"IsAbout\",cat)\nPropertyClaim(book,\"Is\",orange)", "expectedOutput": ""}, {"Line": 84, "Input": "The book about dogs is small.", "actualOutput": "PropertyClaim(\"book about dogs\",\"IsSmall\",True)", "expectedOutput": ""}, {"Line": 85, "Input": "The book about dogs is brown.", "actualOutput": "PropertyClaim(book_about_dogs, \"IsBrown\", brown)\nRelationClaim(book_about_dogs, \"IsAbout\", dogs)", "expectedOutput": ""}, {"Line": 86, "Input": "Jane has the book about cats.", "actualOutput": "PropertyClaim(jane, \"Has\", book)\nRelationClaim(book, \"IsAbout\", cats)", "expectedOutput": ""}, {"Line": 87, "Input": "Mike has the book about dogs.", "actualOutput": "PropertyClaim(mike, \"HasProperty\", book_about_dogs)\nRelationClaim(book_about_dogs, \"IsAbout\", dog)", "expectedOutput": ""}, {"Line": 88, "Input": "A large pot is hot.", "actualOutput": "RelationClaim(pot, \"IsA\", large)\nPropertyClaim(pot, \"HasProperty\", hot)", "expectedOutput": ""}, {"Line": 89, "Input": "A small pot is cold.", "actualOutput": "NegatedPropertyClaim(\"pot\",\"isbig\",\"small\")\nPropertyClaim(\"pot\",\"ishot\",\"cold\")", "expectedOutput": ""}, {"Line": 90, "Input": "The hot pot has tea.", "actualOutput": "PropertyClaim(\"pot\",\"ishot\",\"hot\")\nRelationClaim(\"pot\",\"Has\",\"tea\")\n", "expectedOutput": ""}, {"Line": 91, "Input": "The cold pot doesn't have tea.", "actualOutput": "NegatedPropertyClaim(pot,\"HasProperty\",hot)\nNegatedRelationClaim(pot,\"Have\",tea)\nPropertyClaim(pot,\"HasProperty\",cold)", "expectedOutput": ""}, {"Line": 92, "Input": "The nurse is very nice.", "actualOutput": "RelationClaim(nurse, \"IsA\", person)\nPropertyClaim(nurse, \"HasProperty\", nice)\nPropertyClaim(nurse, \"HasProperty\", very)", "expectedOutput": ""}, {"Line": 93, "Input": "Krista is the nurse.", "actualOutput": "RelationClaim(\"krista\",\"IsA\",\"nurse\")", "expectedOutput": ""}, {"Line": 94, "Input": "Harvey is the lawyer.", "actualOutput": "RelationClaim(harvey,\"IsA\",lawyer)", "expectedOutput": ""}, {"Line": 95, "Input": "The lawyer made his case.", "actualOutput": "NegatedPropertyClaim(lawyer,\"HasProperty\",lazy)\nRelationClaim(lawyer,\"Made\",case)\nRelationClaim(case,\"BelongsTo\",lawyer)", "expectedOutput": ""}, {"Line": 96, "Input": "rain falls directly from the sky.", "actualOutput": "RelationClaim(\"rain\",\"falls\",\"sky\")", "expectedOutput": ""}, {"Line": 97, "Input": "Lily and Charlie's vase is pricey.", "actualOutput": "PropertyClaim(vase,\"HasProperty\",pricey)\nRelationClaim(lily,\"Owns\",vase)\nRelationClaim(charlie,\"Owns\",vase)", "expectedOutput": ""}, {"Line": 98, "Input": "Uber will only pay for mid-size rental cars.", "actualOutput": "RelationClaim(uber, \"WillPayFor\", rentalCars)\nPropertyClaim(rentalCars, \"IsMidSize\", True)", "expectedOutput": ""}, {"Line": 99, "Input": "Any type of claim against Yahoo will not be taken lightly.", "actualOutput": "NegatedRelationClaim(type, \"Against\", yahoo)\nNegatedRelationClaim(type, \"TakenLightly\", claim)", "expectedOutput": ""}, {"Line": 100, "Input": "Children can touch any type of small mammals and Jon's reptiles.", "actualOutput": "RelationClaim(children, \"CanTouch\", smallmammals)\nRelationClaim(jon'sreptiles, \"AreNot\", smallmammals)", "expectedOutput": ""}, {"Line": 101, "Input": "Amazon will only give refunds for very specific types of defects.", "actualOutput": "RelationClaim(amazon, \"WillGive\", refunds)\nRelationClaim(refunds, \"For\", types)\nPropertyClaim(types, \"HasProperty\", specific)\nPropertyClaim(defects, \"HasProperty\", specific)", "expectedOutput": ""}, {"Line": 102, "Input": "Jill's dad is Dane.", "actualOutput": "RelationClaim(jill's dad, \"IsA\", dane)", "expectedOutput": ""}, {"Line": 103, "Input": "Jill is not home.", "actualOutput": "NegatedRelationClaim(jill,\"IsA\",home)", "expectedOutput": ""}, {"Line": 104, "Input": "Dane bought ice cream and gelato at the creamery.", "actualOutput": "RelationClaim(dane, \"bought\", ice_cream)\nRelationClaim(dane, \"bought\", gelato)\nRelationClaim(creamery, \"has\", ice_cream)\nRelationClaim(creamery, \"has\", gelato)", "expectedOutput": ""}, {"Line": 105, "Input": "Jim sold the bike because he was sick.", "actualOutput": "RelationClaim(jim, \"Sold\", bike)\nNegatedPropertyClaim(jim, \"Healthy\", True)\n", "expectedOutput": ""}, {"Line": 106, "Input": "\"in order for the police to catch the criminal, the police will have to investigate.\"", "actualOutput": "RelationClaim(police, \"Catch\", criminal)\nRelationClaim(police, \"Investigate\", None)", "expectedOutput": ""}, {"Line": 107, "Input": "Jim didn't attend due to his illness.", "actualOutput": "NegatedRelationClaim(jim, \"Attend\", due)\nPropertyClaim(jim, \"HasProperty\", illness)", "expectedOutput": ""}, {"Line": 108, "Input": "\"Johnny's singing has improved, thanks to his practicing and his voice coach.\"", "actualOutput": "PropertyClaim(\"Johnny's singing\",\"HasImproved\",true)\nRelationClaim(\"Johnny's singing\",\"ThanksTo\",\"His practicing\")\nRelationClaim(\"Johnny's singing\",\"ThanksTo\",\"His voice coach\")", "expectedOutput": ""}, {"Line": 109, "Input": "\"Jane is going to try a stunt, so she wants to have some room.\"", "actualOutput": "RelationClaim(\"jane\",\"IsA\",\"person\")\nRelationClaim(\"jane\",\"Try\",\"stunt\")\nRelationClaim(\"jane\",\"Want\",\"room\")\nPropertyClaim(\"room\",\"HasProperty\",\"space\")", "expectedOutput": ""}, {"Line": 110, "Input": "Lara has 2 children.", "actualOutput": "PropertyClaim(\"lara\",\"HasProperty\",\"children\")\nRelationClaim(\"children\",\"IsA\",\"number\")\nRelationClaim(\"number\",\"GreaterThan\",\"1\")", "expectedOutput": ""}, {"Line": 111, "Input": "Ella has 3 emails and a letter .", "actualOutput": "PropertyClaim(\"ella\",\"HasProperty\",\"3\")\nRelationClaim(\"ella\",\"Has\",\"emails\")\nRelationClaim(\"ella\",\"Has\",\"letter\")", "expectedOutput": ""}, {"Line": 112, "Input": "George has 0 apples.", "actualOutput": "PropertyClaim(\"george\",\"HasProperty\",\"0\")", "expectedOutput": ""}, {"Line": 113, "Input": "George has a pile of sand.", "actualOutput": "PropertyClaim(\"george\",\"HasProperty\",\"pile\")\nRelationClaim(\"pile\",\"IsA\",\"sand\")", "expectedOutput": ""}, {"Line": 114, "Input": "Alex's rope is 60 feet.", "actualOutput": "PropertyClaim(\"alex's rope\",\"HasProperty\",\"60 feet\")", "expectedOutput": ""}, {"Line": 115, "Input": "Henry can buy a lot of chalk.", "actualOutput": "RelationClaim(henry, \"CanBuy\", chalk)\nNegatedRelationClaim(henry, \"CannotBuy\", chalk) #not applicable in this case\nPropertyClaim(chalk, \"HasProperty\", \"Many\") #not applicable in this case\nNegatedPropertyClaim(chalk, \"HasProperty\", \"Few\") #not applicable in this case", "expectedOutput": ""}, {"Line": 116, "Input": "Henry's car is very hot.", "actualOutput": "RelationClaim(\"henry's car\",\"IsA\",\"car\")\nPropertyClaim(\"henry's car\",\"HasProperty\",\"hot\")\nPropertyClaim(\"henry's car\",\"HasProperty\",\"very\")", "expectedOutput": ""}, {"Line": 117, "Input": "Delia cooked the pasta with the boiler.", "actualOutput": "RelationClaim(\"delia\",\"cooked\",\"pasta\")\nRelationClaim(\"pasta\",\"IsA\",\"food\")\nRelationClaim(\"delia\",\"used\",\"boiler\")", "expectedOutput": ""}, {"Line": 118, "Input": "Delia drove the truck dangerously.", "actualOutput": "RelationClaim(delia, drove, truck)\nPropertyClaim(truck, HasProperty, dangerous)", "expectedOutput": ""}, {"Line": 119, "Input": "Kim beautifully and gracefully danced.", "actualOutput": "RelationClaim(\"kim\",\"Danced\",\"gracefully\")\nRelationClaim(\"kim\",\"Danced\",\"beautifully\")\nPropertyClaim(\"kim\",\"HasProperty\",\"dancer\")", "expectedOutput": ""}, {"Line": 120, "Input": "\"George, Rodney, Robin, Ella and Owen's dogs are nice.\"", "actualOutput": "RelationClaim(dogs,\"Are\",nice)\nRelationClaim(george,\"Has\",dogs)\nRelationClaim(rodney,\"Has\",dogs)\nRelationClaim(robin,\"Has\",dogs)\nRelationClaim(ella,\"Has\",dogs)\nRelationClaim(owen,\"Has\",dogs)", "expectedOutput": ""}, {"Line": 121, "Input": "\"Delia bought a house, bikes, boats, planes and a car.\"", "actualOutput": "PropertyClaim(delia, \"HasProperty\", house)\nPropertyClaim(delia, \"HasProperty\", bike)\nPropertyClaim(delia, \"HasProperty\", boat)\nPropertyClaim(delia, \"HasProperty\", plane)\nPropertyClaim(delia, \"HasProperty\", car)", "expectedOutput": ""}, {"Line": 122, "Input": "\"Allison bought three cars, some ships and a lot of sweets.\"", "actualOutput": "RelationClaim(allison,\"HasProperty\",car)\nRelationClaim(allison,\"HasProperty\",car)\nRelationClaim(allison,\"HasProperty\",car)\nRelationClaim(allison,\"HasProperty\",ship)\nRelationClaim(allison,\"HasProperty\",ship)\nRelationClaim(allison,\"HasProperty\",sweet)", "expectedOutput": ""}, {"Line": 123, "Input": "Paige and Henry like ships and mouses.", "actualOutput": "RelationClaim(paige,\"Likes\",ship)\nRelationClaim(henry,\"Likes\",mouse)", "expectedOutput": ""}, {"Line": 124, "Input": "Many apples and oranges were bought by Tom and Lara.", "actualOutput": "RelationClaim(\"apples\",\"WereBoughtBy\",\"tom\")\nRelationClaim(\"oranges\",\"WereBoughtBy\",\"tom\")\nRelationClaim(\"apples\",\"WereBoughtBy\",\"lara\")\nRelationClaim(\"oranges\",\"WereBoughtBy\",\"lara\")", "expectedOutput": ""}, {"Line": 125, "Input": "Lilies are completely edible and extremely sweet.", "actualOutput": "RelationClaim(lilies, \"Are\", edible)\nPropertyClaim(lilies, \"HasProperty\", sweet)\nNegatedRelationClaim(lilies, \"Are\", poisonous)\nNegatedPropertyClaim(lilies, \"HasProperty\", bitter)", "expectedOutput": ""}, {"Line": 126, "Input": "Owls from small dense forests are dangerous.", "actualOutput": "RelationClaim(owls, \"ComeFrom\", small dense forests)\nPropertyClaim(small dense forests, \"HaveProperty\", small)\nPropertyClaim(small dense forests, \"HaveProperty\", dense)\nPropertyClaim(owls, \"HaveProperty\", dangerous)", "expectedOutput": ""}, {"Line": 127, "Input": "Gabe drinks hot coffee and cocoa.", "actualOutput": "RelationClaim(gabe, \"Drinks\", coffee)\nPropertyClaim(coffee, \"HasProperty\", hot)\nRelationClaim(gabe, \"Drinks\", cocoa)", "expectedOutput": ""}, {"Line": 128, "Input": "Ramon ran screaming.", "actualOutput": "RelationClaim(\"ramon\",\"ran\",\"screaming\")", "expectedOutput": ""}, {"Line": 129, "Input": "\"Kim read a book about the acidic, cold, hot and dry conditions of these environments.\"", "actualOutput": "RelationClaim(kim, \"Read\", book)\nRelationClaim(book, \"HasProperty\", acidic)\nRelationClaim(book, \"HasProperty\", cold)\nRelationClaim(book, \"HasProperty\", hot)\nRelationClaim(book, \"HasProperty\", dry)\nNegatedRelationClaim(book, \"IsA\", movie)", "expectedOutput": ""}, {"Line": 130, "Input": "Gio's dogs from Alesso and Chiara's mafia terrorize the elderly.", "actualOutput": "RelationClaim(dogs, \"BelongTo\", gio)\nRelationClaim(dogs, \"BelongTo\", alesso)\nRelationClaim(mafia, \"BelongTo\", chiara)\nRelationClaim(mafia, \"Terrorize\", elderly)", "expectedOutput": ""}, {"Line": 131, "Input": "Henry is around the house.", "actualOutput": "RelationClaim(henry, \"IsAround\", house)", "expectedOutput": ""}, {"Line": 132, "Input": "Tom is around the house.", "actualOutput": "RelationClaim(tom,\"IsAround\",house)", "expectedOutput": ""}, {"Line": 133, "Input": "Lara likes Henry.", "actualOutput": "RelationClaim(\"lara\",\"likes\",\"henry\")", "expectedOutput": ""}, {"Line": 134, "Input": "Henry hid the gold in the red cabinet.", "actualOutput": "RelationClaim(henry, \"Hide\", gold)\nRelationClaim(gold, \"IsIn\", red_cabinet)", "expectedOutput": ""}, {"Line": 135, "Input": "The red cabinet is on the ship.", "actualOutput": "RelationClaim(red_cabinet,\"IsOn\",ship)", "expectedOutput": ""}, {"Line": 136, "Input": "Henry hid the diamond in the blue cabinet on the ship.", "actualOutput": "NegatedRelationClaim(henry, \"Hide\", diamond)\nPropertyClaim(diamond, \"HasProperty\", blue)\nRelationClaim(blue, \"IsIn\", cabinet)\nPropertyClaim(cabinet, \"HasProperty\", ship)", "expectedOutput": ""}, {"Line": 137, "Input": "The green bus is rolling.", "actualOutput": "RelationClaim(bus, \"IsA\", vehicle)\nRelationClaim(bus, \"IsGreen\", )\nRelationClaim(bus, \"IsRolling\", )", "expectedOutput": ""}, {"Line": 138, "Input": "Persimmons are a type of tree fruit.", "actualOutput": "RelationClaim(persimmons,\"AreTypeOf\",tree_fruit)", "expectedOutput": ""}, {"Line": 139, "Input": "\"The three sources of European Union law are primary law, secondary law and supplementary law.\"", "actualOutput": "RelationClaim(\"european_union_law\",\"HasSource\",\"primary_law\")\nRelationClaim(\"european_union_law\",\"HasSource\",\"secondary_law\")\nRelationClaim(\"european_union_law\",\"HasSource\",\"supplementary_law\")", "expectedOutput": ""}, {"Line": 140, "Input": "Arnold Smith is the mechanic from the body shop.", "actualOutput": "RelationClaim(\"arnold smith\",\"IsA\",\"mechanic\")\nRelationClaim(\"mechanic\",\"WorksAt\",\"body shop\")", "expectedOutput": ""}, {"Line": 141, "Input": "Arnold Grohl is the drummer from the grunge band.", "actualOutput": "RelationClaim(arnold_grohl,\"IsA\",drummer)\nRelationClaim(drummer,\"PlaysFor\",grunge_band)", "expectedOutput": ""}, {"Line": 142, "Input": "Sally enjoys swimming and running marathons.", "actualOutput": "RelationClaim(\"sally\",\"enjoys\",\"swimming\")\nRelationClaim(\"sally\",\"enjoys\",\"running\")\nRelationClaim(\"swimming\",\"IsA\",\"physical_activity\")\nRelationClaim(\"running\",\"IsA\",\"physical_activity\")\nRelationClaim(\"marathons\",\"AreA\",\"long_distance_race\")", "expectedOutput": ""}, {"Line": 143, "Input": "Matthew wants to send a postcard and a package.", "actualOutput": "RelationClaim(matthew, \"Wants\", send)\nRelationClaim(send, \"Includes\", postcard)\nRelationClaim(send, \"Includes\", package)", "expectedOutput": ""}, {"Line": 144, "Input": "the woman who was on the stage saw Sally.", "actualOutput": "RelationClaim(woman, \"WasOn\", stage)\nRelationClaim(woman, \"Saw\", sally)", "expectedOutput": ""}, {"Line": 145, "Input": "the dancer who Andrew saw also saw Steve.", "actualOutput": "RelationClaim(dancer, \"Saw\", andrew)\nRelationClaim(dancer, \"Saw\", steve)", "expectedOutput": ""}, {"Line": 146, "Input": "\"Merlin, my father the physician, is very smart.\"", "actualOutput": "PropertyClaim(\"merlin\",\"IsA\",\"physician\")\nPropertyClaim(\"merlin\",\"IsA\",\"father\")\nPropertyClaim(\"merlin\",\"HasProperty\",\"smart\")\n", "expectedOutput": ""}, {"Line": 147, "Input": "\"Janet and Kramer, journalists, reported the news.\"", "actualOutput": "RelationClaim(janet, \"IsA\", journalist)\nRelationClaim(kramer, \"IsA\", journalist)\nRelationClaim(janet, \"Reported\", news)\nRelationClaim(kramer, \"Reported\", news)", "expectedOutput": ""}, {"Line": 148, "Input": "\"Barry and Larry, the peanuts, were assaulted.\"", "actualOutput": "RelationClaim(\"barry\",\"wereAssaulted\",\"peanuts\")\nRelationClaim(\"larry\",\"wereAssaulted\",\"peanuts\")\nNegatedRelationClaim(\"barry\",\"wereAssaulted\",\"larry\")\nNegatedRelationClaim(\"larry\",\"wereAssaulted\",\"barry\")", "expectedOutput": ""}, {"Line": 149, "Input": "\"Priscilla likes Harry and Ronald, the captain.\"", "actualOutput": "RelationClaim(priscilla, \"Likes\", harry)\nRelationClaim(priscilla, \"Likes\", ronald)\nRelationClaim(priscilla, \"Likes\", captain)\nNegatedRelationClaim(harry, \"Likes\", captain)\nNegatedRelationClaim(ronald, \"Likes\", captain)", "expectedOutput": ""}, {"Line": 150, "Input": "\"John, the janitor, and Mary dated.\"", "actualOutput": "RelationClaim(\"john\",\"dated\", \"mary\")\nRelationClaim(\"janitor\",\"dated\", \"mary\")\nRelationClaim(\"john\",\"dated\", \"janitor\")", "expectedOutput": ""}, {"Line": 151, "Input": "\"Phoebe and Rita, from Panama, the singers, saw the accident.\"", "actualOutput": "RelationClaim(phoebe, \"Saw\", accident)\nRelationClaim(rita, \"Saw\", accident)\nPropertyClaim(phoebe, \"IsFrom\", panama)\nPropertyClaim(rita, \"IsFrom\", panama)\nPropertyClaim(phoebe, \"Is\", singer)\nPropertyClaim(rita, \"Is\", singer)", "expectedOutput": ""}, {"Line": 152, "Input": "\"the man with Ernie, Carlton, bought a turtle.\"", "actualOutput": "RelationClaim(man, \"Has\", ernie)\nRelationClaim(man, \"Has\", carlton)\nRelationClaim(man, \"Bought\", turtle)", "expectedOutput": ""}, {"Line": 153, "Input": "\"Alex can choose between (i) the cat, and (ii) the dog.\"", "actualOutput": "RelationClaim(alex, \"CanChooseBetween\", cat)\nRelationClaim(alex, \"CanChooseBetween\", dog)", "expectedOutput": ""}, {"Line": 154, "Input": "The store the lady shopped at is closed.", "actualOutput": "RelationClaim(store,\"IsA\",building)\nRelationClaim(lady,\"ShopAt\",store)\nNegatedRelationClaim(store,\"IsOpen\",not)", "expectedOutput": ""}, {"Line": 155, "Input": "The old woman given cats arrived at the vet.", "actualOutput": "PropertyClaim(\"old woman\",\"HasProperty\",\"given\")\nRelationClaim(\"old woman\",\"arrived at\",\"vet\")\nRelationClaim(\"cats\",\"given to\",\"old woman\")\nRelationClaim(\"cats\",\"arrived at\",\"vet\")", "expectedOutput": ""}, {"Line": 156, "Input": "Arnold saw the park where Phil ate bananas.", "actualOutput": "RelationClaim(arnold, \"Saw\", park)\nRelationClaim(park, \"Where\", phil_ate_bananas)\nPropertyClaim(phil, \"Ate\", bananas)", "expectedOutput": ""}, {"Line": 157, "Input": "Jackie saw Alisha from Illinois and the beach who likes volleyball.", "actualOutput": "RelationClaim(jackie,\"saw\",alisha)\nRelationClaim(alisha,\"isfrom\",illinois)\nRelationClaim(beach,\"likes\",volleyball)", "expectedOutput": ""}, {"Line": 158, "Input": "The memo about vacation said Valentine's Day will be added.", "actualOutput": "PropertyClaim(memo,\"IsAbout\",vacation)\nRelationClaim(valentine's day,\"WillBeAddedTo\",vacation)", "expectedOutput": ""}, {"Line": 159, "Input": "\"Ann must hurry, otherwise, the train will leave without her.\"", "actualOutput": "NegatedPropertyClaim(\"ann\",\"HasProperty\",\"relaxed\")\nRelationClaim(\"train\",\"WillLeaveWithout\",\"ann\")\nRelationClaim(\"ann\",\"Must\",\"hurry\")", "expectedOutput": ""}, {"Line": 160, "Input": "\"Doreen has a main camera, the Rolleiflex.\"", "actualOutput": "PropertyClaim(\"doreen\",\"HasProperty\",\"main\")\nRelationClaim(\"doreen\",\"HasA\",\"rolleiflex\")", "expectedOutput": ""}, {"Line": 161, "Input": "Anita's favorite food is soup dumplings.", "actualOutput": "RelationClaim(anita,\"HasFavoriteFood\",soup_dumplings)\nRelationClaim(soup_dumplings,\"IsA\",food)\nPropertyClaim(soup_dumplings,\"IsFavorite\",anita)", "expectedOutput": ""}, {"Line": 162, "Input": "The winner is a pilot.", "actualOutput": "RelationClaim(winner, \"IsA\", pilot)", "expectedOutput": ""}, {"Line": 163, "Input": "Jack is the winner.", "actualOutput": "RelationClaim(jack, \"IsA\", winner)", "expectedOutput": ""}, {"Line": 164, "Input": "Emily is the pilot I'm talking about.", "actualOutput": "RelationClaim(emily,\"IsA\",pilot)\nPropertyClaim(emily,\"HasProperty\",talked_about)\nNegatedRelationClaim(emily,\"IsA\",winner)\nNegatedRelationClaim(emily,\"IsA\",vet)", "expectedOutput": ""}, {"Line": 165, "Input": "The blue truck is the truck inside the garage.", "actualOutput": "RelationClaim(blue, \"IsA\", truck)\nRelationClaim(truck, \"IsTheSameAs\", truck_inside_garage)\nRelationClaim(truck_inside_garage, \"IsInside\", garage)", "expectedOutput": ""}, {"Line": 166, "Input": "The truck on the street is the green truck.", "actualOutput": "RelationClaim(truck,\"IsA\",vehicle)\nRelationClaim(truck,\"IsOn\",street)\nPropertyClaim(truck,\"Color\",\"green\")", "expectedOutput": ""}, {"Line": 167, "Input": "Charles is Ray's new turtle.", "actualOutput": "RelationClaim(charles, \"IsA\", turtle)\nRelationClaim(ray, \"HasProperty\", new)\nRelationClaim(ray, \"Has\", turtle)", "expectedOutput": ""}, {"Line": 168, "Input": "Devin's car's top speed is 200 mph.", "actualOutput": "RelationClaim(car, \"HasOwner\", devin)\nPropertyClaim(car, \"HasTopSpeed\", 200)\nPropertyClaim(car, \"SpeedUnit\", \"mph\")", "expectedOutput": ""}, {"Line": 169, "Input": "Leland's car's top speed is 185 mph.", "actualOutput": "PropertyClaim(car,topspeed,185)\nRelationClaim(car,has,topspeed)\nRelationClaim(car,belongsto,leland)", "expectedOutput": ""}, {"Line": 170, "Input": "Carol's car's top speed is 180 mph.", "actualOutput": "PropertyClaim(carol_car_topspeed,\"IsEqualTo\",180)\nRelationClaim(carol,\"Owns\",carol_car)\nRelationClaim(carol_car,\"BelongsTo\",leland)\nPropertyClaim(carol_car,\"HasTopSpeed\",180)\nPropertyClaim(carol_car,\"SpeedUnit\",\"mph\")", "expectedOutput": ""}, {"Line": 171, "Input": "Ken's car's top speed is 175 mph.", "actualOutput": "PropertyClaim(car, \"HasOwner\", ken)\nRelationClaim(car, \"HasTopSpeed\", 175)\nPropertyClaim(car, \"SpeedUnit\", mph)", "expectedOutput": ""}, {"Line": 172, "Input": "Owne's car's top speed is 160 mph.", "actualOutput": "PropertyClaim(PropertyClaim(NegatedRelationClaim(\"car\",\"belongsto\",\"owner\"),\"hastopspeed\",\"160\"),\"speedunit\",\"mph\")", "expectedOutput": ""}, {"Line": 173, "Input": "Carla's car's top speed is 140 mph.", "actualOutput": "PropertyClaim(carla's car's top speed, \"Is\", 140)\nPropertyClaim(carla's car's top speed, \"HasUnit\", mph)\nRelationClaim(carla's car, \"BelongsTo\", carla)\nRelationClaim(carla's car, \"IsA\", car)", "expectedOutput": ""}, {"Line": 174, "Input": "Kristina's car's top speed is 130 mph.", "actualOutput": "PropertyClaim(car,\"BelongsTo\",kristina)\nPropertyClaim(car,\"HasProperty\",topspeed)\nRelationClaim(topspeed,\"IsA\",mph)\nPropertyClaim(topspeed,\"=\",130)", "expectedOutput": ""}, {"Line": 175, "Input": "Robert's sister's cat Toby is at the vet because he needs some shots.", "actualOutput": "PropertyClaim(cat,\"BelongsTo\",\"Robert's sister\")\nPropertyClaim(cat,\"Name\",\"Toby\")\nRelationClaim(cat,\"IsAt\",\"Vet\")\nPropertyClaim(Toby,\"Needs\",\"Shots\")", "expectedOutput": ""}, {"Line": 176, "Input": "Robert's nickname is Rob.", "actualOutput": "RelationClaim(robert, \"HasNickname\", rob)", "expectedOutput": ""}, {"Line": 177, "Input": "Robert is Gina's brother.", "actualOutput": "RelationClaim(robert,\"IsA\",person)\nRelationClaim(gina,\"IsA\",person)\nRelationClaim(robert,\"IsSiblingOf\",gina)\nPropertyClaim(robert,\"Gender\",male)", "expectedOutput": ""}, {"Line": 178, "Input": "Toby is friendly.", "actualOutput": "RelationClaim(\"toby\",\"IsA\",\"cat\")\nPropertyClaim(\"toby\",\"HasProperty\",\"friendly\")", "expectedOutput": ""}, {"Line": 179, "Input": "Mammals are warm blooded.", "actualOutput": "RelationClaim(mammals,\"Are\",warm-blooded)", "expectedOutput": ""}, {"Line": 180, "Input": "\"Paul, Alice's primary doctor, is cool.\"", "actualOutput": "PropertyClaim(\"paul\",\"IsCool\",True)", "expectedOutput": ""}, {"Line": 181, "Input": "Alice's new doctor is Kathy.", "actualOutput": "PropertyClaim(alice, \"HasProperty\", new)\nRelationClaim(doctor, \"IsA\", new)\nRelationClaim(doctor, \"IsA\", kathy)", "expectedOutput": ""}, {"Line": 182, "Input": "Alice's cool doctor is accepting new clients.", "actualOutput": "PropertyClaim(\"alice\",\"HasProperty\",\"cool\")\nRelationClaim(\"cool\",\"IsA\",\"doctor\")\nRelationClaim(\"doctor\",\"Accepts\",\"clients\")\nPropertyClaim(\"clients\",\"HasProperty\",\"new\")", "expectedOutput": ""}, {"Line": 183, "Input": "Sofia's daughter Courtney wants mango which is her favorite snack.", "actualOutput": "RelationClaim(\"sofia\",\"HasDaughter\",\"courtney\")\nRelationClaim(\"courtney\",\"Wants\",\"mango\")\nRelationClaim(\"mango\",\"IsA\",\"snack\")\nPropertyClaim(\"mango\",\"HasProperty\",\"favorite\")\nPropertyClaim(\"mango\",\"HasProperty\",\"courtney's\")", "expectedOutput": ""}, {"Line": 184, "Input": "Sofia saw that the mango was rotten so she threw it away.", "actualOutput": "sofia saw mango. mango hasproperty rotten. sofia throw mango.", "expectedOutput": ""}, {"Line": 185, "Input": "Sofia got her daughter some chips instead.", "actualOutput": "sofia hasdaughter courtney.\nchips isa snack.\nsnack hasproperty favorite.\ncourtney want favorite.", "expectedOutput": ""}, {"Line": 186, "Input": "Westley gets that success requires hard work and passionate determination.", "actualOutput": "westley accept success. \nsuccess require hardwork. \nsuccess require determination. \nhardwork isa requirement. \ndetermination isa requirement. \nhardwork compareto passionate. \ndetermination compareto passionate. \npassionate compareto hardwork.", "expectedOutput": ""}, {"Line": 187, "Input": "\"Luckily, he got them from his parents.\"", "actualOutput": "he hasproperty parents lucky.", "expectedOutput": ""}, {"Line": 188, "Input": "The race is challenging.", "actualOutput": "RelationClaim(race,IsA,challenging)", "expectedOutput": ""}, {"Line": 189, "Input": "The boys go for it.", "actualOutput": "RelationClaim(boys, go, it)", "expectedOutput": ""}, {"Line": 190, "Input": "In 2017 Elijah went to Russia and Brazil.", "actualOutput": "TimeClaim(2017,\"OccurredOn\",year)\nRelationClaim(elijah,\"WentTo\",russia)\nRelationClaim(elijah,\"WentTo\",brazil)", "expectedOutput": ""}, {"Line": 191, "Input": "Jenny went to Reed College.", "actualOutput": "RelationClaim(jenny, \"wentTo\", reedcollege)", "expectedOutput": ""}, {"Line": 192, "Input": "Reed College is a school.", "actualOutput": "RelationClaim(\"reed college\",\"IsA\",\"school\")", "expectedOutput": ""}, {"Line": 193, "Input": "Alexa is more rigid than Aigo.", "actualOutput": "RelationClaim(\"alexa\",\"IsMoreRigidThan\",\"aigo\")", "expectedOutput": ""}, {"Line": 194, "Input": "Aiden is having chicken for dinner with Marcy on Saturday.", "actualOutput": "PropertyClaim(\"aiden\",\"HasProperty\",\"chicken\")\nRelationClaim(\"aiden\",\"IsHaving\",\"dinner\")\nRelationClaim(\"dinner\",\"IsWith\",\"marcy\")\nRelationClaim(\"dinner\",\"IsOn\",\"saturday\")", "expectedOutput": ""}, {"Line": 195, "Input": "Aiden is having fish for dinner on Sunday with potatoes with Rob.", "actualOutput": "PropertyClaim(\"aiden\", \"HasProperty\", \"fish\")\nRelationClaim(\"aiden\", \"IsHaving\", \"dinner\")\nRelationClaim(\"dinner\", \"IsOn\", \"sunday\")\nPropertyClaim(\"dinner\", \"HasProperty\", \"potatoes\")\nRelationClaim(\"dinner\", \"IsWith\", \"rob\")", "expectedOutput": ""}, {"Line": 196, "Input": "John ate pasta with meatballs with a fork and spoon with Mary.", "actualOutput": "RelationClaim(john, \"Ate\", pasta)\nRelationClaim(pasta, \"HasProperty\", meatballs)\nRelationClaim(john, \"Used\", fork)\nRelationClaim(john, \"Used\", spoon)\nRelationClaim(john, \"WasWith\", mary)", "expectedOutput": ""}, {"Line": 197, "Input": "\"An email's parts are a sender, a recipient, a subject, and a message.\"", "actualOutput": "RelationClaim(\"email\",\"HasPart\",\"sender\")\nRelationClaim(\"email\",\"HasPart\",\"recipient\")\nRelationClaim(\"email\",\"HasPart\",\"subject\")\nRelationClaim(\"email\",\"HasPart\",\"message\")", "expectedOutput": ""}, {"Line": 198, "Input": "I got a new email.", "actualOutput": "RelationClaim(\"i\",\"got\",\"email\")\nNegatedRelationClaim(\"email\",\"isA\",\"spam\")\nPropertyClaim(\"email\",\"hasProperty\",\"new\")\nNegatedPropertyClaim(\"email\",\"hasProperty\",\"unread\")", "expectedOutput": ""}, {"Line": 199, "Input": "farms are important.", "actualOutput": "RelationClaim(farms, \"Are\", important)", "expectedOutput": ""}, {"Line": 200, "Input": "farms are common in Texas.", "actualOutput": "RelationClaim(farms, \"AreCommonIn\", texas)", "expectedOutput": ""}, {"Line": 201, "Input": "The farm for vegetables is small.", "actualOutput": "PropertyClaim(\"farm for vegetables\",\"HasProperty\",\"small\")", "expectedOutput": ""}, {"Line": 202, "Input": "Isabella has a big farm.", "actualOutput": "PropertyClaim(\"isabella\",\"HasProperty\",\"big\")\nRelationClaim(\"isabella\",\"Has\",\"farm\")", "expectedOutput": ""}, {"Line": 203, "Input": "Rogelio watched 5 movies and the first was fun.", "actualOutput": "RelationClaim(rogelio, \"Watched\", \"5_movies\")\nRelationClaim(\"first\", \"IsA\", \"fun\")\nRelationClaim(\"first\", \"IsA\", \"movie\")\nRelationClaim(\"first\", \"IsA\", \"watched_movie\")", "expectedOutput": ""}, {"Line": 204, "Input": "The association wrote 5 papers and the first got published.", "actualOutput": "RelationClaim(association, wrote, 5_papers)\nRelationClaim(first, got_published, None)\nRelationClaim(5_papers, have, association)", "expectedOutput": ""}, {"Line": 205, "Input": "Xena ordered a small drink and Billson ordered a large.", "actualOutput": "RelationClaim(xena, \"Ordered\", drink)\nPropertyClaim(drink, \"HasProperty\", small)\nRelationClaim(billson, \"Ordered\", drink)\nPropertyClaim(drink, \"HasProperty\", large)", "expectedOutput": ""}, {"Line": 206, "Input": "Vera called up three lawyers and fired a few.", "actualOutput": "RelationClaim(vera, \"CalledUp\", three_lawyers)\nNegatedRelationClaim(vera, \"Fired\", a_few)\n", "expectedOutput": ""}, {"Line": 207, "Input": "Bibi solved 10 cases and dropped a few.", "actualOutput": "RelationClaim(bibi,\"Solved\",10)\nNegatedRelationClaim(bibi,\"Dropped\",\"Cases\")\nPropertyClaim(bibi,\"Believes\",True)", "expectedOutput": ""}, {"Line": 208, "Input": "Larkin made a dozen arguments and Carl made two.", "actualOutput": "RelationClaim(larkin, \"Made\", dozen)\nRelationClaim(carl, \"Made\", two)", "expectedOutput": ""}, {"Line": 209, "Input": "Dogs are friendly.", "actualOutput": "RelationClaim(\"dogs\",\"Are\",\"friendly\")", "expectedOutput": ""}, {"Line": 210, "Input": "Robert's dog isn't friendly.", "actualOutput": "NegatedPropertyClaim(dog,\"HasProperty\",friendly)", "expectedOutput": ""}, {"Line": 211, "Input": "Sam walked her own dog.", "actualOutput": "RelationClaim(sam, \"Walked\", dog)\nRelationClaim(dog, \"IsA\", dog)\nPropertyClaim(dog, \"HasProperty\", friendly)", "expectedOutput": ""}, {"Line": 212, "Input": "The whale is owned by San Diego's zoo and Santa Clarita's.", "actualOutput": "RelationClaim(whale,\"IsOwnedBy\",zoo)\nRelationClaim(whale,\"IsOwnedBy\",santa_clarita)\nRelationClaim(zoo,\"IsLocatedIn\",san_diego)\nRelationClaim(santa_clarita,\"IsLocatedIn\",santa_clarita)", "expectedOutput": ""}, {"Line": 213, "Input": "Jenna's father talked to her.", "actualOutput": "RelationClaim(father, talkedTo, jenna)", "expectedOutput": ""}, {"Line": 214, "Input": "Sandra's mother talked to herself.", "actualOutput": "PropertyClaim(sandra's mother, \"HasProperty\", talkative)\nRelationClaim(sandra's mother, talked to, herself)", "expectedOutput": ""}, {"Line": 215, "Input": "Samuel cleaned the medal so that it would shine.", "actualOutput": "RelationClaim(samuel, \"Cleaned\", medal)\nPropertyClaim(medal, \"HasProperty\", shiny)", "expectedOutput": ""}, {"Line": 216, "Input": "Igor is male.", "actualOutput": "RelationClaim(\"igor\",\"IsA\",\"male\")", "expectedOutput": ""}, {"Line": 217, "Input": "Esma is a girl.", "actualOutput": "RelationClaim(\"esma\",\"IsA\",\"girl\")", "expectedOutput": ""}, {"Line": 218, "Input": "Igor threatened Esma.", "actualOutput": "RelationClaim(igor, \"Threatened\", esma)", "expectedOutput": ""}, {"Line": 219, "Input": "Esma shot him.", "actualOutput": "NegatedPropertyClaim(esma,\"HasProperty\",friendly)\nNegatedRelationClaim(esma,\"IsA\",male)\nNegatedRelationClaim(esma,\"IsA\",dog)\nNegatedRelationClaim(esma,\"IsA\",whale)", "expectedOutput": ""}, {"Line": 220, "Input": "Esma's mother fed her.", "actualOutput": "PropertyClaim(\"esma's mother\",\"HasProperty\",\"fed\")\nRelationClaim(\"esma's mother\",\"Fed\",\"her\")", "expectedOutput": ""}, {"Line": 221, "Input": "Lydia felt sick.", "actualOutput": "PropertyClaim(\"lydia\",\"HasProperty\",\"sick\")", "expectedOutput": ""}, {"Line": 222, "Input": "She sent herself to the hospital.", "actualOutput": "self hasproperty sent\nself sentto hospital\nhospital isa hospital\nhospital islocatedin city", "expectedOutput": ""}, {"Line": 223, "Input": "Jewels are pretty.", "actualOutput": "RelationClaim(jewels,\"Are\",pretty)", "expectedOutput": ""}, {"Line": 224, "Input": "The jewels are stolen by the heirs.", "actualOutput": "RelationClaim(jewels,\"AreStolenBy\",heirs)", "expectedOutput": ""}, {"Line": 225, "Input": "They are bright and pretty.", "actualOutput": "RelationClaim(\"they\",\"Are\",\"bright\")\nPropertyClaim(\"they\",\"HasProperty\",\"pretty\")", "expectedOutput": ""}, {"Line": 226, "Input": "The girls wanted the flowers.", "actualOutput": "RelationClaim(girls, \"wanted\", flowers)", "expectedOutput": ""}, {"Line": 227, "Input": "They bought them.", "actualOutput": "RelationClaim(they, \"Bought\", them)", "expectedOutput": ""}, {"Line": 228, "Input": "The door is locked because Mort locked it.", "actualOutput": "RelationClaim(door, \"IsA\", door)\nRelationClaim(door, \"IsLocked\", true)\nRelationClaim(mort, \"Locked\", door)\nNegatedRelationClaim(door, \"IsLocked\", false)", "expectedOutput": ""}, {"Line": 229, "Input": "Charles ate at the park and Mimi met him there.", "actualOutput": "RelationClaim(charles,\"AteAt\",park)\nRelationClaim(mimi,\"Met\",him)", "expectedOutput": ""}, {"Line": 230, "Input": "Archie waited eagerly for the reply", "actualOutput": "PropertyClaim(archie,\"HasProperty\",eagerly)\nRelationClaim(archie, \"waited for\", reply)", "expectedOutput": ""}, {"Line": 231, "Input": "It was late.", "actualOutput": "PropertyClaim(\"it\",\"HasProperty\",\"late\")", "expectedOutput": ""}, {"Line": 232, "Input": "Archie can't wait for the celebration.", "actualOutput": "NegatedRelationClaim(archie, \"wait\", celebration)", "expectedOutput": ""}, {"Line": 233, "Input": "It's with Jane.", "actualOutput": "PropertyClaim(\"it\",\"IsWith\",\"jane\")", "expectedOutput": ""}, {"Line": 234, "Input": "Molly's clock ticked throughout night.", "actualOutput": "PropertyClaim(\"molly's clock\",\"ticks\",\"throughout night\")", "expectedOutput": ""}, {"Line": 235, "Input": "It drove her crazy.", "actualOutput": "PropertyClaim(\"it\",\"HasProperty\",\"driving\")\nRelationClaim(\"it\",\"Causes\",\"craziness\")\nRelationClaim(\"it\",\"IsA\",\"vehicle\")\nRelationClaim(\"it\",\"IsA\",\"car\")\nNegatedRelationClaim(\"her\",\"Likes\",\"driving\")", "expectedOutput": ""}, {"Line": 236, "Input": "Marty got a compliment.", "actualOutput": "PropertyClaim(marty, \"HasProperty\", compliment)", "expectedOutput": ""}, {"Line": 237, "Input": "It made him feel good.", "actualOutput": "PropertyClaim(\"it\",\"MakesFeel\",\"good\")\nRelationClaim(\"it\",\"Made\",\"him\")\nRelationClaim(\"him\",\"Feel\",\"good\")", "expectedOutput": ""}, {"Line": 238, "Input": "I am studying in the library.", "actualOutput": "RelationClaim(\"i\",\"studying in\",\"library\")\nNegatedRelationClaim(\"i\",\"not studying in\",\"library\")\nRelationClaim(\"library\",\"IsA\",\"place\")\nPropertyClaim(\"library\",\"HasProperty\",\"quiet\")\nNegatedPropertyClaim(\"library\",\"not HasProperty\",\"noisy\")", "expectedOutput": ""}, {"Line": 239, "Input": "\"Pyotr was studying there, too.\"", "actualOutput": "RelationClaim(pyotr,\"IsStudyingIn\",there)\n", "expectedOutput": ""}, {"Line": 240, "Input": "The students have their books.", "actualOutput": "RelationClaim(students, \"Have\", books)", "expectedOutput": ""}, {"Line": 241, "Input": "They have many pages.", "actualOutput": "PropertyClaim(\"they\",\"HasProperty\",\"many\")\nRelationClaim(\"they\",\"Have\",\"pages\")", "expectedOutput": ""}, {"Line": 242, "Input": "Kristopher's cat is brown; it likes pickles.", "actualOutput": "RelationClaim(cat,\"BelongsTo\",kristopher)\nPropertyClaim(cat,\"HasColor\",brown)\nPropertyClaim(cat,\"Likes\",pickles)", "expectedOutput": ""}, {"Line": 243, "Input": "Glen ate a good cake with chocolate.", "actualOutput": "RelationClaim(glen, \"Ate\", cake)\nPropertyClaim(cake, \"HasProperty\", good)\nPropertyClaim(cake, \"HasProperty\", chocolate)", "expectedOutput": ""}, {"Line": 244, "Input": "Glen ate a bad sandwich with cheese.", "actualOutput": "RelationClaim(glen, \"Ate\", sandwich)\nPropertyClaim(sandwich, \"HasProperty\", bad)\nRelationClaim(sandwich, \"HasIngredient\", cheese)", "expectedOutput": ""}, {"Line": 245, "Input": "Tigger is a pet.", "actualOutput": "RelationClaim(\"tigger\",\"IsA\",\"pet\")", "expectedOutput": ""}, {"Line": 246, "Input": "Tigger needs to get washed because Tigger is dirty.", "actualOutput": "RelationClaim(\"tigger\",\"Needs\", \"Washed\")\nRelationClaim(\"tigger\",\"IsA\",\"Pet\")\nPropertyClaim(\"tigger\",\"HasProperty\",\"Dirty\")", "expectedOutput": ""}, {"Line": 247, "Input": "I'm taking care of Milly's green car.", "actualOutput": "NegatedRelationClaim(I,\"TakingCareOf\",milly) \nNegatedRelationClaim(milly,\"Owns\",car) \nPropertyClaim(car,\"HasProperty\",\"Green\")", "expectedOutput": ""}, {"Line": 248, "Input": "I saw Deanna's purple lamp.", "actualOutput": "RelationClaim(i,\"saw\",\"deanna's purple lamp\")", "expectedOutput": ""}, {"Line": 249, "Input": "Yahoo (YHOO) and Microsoft (MSFT) decided to push back the deadline to renegotiate their 10-year search deal by about a month.", "actualOutput": "NegatedRelationClaim(yhoo, \"Renegotiate\", msft)\nRelationClaim(yhoo, \"DecidedToPushBack\", deadline)\nPropertyClaim(deadline, \"IsAbout\", \"1Month\")", "expectedOutput": ""}, {"Line": 250, "Input": "The tech giants joined forces in 2010 to better compete against Google (GOOG).", "actualOutput": "tech giants join forces compete google.", "expectedOutput": ""}, {"Line": 251, "Input": "Yahoo's CEO Marissa Mayer has expressed her dissatisfaction with the terms of the partnership.", "actualOutput": "PropertyClaim(\"marissa mayer\",\"HasProperty\",\"CEO\")\nRelationClaim(\"yahoo\",\"IsA\",\"company\")\nNegatedRelationClaim(\"marissa mayer\",\"IsA\",\"dissatisfied\")\nRelationClaim(\"terms\",\"IsA\",\"partnership\")\nRelationClaim(\"yahoo\",\"HasProperty\",\"partnership\")\nRelationClaim(\"marissa mayer\",\"Expressed\",\"dissatisfaction\")\nRelationClaim(\"marissa mayer\",\"HasProperty\",\"dissatisfaction\")\nRelationClaim(\"dissatisfaction\",\"IsA\",\"feeling\")", "expectedOutput": ""}, {"Line": 252, "Input": "\"Verallia, which manufactures glass bottles and jars and is the main supplier of bottles for France's champagne and cognac industries, generated 2.39 billion euros in sales and 230 million euros in operating income last year.\"", "actualOutput": "RelationClaim(verallia,manufactures,glass bottles and jars)\nRelationClaim(verallia,is main supplier of,bottles for france's champagne and cognac industries)\nPropertyClaim(verallia,generated,2.39 billion euros in sales)\nPropertyClaim(verallia,generated,230 million euros in operating income)", "expectedOutput": ""}, {"Line": 253, "Input": "\"It has 47 plants in 13 countries and employs nearly 10,000 people.\"", "actualOutput": "Plant hasproperty locatedin country. Country hasproperty numberofplants 47. Plant hasproperty numberofemployees 10000.", "expectedOutput": ""}, {"Line": 254, "Input": "Jo Jo will only pay for charges billed by timekeepers approved by inside counsel.", "actualOutput": "NegatedRelationClaim(jo,\"PayFor\",charges)\nRelationClaim(timekeepers,\"ApprovedBy\",inside_counsel)", "expectedOutput": ""}, {"Line": 255, "Input": "\"Jo Jo requires that outside counsel utilize the task, activity and expense codes.\"", "actualOutput": "RelationClaim(jo,\"Requires\",outside_counsel)\nRelationClaim(outside_counsel,\"Utilize\",task)\nRelationClaim(outside_counsel,\"Utilize\",activity)\nRelationClaim(outside_counsel,\"Utilize\",expense_codes)", "expectedOutput": ""}, {"Line": 256, "Input": "Jo Jo will not pay for more than one attorney to attend a deposition.", "actualOutput": "NegatedRelationClaim(jo,\"PayFor\",attorney)\nPropertyClaim(jo,\"Attend\",deposition)\nNegatedRelationClaim(jo,\"PayForMoreThan\",one)", "expectedOutput": ""}, {"Line": 257, "Input": "An actor will pay for a patient to attend an object implies the patient can attend the object.", "actualOutput": "RelationClaim(actor, \"WillPayFor\", patient)\nRelationClaim(patient, \"CanAttend\", object)", "expectedOutput": ""}, {"Line": 258, "Input": "The lead inside counsel must approve all timekeepers prior to their billing on a matter.", "actualOutput": "RelationClaim(lead, \"IsA\", inside_counsel)\nRelationClaim(timekeeper, \"IsA\", timekeeper)\nRelationClaim(timekeeper, \"IsBilledOn\", matter)\nRelationClaim(timekeeper, \"MustBeApprovedBy\", lead)\nNegatedRelationClaim(timekeeper, \"BilledOn\", matter)\nNegatedRelationClaim(timekeeper, \"ApprovedBy\", lead)", "expectedOutput": ""}, {"Line": 259, "Input": "Jo Jo will not provide blanket waivers and all prior blanket waivers are hereby revoked.", "actualOutput": "NegatedRelationClaim(jo,\"Provide\", \"BlanketWaivers\")\nNegatedRelationClaim(\"AllPriorBlanketWaivers\",\"AreRevoked\", \"\")\nPropertyClaim(\"AllPriorBlanketWaivers\",\"Revoked\", \"Hereby\")\n", "expectedOutput": ""}, {"Line": 260, "Input": "Each party will bear its own fees and expenses in connection with the arbitration and share equally the fees and expenses of the arbitrator.", "actualOutput": "RelationClaim(party, \"Bear\", fees_and_expenses)\nRelationClaim(party, \"ShareEquallyWith\", fees_and_expenses_of_arbitrator)\nPropertyClaim(arbitrator, \"IsA\", arbitrator)\nPropertyClaim(fees_and_expenses, \"HasProperty\", \"own\")\nPropertyClaim(fees_and_expenses_of_arbitrator, \"HasProperty\", \"equal\")\n", "expectedOutput": ""}, {"Line": 261, "Input": "\"Unless authorized expressly and in advance by the lead inside counsel, Jo Jo will only pay for coach air fare and mid-size rental cars.\"", "actualOutput": "NegatedRelationClaim(jo,\"PayFor\",air_fare)\nNegatedRelationClaim(jo,\"PayFor\",rental_cars)\nPropertyClaim(air_fare,\"IsA\",coach)\nPropertyClaim(rental_cars,\"IsA\",mid_size)\nNegatedRelationClaim(jo,\"AuthorizedBy\",lead)\nNegatedRelationClaim(jo,\"AuthorizedInAdvanceBy\",lead)", "expectedOutput": ""}, {"Line": 262, "Input": "A 12-year-old Israeli girl has discovered an ancient Egyptian amulet.", "actualOutput": "RelationClaim(\"israeli girl\",\"discovered\",\"ancient egyptian amulet\")\nRelationClaim(\"ancient egyptian amulet\",\"IsA\",\"amulet\")\nPropertyClaim(\"ancient egyptian amulet\",\"HasProperty\",\"ancient\")\nRelationClaim(\"ancient egyptian amulet\",\"IsFrom\",\"Egypt\")", "expectedOutput": ""}, {"Line": 263, "Input": "\"It dates back more than 3,200 years to the days of the Pharaohs, an official said.\"", "actualOutput": "ancient_egyptian_artifact hasproperty date_back\ndate_back hasproperty more_than_3_200_years\ndate_back isa days_of_pharaohs\nofficial say ancient_egyptian_artifact", "expectedOutput": ""}, {"Line": 264, "Input": "It bore the name of the Egyptian ruler Thutmose III.", "actualOutput": "PropertyClaim(\"it\",\"HasProperty\",\"name\")\nRelationClaim(\"name\",\"IsA\",\"ruler\")\nRelationClaim(\"ruler\",\"IsA\",\"Egyptian\")\nPropertyClaim(\"ruler\",\"HasProperty\",\"Thutmose III\")", "expectedOutput": ""}, {"Line": 265, "Input": "Neshama Spielman and her family took part in the Temple Mount Sifting Project.", "actualOutput": "RelationClaim(neshama, \"ParticipatedIn\", temple_mount_sifting_project)\nRelationClaim(her_family, \"ParticipatedIn\", temple_mount_sifting_project)\n", "expectedOutput": ""}, {"Line": 266, "Input": "It is an initiative to sort through earth discarded from the area of the biblical temples in Jerusalem.", "actualOutput": "Initiative isa effort.\nEffort hasproperty sorting.\nSorting isa process.\nProcess hasproperty discarding.\nDiscarding isa disposal.\nDisposal isa removal.\nRemoval isa action.\nAction hasproperty earth.\nEarth isa material.\nMaterial hasproperty discarded.\nDiscarded isa waste.\nWaste isfrom jerusalem.\nJerusalem hasproperty biblical temples.\nBiblical temples isa area.\nArea hasproperty sorting.\nSorting isa process.\nProcess hasproperty discarding.\nDiscarding isa disposal.\nDisposal isa removal.\nRemoval isa action.\nAction hasproperty earth.", "expectedOutput": ""}, {"Line": 267, "Input": "There she found a pendant-shaped amulet.", "actualOutput": "israeli_girl discover pendant-shaped amulet. \npendant-shaped amulet isa amulet. \namulet hasproperty pendant-shaped.", "expectedOutput": ""}, {"Line": 268, "Input": "The deepest hole we have ever carved out is just 9 inches across.", "actualOutput": "PropertyClaim(deepest_hole,\"IsA\",hole)\nPropertyClaim(deepest_hole,\"HasProperty\",deep)\nPropertyClaim(hole,\"HasProperty\",carved_out)\nPropertyClaim(hole,\"HasProperty\",size)\nRelationClaim(deepest_hole,\"IsJust\",9_inches)", "expectedOutput": ""}, {"Line": 269, "Input": "It was started by scientists in 1970.", "actualOutput": "it startedby scientists 1970.", "expectedOutput": ""}, {"Line": 270, "Input": "Super high temperatures stopped the Russian scientists from going any farther.", "actualOutput": "NegatedRelationClaim(russian_scientists, \"GoAnyFarther\", farther)\nPropertyClaim(super_high_temperatures, \"HasProperty\", high)\nNegatedRelationClaim(super_high_temperatures, \"Allow\", russian_scientists)\nNegatedRelationClaim(russian_scientists, \"GoAnyFarther\", farther)", "expectedOutput": ""}, {"Line": 271, "Input": "They found some pretty cool things along the way.", "actualOutput": "PropertyClaim(\"they\",\"Found\",\"cool_things\")\nNegatedRelationClaim(\"cool_things\",\"IsA\",\"boring_things\")\nRelationClaim(\"cool_things\",\"AlongTheWay\",\"they\")\nPropertyClaim(\"they\",\"Believe\",True)", "expectedOutput": ""}, {"Line": 272, "Input": "One of those things was free water.", "actualOutput": "PropertyClaim(things,\"Was\",free_water)\nNegatedRelationClaim(things,\"IsA\",not_free)\nNegatedPropertyClaim(free_water,\"HasProperty\",not_free)", "expectedOutput": ""}, {"Line": 273, "Input": "It was deeper than they ever thought it could possibly exist.", "actualOutput": "NegatedPropertyClaim(\"it\",\"HasProperty\",\"shallow\")\nRelationClaim(\"it\",\"IsA\",\"hole\")\nPropertyClaim(\"hole\",\"HasProperty\",\"deep\")\nNegatedRelationClaim(\"they\",\"thought\",\"it\")\nRelationClaim(\"it\",\"IsJust\",\"possible_exist\")", "expectedOutput": ""}, {"Line": 274, "Input": "And they found 2-billion-year-old fossils.", "actualOutput": "RelationClaim(they,found,2-billion-year-old fossils)", "expectedOutput": ""}, {"Line": 275, "Input": "\"Jane's band's director, Omar, is going shopping with Sam\"", "actualOutput": "RelationClaim(director, \"IsA\", omar)\nRelationClaim(band, \"HasProperty\", jane)\nRelationClaim(band, \"HasProperty\", director)\nRelationClaim(director, \"IsGoingWith\", sam)\nRelationClaim(sam, \"IsGoingWith\", omar)\nRelationClaim(omar, \"IsGoingShopping\", True)", "expectedOutput": ""}, {"Line": 276, "Input": "No bands are going to the competition.", "actualOutput": "NegatedRelationClaim(bands, \"AreGoingTo\", competition)", "expectedOutput": ""}, {"Line": 277, "Input": "Sending emails is the same as emailing.", "actualOutput": "RelationClaim(\"sending_emails\",\"IsTheSameAs\",\"emailing\")", "expectedOutput": ""}, {"Line": 278, "Input": "Emailing is the same as sending emails.", "actualOutput": "RelationClaim(\"emailing\",\"IsTheSameAs\",\"sending_emails\")", "expectedOutput": ""}, {"Line": 279, "Input": "Texting is the same as sending texts.", "actualOutput": "RelationClaim(\"texting\",\"IsTheSameAs\",\"sending_texts\")", "expectedOutput": ""}, {"Line": 280, "Input": "Sending texts is the same as texting.", "actualOutput": "RelationClaim(\"sending_texts\",\"IsTheSameAs\",\"texting\")", "expectedOutput": ""}, {"Line": 281, "Input": "Riding bikes is the same as biking.", "actualOutput": "RelationClaim(\"riding_bikes\",\"IsTheSameAs\",\"biking\")", "expectedOutput": ""}, {"Line": 282, "Input": "Biking is the same as riding bikes.", "actualOutput": "RelationClaim(\"biking\",\"IsTheSameAs\",\"riding_bike\")", "expectedOutput": ""}, {"Line": 283, "Input": "Giving hugs is the same as hugging.", "actualOutput": "RelationClaim(\"giving hugs\", \"isthesameas\", \"hugging\")", "expectedOutput": ""}, {"Line": 284, "Input": "Hugging is the same as giving hugs.", "actualOutput": "RelationClaim(\"hugging\", \"isthesameas\", \"giving_hugs\")", "expectedOutput": ""}, {"Line": 285, "Input": "Taking naps is the same as napping.", "actualOutput": "RelationClaim(\"taking naps\",\"isthesameas\",\"napping\")", "expectedOutput": ""}, {"Line": 286, "Input": "Napping is the same as taking naps.", "actualOutput": "RelationClaim(\"napping\",\"IsTheSameAs\",\"taking_naps\")", "expectedOutput": ""}, {"Line": 287, "Input": "Showering is the same as taking showers.", "actualOutput": "RelationClaim(\"showering\",\"IsTheSameAs\",\"taking_showers\")", "expectedOutput": ""}, {"Line": 288, "Input": "Taking showers is the same as showering.", "actualOutput": "RelationClaim(\"taking_showers\",\"IsTheSameAs\",\"showering\")", "expectedOutput": ""}, {"Line": 289, "Input": "Leaving a place is the same as departing the place.", "actualOutput": "RelationClaim(\"leaving\",\"IsTheSameAs\",\"departing\")", "expectedOutput": ""}, {"Line": 290, "Input": "Leaving an object somewhere is the same as forgetting the object somewhere.", "actualOutput": "RelationClaim(\"leaving\",\"IsTheSameAs\",\"forgetting\")\nRelationClaim(\"object\",\"IsA\",\"thing\")\nPropertyClaim(\"leaving\",\"RequiresAction\", \"movement\")\nPropertyClaim(\"forgetting\",\"RequiresAction\", \"memory\")", "expectedOutput": ""}, {"Line": 291, "Input": "Leaving a patient is the same as abandoning the patient.", "actualOutput": "RelationClaim(\"leaving\",\"IsTheSameAs\",\"abandoning\")\nRelationClaim(\"patient\",\"IsA\",\"person\")\nNegatedPropertyClaim(\"leaving\",\"HasProperty\",\"acceptable\")\nPropertyClaim(\"abandoning\",\"HasProperty\",\"unacceptable\")", "expectedOutput": ""}, {"Line": 292, "Input": "Leaving a patient an object is the same as entrusting the patient the object.", "actualOutput": "RelationClaim(\"leaving\",\"IsTheSameAs\",\"entrusting\") \nRelationClaim(\"patient\",\"Has\",\"object\") \nRelationClaim(\"entrusting\",\"Has\",\"patient\") \nPropertyClaim(\"patient\",\"CanBe\",\"trusted\") \nPropertyClaim(\"object\",\"CanBe\",\"entrusted\")", "expectedOutput": ""}, {"Line": 293, "Input": "Kicking the bucket is metaphorically the same as dying.", "actualOutput": "RelationClaim(\"kicking the bucket\",\"IsA\",\"dying\")", "expectedOutput": ""}, {"Line": 294, "Input": "An actor sent a patient an object implies the patient received the object.", "actualOutput": "RelationClaim(actor, \"Sent\", object)\nRelationClaim(patient, \"Received\", object)", "expectedOutput": ""}, {"Line": 295, "Input": "An actor sold a patient an object implies the patient bought the object.", "actualOutput": "RelationClaim(actor, \"Sold\", patient)\nRelationClaim(patient, \"Received\", object)", "expectedOutput": ""}, {"Line": 296, "Input": "Anastacia Shuttleworth sent an email to Otto Vantassel about his project.", "actualOutput": "RelationClaim(anastacia,\"sent\",email)\nRelationClaim(email,\"IsA\",message)\nRelationClaim(anastacia,\"IsA\",person)\nRelationClaim(otto,\"IsA\",person)\nRelationClaim(otto,\"HasProperty\",project)\nRelationClaim(email,\"SentTo\",otto)\nNegatedRelationClaim(anastacia,\"sent\",project) # False, since Anastacia did not send Otto's project\nNegatedRelationClaim(email,\"SentTo\",anastacia) # False, since the email was sent to Otto, not Anastacia\nNegatedPropertyClaim(anastacia,\"HasProperty\",project) # False, since Anastacia did not have Otto's project", "expectedOutput": ""}, {"Line": 297, "Input": "Grayce Molina sent packages to Ben Fernandez.", "actualOutput": "RelationClaim(grayce_molina, send, packages)\nRelationClaim(packages, sentto, ben_fernandez)", "expectedOutput": ""}, {"Line": 298, "Input": "Ellis Hamel sends texts to Joan Blanco.", "actualOutput": "RelationClaim(ellis_hamel, \"Sends\", texts)\nRelationClaim(texts, \"SentTo\", joan_blanco)", "expectedOutput": ""}, {"Line": 299, "Input": "Maya Molina sends a letter to Mark Restivo.", "actualOutput": "RelationClaim(\"maya molina\",\"send\",\"letter\")\nRelationClaim(\"letter\",\"sentto\",\"mark restivo\")", "expectedOutput": ""}, {"Line": 300, "Input": "Loise Monge rides bikes decently.", "actualOutput": "RelationClaim(loise, \"rides\", bikes)\nPropertyClaim(bikes, \"HasProperty\", decent)\nRelationClaim(loise, \"IsA\", person)", "expectedOutput": ""}, {"Line": 301, "Input": "Arnold Arno gives hugs to Matilda Aigner.", "actualOutput": "RelationClaim(arnold, \"Gives\", hugs)\nRelationClaim(hugs, \"To\", matilda_aigner)\nRelationClaim(matilda_aigner, \"IsA\", person)", "expectedOutput": ""}, {"Line": 302, "Input": "Amy Hamel takes naps in the afternoon.", "actualOutput": "RelationClaim(\"amy_hamel\",\"Takes\",\"naps\")\nRelationClaim(\"naps\",\"IsA\",\"rest\")\nPropertyClaim(\"naps\",\"HasProperty\",\"afternoon\")", "expectedOutput": ""}, {"Line": 303, "Input": "Jackie Peden takes showers in the evenings.", "actualOutput": "PropertyClaim(\"jackie\",\"Takes\",\"showers\")\nPropertyClaim(\"showers\",\"Are\",\"taken\")\nPropertyClaim(\"showers\",\"TakenIn\",\"evenings\")", "expectedOutput": ""}, {"Line": 304, "Input": "Kyle Hohl's goldfish kicked the bucket while he was on vacation.", "actualOutput": "PropertyClaim(kyle_hohl's_goldfish, \"HasProperty\", dead)\nNegatedRelationClaim(kyle_hohl's_goldfish, \"Kick\", bucket)\nRelationClaim(kyle_hohl, \"WasOn\", vacation)", "expectedOutput": ""}, {"Line": 305, "Input": "Lydia Tye played with a bucket.", "actualOutput": "RelationClaim(\"lydia_tye\",\"playedWith\",\"bucket\")", "expectedOutput": ""}, {"Line": 306, "Input": "She kicked the bucket down the street.", "actualOutput": "RelationClaim(she,kicked,bucket)\nRelationClaim(bucket,down_street,None)", "expectedOutput": ""}, {"Line": 307, "Input": "Jessie Dreiling left the basketball game at 3 pm.", "actualOutput": "RelationClaim(jessie,\"Left\",\"basketball_game\")\nRelationClaim(\"basketball_game\",\"IsA\",\"game\")\nPropertyClaim(\"basketball_game\",\"HasProperty\",\"fun\")\nRelationClaim(\"jessie\",\"LeftAt\",\"3_pm\")", "expectedOutput": ""}, {"Line": 308, "Input": "Julie Lybarger left the game at home.", "actualOutput": "RelationClaim(julie_lybarger, \"LeftAt\", home_game)", "expectedOutput": ""}, {"Line": 309, "Input": "Stevie Burleson left Melly Burleson for another woman.", "actualOutput": "NegatedRelationClaim(stevie_burleson,\"Left\",melly_burleson)\nRelationClaim(stevie_burleson,\"Left\",another_woman)\nNegatedRelationClaim(stevie_burleson,\"IsA\",melly_burleson)\nNegatedRelationClaim(another_woman,\"IsA\",melly_burleson)", "expectedOutput": ""}, {"Line": 310, "Input": "Darrell Tupper left Lola Vizcarra an entire fortune.", "actualOutput": "NegatedRelationClaim(darrell_tupper, \"Left\", lola_vizcarra)\nNegatedPropertyClaim(lola_vizcarra, \"HasProperty\", entire)\nRelationClaim(lola_vizcarra, \"HasProperty\", fortune)", "expectedOutput": ""}, {"Line": 311, "Input": "Brendon Potts promised Krystin Quail to leave.", "actualOutput": "RelationClaim(brendon_potts,\"Promised\",krystin_quail)\nNegatedRelationClaim(brendon_potts,\"Leave\",krystin_quail)", "expectedOutput": ""}, {"Line": 312, "Input": "Karl Betterton promised to leave Ewa Odum.", "actualOutput": "RelationClaim(karl,\"Promised\",leave)\nRelationClaim(karl,\"BetterThan\",ewa_odum)\nNegatedPropertyClaim(karl,\"HasProperty\",lazy)\nPropertyClaim(ewa_odum,\"HasProperty\",determined)", "expectedOutput": ""}, {"Line": 313, "Input": "Acie Newbury asked if dinner was ready.", "actualOutput": "RelationClaim(acie,\"Asked\",dinner)\nNegatedPropertyClaim(dinner,\"NotReady\",None)", "expectedOutput": ""}, {"Line": 314, "Input": "Abner Abbas asked for a drink.", "actualOutput": "RelationClaim(abner_abbas, \"AskedFor\", drink)", "expectedOutput": ""}, {"Line": 315, "Input": "Santo Sober asked Elaina Booe over for dinner.", "actualOutput": "PropertyClaim(\"santo\",\"Sober\",True)\nRelationClaim(\"santo\",\"Asked\", \"elaina_booe\")\nRelationClaim(\"elaina_booe\",\"OverFor\",\"dinner\")", "expectedOutput": ""}, {"Line": 316, "Input": "Brent Huson bought Brenda Bale some vases.", "actualOutput": "RelationClaim(brent_huson,\"Bought\",brenda_bale)\nRelationClaim(brenda_bale,\"Has\",vases)", "expectedOutput": ""}, {"Line": 317, "Input": "Bradley Rollings is simply buying time.", "actualOutput": "RelationClaim(bradley_rollings,\"IsA\",person)\nNegatedRelationClaim(bradley_rollings,\"Buy\",time)", "expectedOutput": ""}, {"Line": 318, "Input": "Sebastian Helfer stopped smoking.", "actualOutput": "NegatedRelationClaim(sebastian, \"smoking\", none)", "expectedOutput": ""}, {"Line": 319, "Input": "Sean Zentz stopped to smoke.", "actualOutput": "RelationClaim(sean,stopped,smoking)", "expectedOutput": ""}, {"Line": 320, "Input": "Dominick Huson drew a sketch of a bench by the fireplace.", "actualOutput": "RelationClaim(dominick, drew, sketch)\nRelationClaim(sketch, IsA, bench)\nRelationClaim(bench, by, fireplace)", "expectedOutput": ""}, {"Line": 321, "Input": "Bobby Dieguez drew a bench towards the fireplace.", "actualOutput": "PropertyClaim(\"bobby_dieguez\",\"draw\",\"bench\")\nRelationClaim(\"bench\",\"towards\",\"fireplace\")", "expectedOutput": ""}, {"Line": 322, "Input": "Shon Mundy drew Mrs. Twellman into a heated disagreement at her family dinner.", "actualOutput": "RelationClaim(shon_mundy, \"Drew\", mrs_twellman)\nRelationClaim(mrs_twellman, \"IsA\", family_dinner)\nPropertyClaim(family_dinner, \"HasProperty\", heated)\nPropertyClaim(mrs_twellman, \"HasProperty\", disagreement)", "expectedOutput": ""}, {"Line": 323, "Input": "Liam Gorham is living out in the wild.", "actualOutput": "RelationClaim(\"liam_gorham\",\"IsA\",\"living_out_in_the_wild\")", "expectedOutput": ""}, {"Line": 324, "Input": "Levi Gagnon is living out a dream.", "actualOutput": "RelationClaim(\"levi_gagnon\", \"IsA\", \"dream\")\n", "expectedOutput": ""}, {"Line": 325, "Input": "Lauren Wendell lives down the street.", "actualOutput": "RelationClaim(\"lauren\",\"lives\",\"down_the_street\")", "expectedOutput": ""}, {"Line": 326, "Input": "Leanna Salo lives down her achievements.", "actualOutput": "RelationClaim(leanna_salo,\"Lives\",down_her_achievements)\nNegatedRelationClaim(leanna_salo,\"Lives\",up_her_achievements)\nPropertyClaim(achievements,\"HasProperty\",impressive)\nNegatedPropertyClaim(achievements,\"HasProperty\",mediocre)", "expectedOutput": ""}, {"Line": 327, "Input": "Carl's employees called him homie.", "actualOutput": "RelationClaim(employees, called, carl)\nRelationClaim(employees, called, homie)", "expectedOutput": ""}, {"Line": 328, "Input": "Carl's employees called him home.", "actualOutput": "RelationClaim(employees, called, carl)\nRelationClaim(carl, IsA, him)\nNegatedRelationClaim(employees, called, home)", "expectedOutput": ""}, {"Line": 329, "Input": "Terry Sieg wiped the table.", "actualOutput": "RelationClaim(terry_sieg, \"Wiped\", table)", "expectedOutput": ""}, {"Line": 330, "Input": "Terry Sieg wiped crumbs off the table.", "actualOutput": "PropertyClaim(\"terry_sieg\",\"HasProperty\",\"table_clean\") \nRelationClaim(\"terry_sieg\",\"Wiped\",\"table\") \nNegatedPropertyClaim(\"table\",\"HasProperty\",\"crumbs\")", "expectedOutput": ""}, {"Line": 331, "Input": "Chuck Saban is Volvoing and Jan Cesario is IBMing.", "actualOutput": "RelationClaim(\"chuck_saban\",\"IsVolvoing\",None)\nRelationClaim(\"jan_cesario\",\"IsIbming\",None)", "expectedOutput": ""}, {"Line": 332, "Input": "Students who could not attend the XYZ symposium have skyped in during the Q&A session.", "actualOutput": "NegatedRelationClaim(students, \"Attend\", xyz_symposium)\nRelationClaim(students, \"SkypeIn\", q&a_session)", "expectedOutput": ""}, {"Line": 333, "Input": "Gerry Trombley enjoys uncling.", "actualOutput": "PropertyClaim(\"gerry_trombley\",\"enjoys\",\"uncling\")", "expectedOutput": ""}, {"Line": 334, "Input": "Tonie Harrod whapped two winters ago.", "actualOutput": "NegatedPropertyClaim(tonie_harrod,\"HasProperty\",recent)\nNegatedRelationClaim(tonie_harrod, \"Whapped\", two_winters_ago)", "expectedOutput": ""}, {"Line": 335, "Input": "Ruth Lavin is fobbing joyfully.", "actualOutput": "RelationClaim(\"ruth_lavin\",\"IsA\",\"person\")\nPropertyClaim(\"ruth_lavin\",\"HasProperty\",\"joyful\")\nRelationClaim(\"ruth_lavin\",\"fob\",\"joyfully\")", "expectedOutput": ""}, {"Line": 336, "Input": "Tanja Charlton was vivified.", "actualOutput": "RelationClaim(tanja, \"WasVivified\", charlton)", "expectedOutput": ""}, {"Line": 337, "Input": "Sheilah Rector is trying to unfreeze her assets.", "actualOutput": "RelationClaim(sheilah_rector,\"IsA\",person)\nRelationClaim(sheilah_rector,\"IsTryingTo\",unfreeze)\nPropertyClaim(sheilah_rector,\"HasProperty\",assets)", "expectedOutput": ""}, {"Line": 338, "Input": "The police arrest those who break the law.", "actualOutput": "RelationClaim(police, arrest, lawbreakers)", "expectedOutput": ""}, {"Line": 339, "Input": "Many stacks of documents were misplaced.", "actualOutput": "PropertyClaim(stacks,\"AreMany\",True)\nRelationClaim(documents,\"WereMisplaced\",stacks)", "expectedOutput": ""}, {"Line": 340, "Input": "The Los Altos varsity volleyball team win after a poor start.", "actualOutput": "RelationClaim(\"los_altos_varsity_volleyball_team\",\"win\",\"game\")\nNegatedPropertyClaim(\"los_altos_varsity_volleyball_team\",\"HasProperty\",\"poor_start\")", "expectedOutput": ""}, {"Line": 341, "Input": "\"John Schneider, a nice and proud German, drives a Chevy.\"", "actualOutput": "RelationClaim(\"john schneider\",\"drives\",\"chevy\")\nPropertyClaim(\"john schneider\",\"HasProperty\",\"nice\")\nPropertyClaim(\"john schneider\",\"HasProperty\",\"proud\")\nPropertyClaim(\"john schneider\",\"HasProperty\",\"german\")\nNegatedPropertyClaim(\"john schneider\",\"HasProperty\",\"rude\")\nNegatedPropertyClaim(\"john schneider\",\"HasProperty\",\"unpatriotic\")", "expectedOutput": ""}, {"Line": 342, "Input": "\"A client of Murray's, Stan Weber, is nice.\"", "actualOutput": "RelationClaim(client, \"IsA\", person)\nRelationClaim(murray, \"HasClient\", client)\nRelationClaim(stan_weber, \"IsA\", person)\nPropertyClaim(stan_weber, \"HasProperty\", nice)", "expectedOutput": ""}, {"Line": 343, "Input": "Harriette Phung wondered whether Svetlana Golla would admit guilt.", "actualOutput": "RelationClaim(harriette_phung, \"WonderedWhether\", svetlana_golla)\nNegatedRelationClaim(svetlana_golla, \"AdmitGuilt\", harriette_phung)", "expectedOutput": ""}, {"Line": 344, "Input": "Harvey Paetzold told Dee Darrell yesterday off the cuff to eat an apple.", "actualOutput": "RelationClaim(harvey_paetzold,told,dee_darrell)\nRelationClaim(yesterday,told,dee_darrell)\nRelationClaim(dee_darrell,eat,apple)", "expectedOutput": ""}, {"Line": 345, "Input": "All fruits are good for you said Carter Hageman the doctor.", "actualOutput": "RelationClaim(fruits, \"AreGoodFor\", you)\nNegatedRelationClaim(fruits, \"AreBadFor\", you) # not needed since the sentence is believed\nRelationClaim(carter_hageman, \"IsA\", doctor)\nPropertyClaim(carter_hageman, \"Said\", \"true\")", "expectedOutput": ""}, {"Line": 346, "Input": "Beagles are great Martin said with confidence.", "actualOutput": "RelationClaim(\"beagles\",\"Are\", \"great\")\nPropertyClaim(\"martin\", \"HasProperty\", \"confidence\")", "expectedOutput": ""}, {"Line": 347, "Input": "The car to buy in 2018 is Toyota.", "actualOutput": "RelationClaim(car,buy,toyota)\nRelationClaim(car,\"IsA\",best)\nNegatedRelationClaim(toyota,\"IsA\",worst)\nNegatedPropertyClaim(car,\"HasProperty\",expensive)", "expectedOutput": ""}, {"Line": 348, "Input": "Dr. Russo reported the extra data to be safe.", "actualOutput": "RelationClaim(russo, reported, extra_data)\nPropertyClaim(extra_data, \"IsSafe\", true)", "expectedOutput": ""}, {"Line": 349, "Input": "American high school students need to study more math in order to compete in today's global marketplace.", "actualOutput": "RelationClaim(high_school_students,need,study_math)\nRelationClaim(high_school_students,compete,global_marketplace)\nComparativeRelationClaim(study_math,more,compete)\nNegatedPropertyClaim(high_school_students,\"HasProperty\",lazy)\nPropertyClaim(global_marketplace,\"HasProperty\",competitive)", "expectedOutput": ""}, {"Line": 350, "Input": "Mr. Middleton sent his grandchildren presents.", "actualOutput": "RelationClaim(mr_middleton, \"Sent\", grandchildren)\nPropertyClaim(grandchildren, \"HasProperty\", presents)", "expectedOutput": ""}, {"Line": 351, "Input": "Jeffrey Kittle sold his bike to Valencia Mcardle.", "actualOutput": "RelationClaim(jeffrey_kittle, \"Sold\", bike)\nRelationClaim(jeffrey_kittle, \"Has\", bike)\nNegatedRelationClaim(valencia_mcardle, \"Sold\", bike)\nNegatedRelationClaim(valencia_mcardle, \"Has\", bike)", "expectedOutput": ""}, {"Line": 352, "Input": "Alita Ramsdell closed the office door and opened the stairwell door.", "actualOutput": "RelationClaim(alita_ramsdell, \"Close\", office_door)\nRelationClaim(alita_ramsdell, \"Open\", stairwell_door)", "expectedOutput": ""}, {"Line": 353, "Input": "Loreta Nunn turned off the kitchen lights.", "actualOutput": "RelationClaim(loreta_nunn, \"TurnOff\", kitchen_lights)", "expectedOutput": ""}, {"Line": 354, "Input": "Time flies like an arrow.", "actualOutput": "RelationClaim(time, \"FliesLike\", arrow)\nNegatedRelationClaim(time, \"FliesLike\", apple)\nPropertyClaim(arrow, \"IsFast\", true)\nNegatedPropertyClaim(apple, \"IsTasty\", true)", "expectedOutput": ""}, {"Line": 355, "Input": "fruit flies like bananas.", "actualOutput": "RelationClaim(\"fruit\",\"Like\",\"bananas\")\nRelationClaim(\"fruit\",\"IsA\",\"food\")\nPropertyClaim(\"fruit\",\"HasProperty\",\"sweet\")\nNegatedRelationClaim(\"fruit\",\"IsA\",\"animal\")", "expectedOutput": ""}, {"Line": 356, "Input": "The old man the boat.", "actualOutput": "RelationClaim(man, owns, boat)\nPropertyClaim(man, old)\nPropertyClaim(boat, old-fashioned)", "expectedOutput": ""}, {"Line": 357, "Input": "\"The Fed, the Federal Open Market Committee, will increase interest rates to 2.5% in December 2018 in order to keep inflation steady at around 2 percent per year.\"", "actualOutput": "RelationClaim(\"fed\",\"increase\",\"interest_rates\")\nRelationClaim(\"fed\",\"keep\",\"inflation\")\nPropertyClaim(\"inflation\",\"HasProperty\",\"steady\")\nRelationClaim(\"steady\",\"around\",\"2_percent_per_year\")\nRelationClaim(\"interest_rates\",\"IsA\",\"percentage\")\nPropertyClaim(\"percentage\",\"HasProperty\",\"2.5\")\nRelationClaim(\"december_2018\",\"IsA\",\"time\")", "expectedOutput": ""}, {"Line": 358, "Input": "\"Dorian Gray, the subject of a full-length portrait in oil by Basil Hallward\"", "actualOutput": "RelationClaim(\"dorian gray\",\"IsTheSubjectOf\",\"full-length portrait\")\nRelationClaim(\"full-length portrait\",\"IsInOilBy\",\"basil hallward\")", "expectedOutput": ""}, {"Line": 359, "Input": "Southern California Children's Museum in Pasadena", "actualOutput": "RelationClaim(museum, isIn, pasadena)\nRelationClaim(museum, isFor, children)\nPropertyClaim(museum, isLocatedIn, southern_california)", "expectedOutput": ""}, {"Line": 360, "Input": "\"The chocolate cake, yikes, is not good.\"", "actualOutput": "PropertyClaim(\"chocolate_cake\",\"HasProperty\",\"good\")\nNegatedPropertyClaim(\"chocolate_cake\",\"HasProperty\",\"good\")", "expectedOutput": ""}, {"Line": 361, "Input": "\"The food at a new Italian restaurant, omg is very delicious!\"", "actualOutput": "PropertyClaim(\"food\",\"HasProperty\",\"delicious\")\nRelationClaim(\"food\",\"At\",\"restaurant\")\nRelationClaim(\"restaurant\",\"IsA\",\"italian\")\nPropertyClaim(\"restaurant\",\"HasProperty\",\"new\")", "expectedOutput": ""}, {"Line": 362, "Input": "Iida met Pearl's cousin before Callie's.", "actualOutput": "RelationClaim(iida, \"Met\", cousin)\nRelationClaim(cousin, \"IsA\", pearl's_cousin)\nRelationClaim(cousin, \"Before\", callie's)", "expectedOutput": ""}, {"Line": 363, "Input": "The loud student from Jeremy's class's homework is difficult.", "actualOutput": "PropertyClaim(student, \"IsLoud\", true)\nRelationClaim(student, \"IsFrom\", class)\nRelationClaim(class, \"BelongsTo\", teacher)\nRelationClaim(teacher, \"IsNamed\", \"Jeremy\")\nRelationClaim(homework, \"BelongsTo\", student)\nPropertyClaim(homework, \"IsDifficult\", true)", "expectedOutput": ""}, {"Line": 364, "Input": "Homework is devoirs.", "actualOutput": "RelationClaim(homework, \"IsA\", devoirs)", "expectedOutput": ""}, {"Line": 365, "Input": "The student from Brandon's class is difficult.", "actualOutput": "RelationClaim(student,\"IsFrom\",brandon's_class)\nPropertyClaim(student,\"HasProperty\",difficult)", "expectedOutput": ""}, {"Line": 366, "Input": "The students from Georgette's class's homework are difficult.", "actualOutput": "PropertyClaim(student,\"IsFrom\",\"Georgette's class\")\nPropertyClaim(homework,\"BelongsTo\",student)\nPropertyClaim(student,\"HasProperty\",\"Difficult\")", "expectedOutput": ""}, {"Line": 367, "Input": "\"Virion has adopted cats, dogs, and hamsters from France.\"", "actualOutput": "RelationClaim(virion, \"HasAdopted\", cats)\nRelationClaim(virion, \"HasAdopted\", dogs)\nRelationClaim(virion, \"HasAdopted\", hamsters)\nRelationClaim(cats, \"AreFrom\", france)\nRelationClaim(dogs, \"AreFrom\", france)\nRelationClaim(hamsters, \"AreFrom\", france)", "expectedOutput": ""}, {"Line": 368, "Input": "Ludovic packed everything minus the hotdogs.", "actualOutput": "NegatedPropertyClaim(ludovic,\"HasProperty\",hotdogs)\nRelationClaim(ludovic,\"Packed\",everything)", "expectedOutput": ""}, {"Line": 369, "Input": "Thornton had pasta from Italy.", "actualOutput": "NegatedRelationClaim(thornton,\"HasProperty\",italy)\nRelationClaim(pasta,\"IsA\",food)\nRelationClaim(pasta,\"IsFrom\",italy)\nRelationClaim(thornton,\"HasEaten\",pasta)", "expectedOutput": ""}, {"Line": 370, "Input": "Mendel is a hamster.", "actualOutput": "RelationClaim(\"mendel\",\"IsA\",\"hamster\")", "expectedOutput": ""}, {"Line": 371, "Input": "Benedict is a man.", "actualOutput": "RelationClaim(benedict,\"IsA\",man)", "expectedOutput": ""}, {"Line": 372, "Input": "Holly trusts him with cooking a tasty dinner.", "actualOutput": "RelationClaim(holly, trusts, him)\nRelationClaim(him, with, cooking)\nRelationClaim(cooking, IsA, dinner)\nPropertyClaim(dinner, HasProperty, tasty)", "expectedOutput": ""}, {"Line": 373, "Input": "Gregor saw Leland.", "actualOutput": "RelationClaim(gregor,\"Saw\",leland)", "expectedOutput": ""}, {"Line": 374, "Input": "Gregor saw Britta.", "actualOutput": "RelationClaim(gregor,\"Saw\",britta)", "expectedOutput": ""}, {"Line": 375, "Input": "Lain saw the man whom Gregor saw.", "actualOutput": "RelationClaim(lain,saw,man)\nRelationClaim(gregor,saw,man)", "expectedOutput": ""}, {"Line": 376, "Input": "Leland is an electrician.", "actualOutput": "RelationClaim(\"leland\",\"IsA\",\"electrician\")", "expectedOutput": ""}, {"Line": 377, "Input": "Britta is a CEO.", "actualOutput": "RelationClaim(\"britta\",\"IsA\",\"ceo\")", "expectedOutput": ""}, {"Line": 378, "Input": "The electrician saw the CEO.", "actualOutput": "RelationClaim(\"electrician\",\"Saw\",\"ceo\")", "expectedOutput": ""}, {"Line": 379, "Input": "\"Richter saw Umbra, the dog.\"", "actualOutput": "RelationClaim(richter, \"Saw\", umbra)\nRelationClaim(umbra, \"IsA\", dog)", "expectedOutput": ""}, {"Line": 380, "Input": "Dorn saw Jill.", "actualOutput": "RelationClaim(dorn,\"Saw\",jill)", "expectedOutput": ""}, {"Line": 381, "Input": "Kelly saw the pet whom Richter saw.", "actualOutput": "RelationClaim(kelly,saw,pet)\nRelationClaim(richter,saw,pet)\nNegatedRelationClaim(kelly,saw,richter)\nNegatedRelationClaim(pet,IsA,dog)", "expectedOutput": ""}, {"Line": 382, "Input": "Dogs are mammals.", "actualOutput": "RelationClaim(\"dogs\",\"Are\",\"mammals\")", "expectedOutput": ""}, {"Line": 383, "Input": "Crows are as big as ravens.", "actualOutput": "RelationClaim(\"crows\",\"AreAsBigAs\",\"ravens\")", "expectedOutput": ""}, {"Line": 384, "Input": "Crows are as small as pidgeons.", "actualOutput": "RelationClaim(\"crows\",\"areasSmallAs\",\"pidgeons\")", "expectedOutput": ""}, {"Line": 385, "Input": "velots are from Spain.", "actualOutput": "RelationClaim(\"velots\",\"arefrom\",\"spain\")", "expectedOutput": ""}, {"Line": 386, "Input": "velots are green.", "actualOutput": "PropertyClaim(\"velots\",\"HasProperty\",\"green\")", "expectedOutput": ""}, {"Line": 387, "Input": "Kyle has a red velot.", "actualOutput": "PropertyClaim(\"kyle\",\"HasProperty\",\"red\")\nRelationClaim(\"kyle\",\"HasA\",\"velot\")", "expectedOutput": ""}, {"Line": 388, "Input": "velots are gorbojims.", "actualOutput": "RelationClaim(\"velots\",\"Are\",\"gorbojims\")", "expectedOutput": ""}, {"Line": 389, "Input": "gorbojims are angelic and loud.", "actualOutput": "PropertyClaim(\"gorbojims\",\"HasProperty\",\"angelic\")\nPropertyClaim(\"gorbojims\",\"HasProperty\",\"loud\")", "expectedOutput": ""}, {"Line": 390, "Input": "Mammals are hairy.", "actualOutput": "RelationClaim(mammals, \"Have\", hairy)", "expectedOutput": ""}, {"Line": 391, "Input": "gorbojims are mammals.", "actualOutput": "RelationClaim(gorbojims,\"IsA\",mammal)", "expectedOutput": ""}, {"Line": 392, "Input": "Mammals are endotherms.", "actualOutput": "RelationClaim(\"mammals\",\"Are\",\"endotherms\")", "expectedOutput": ""}, {"Line": 393, "Input": "Owain reminded Cornelia to run at 5PM at noon.", "actualOutput": "PropertyClaim(owain, \"Reminded\", cornelia)\nRelationClaim(cornelia, \"RunAt\", 5pm)\nRelationClaim(cornelia, \"RunAt\", noon)", "expectedOutput": ""}, {"Line": 394, "Input": "The yellow birds in cages and dogs can't fly.", "actualOutput": "PropertyClaim(birds,\"AreYellow\",yellow)\nRelationClaim(birds,\"AreIn\",cages)\nNegatedPropertyClaim(dogs,\"CanFly\",fly)", "expectedOutput": ""}, {"Line": 395, "Input": "The red birds in cages and boxes can't fly.", "actualOutput": "NegatedRelationClaim(bird, \"CanFly\", fly)\nRelationClaim(bird, \"HasProperty\", red)\nRelationClaim(bird, \"AreIn\", cage)\nRelationClaim(bird, \"AreIn\", box)", "expectedOutput": ""}, {"Line": 396, "Input": "\"The word, liminality, has Latin origin.\"", "actualOutput": "PropertyClaim(\"word\",\"HasProperty\",\"liminality\")\nRelationClaim(\"liminality\",\"IsA\",\"noun\")\nPropertyClaim(\"liminality\",\"HasProperty\",\"latin\")\nRelationClaim(\"latin\",\"IsA\",\"language\")", "expectedOutput": ""}, {"Line": 397, "Input": "Elijah is from New York City.", "actualOutput": "RelationClaim(elijah,\"IsFrom\",newyorkcity)", "expectedOutput": ""}, {"Line": 398, "Input": "Elijah lives in Westwood.", "actualOutput": "NegatedRelationClaim(elijah,lives,in)\nNegatedRelationClaim(elijah,is,in)\nNegatedPropertyClaim(elijah,hasproperty,westwood)", "expectedOutput": ""}, {"Line": 399, "Input": "Westwood is in Los Angeles.", "actualOutput": "RelationClaim(westwood,\"IsA\",neighborhood)\nRelationClaim(los angeles,\"HasProperty\",location)\nRelationClaim(westwood,\"IsIn\",los angeles)", "expectedOutput": ""}, {"Line": 400, "Input": "Los Angeles is in California.", "actualOutput": "RelationClaim(\"los_angeles\",\"IsIn\",\"california\")", "expectedOutput": ""}, {"Line": 401, "Input": "An actor is from a place implies an actor lived in the place.", "actualOutput": "RelationClaim(actor, \"IsFrom\", place)\nRelationClaim(actor, \"LivedIn\", place)", "expectedOutput": ""}, {"Line": 402, "Input": "Rob eats breakfast at 8.", "actualOutput": "RelationClaim(rob,\"Eats\",\"Breakfast\")\nRelationClaim(Breakfast,\"IsA\",\"Meal\")\nRelationClaim(Breakfast,\"OccursAtTime\",\"8\")", "expectedOutput": ""}, {"Line": 403, "Input": "Rob eats dinner at 8.", "actualOutput": "RelationClaim(rob, \"Eat\", dinner)\nRelationClaim(dinner, \"OccursAtTime\", 8)", "expectedOutput": ""}, {"Line": 404, "Input": "An actor works at a company implies the actor is the company's employee.", "actualOutput": "RelationClaim(actor, \"WorksAt\", company)", "expectedOutput": ""}, {"Line": 405, "Input": "Steven works at Tesla.", "actualOutput": "RelationClaim(steven, \"WorksAt\", tesla)", "expectedOutput": ""}, {"Line": 406, "Input": "\"The movie, The Matrix, is a sci-fi movie.\"", "actualOutput": "RelationClaim(\"movie\",\"IsA\",\"sci-fi_movie\")\nRelationClaim(\"the_matrix\",\"IsA\",\"movie\")", "expectedOutput": ""}, {"Line": 407, "Input": "Keanu Reeves is an actor.", "actualOutput": "RelationClaim(\"keanu reeves\",\"IsA\",\"actor\")", "expectedOutput": ""}, {"Line": 408, "Input": "Keanu Reeves is in The Matrix.", "actualOutput": "RelationClaim(\"keanu_reeves\",\"IsIn\",\"the_matrix\")", "expectedOutput": ""}, {"Line": 409, "Input": "An actor is in a movie is the same as an actor acts in a movie.", "actualOutput": "RelationClaim(\"actor\",\"acts\",\"movie\")", "expectedOutput": ""}, {"Line": 410, "Input": "An actor is in a movie is the same as an actor stars in a movie.", "actualOutput": "RelationClaim(\"actor\",\"starsIn\",\"movie\")", "expectedOutput": ""}, {"Line": 411, "Input": "\"Keanu Reeves played the character, Neo.\"", "actualOutput": "RelationClaim(\"keanu_reeves\",\"act\",\"the_matrix\")\nRelationClaim(\"neo\",\"IsA\",\"character\")\nRelationClaim(\"keanu_reeves\",\"played\",\"neo\")", "expectedOutput": ""}, {"Line": 412, "Input": "Dracula is a horror movie.", "actualOutput": "RelationClaim(\"dracula\",\"IsA\",\"horror_movie\")", "expectedOutput": ""}, {"Line": 413, "Input": "Happy Gilmore is a comedy movie.", "actualOutput": "RelationClaim(\"happy gilmore\",\"IsA\",\"comedy movie\")", "expectedOutput": ""}, {"Line": 414, "Input": "The rich man the bikes.", "actualOutput": "RelationClaim(rich,\"Has\",money)\nRelationClaim(man,\"Has\",bikes)\nNegatedRelationClaim(man,\"IsA\",poor)\nNegatedPropertyClaim(bikes,\"IsExpensive\",False)", "expectedOutput": ""}, {"Line": 415, "Input": "The young man the cars.", "actualOutput": "RelationClaim(man,\"Has\",cars)\nNegatedRelationClaim(man,\"IsA\",car)\nPropertyClaim(man,\"IsYoung\",True)\nPropertyClaim(cars,\"IsOwnedBy\",man)", "expectedOutput": ""}, {"Line": 416, "Input": "Jericho ate some of the berries.", "actualOutput": "RelationClaim(jericho, \"Ate\", berries)", "expectedOutput": ""}, {"Line": 417, "Input": "Forrest went to the shop before Jericho went to the beach.", "actualOutput": "NegatedRelationClaim(forrest,\"wentTo\",beach)\nRelationClaim(forrest,\"wentTo\",shop)\nNegatedRelationClaim(jericho,\"wentTo\",shop)\nRelationClaim(jericho,\"wentTo\",beach)", "expectedOutput": ""}, {"Line": 418, "Input": "The only pair of glasses has been lost.", "actualOutput": "PropertyClaim(pair,\"IsTheOnly\",glasses)\nNegatedRelationClaim(pair,\"Has\",lost)", "expectedOutput": ""}, {"Line": 419, "Input": "Team A made this project possible.", "actualOutput": "RelationClaim(team, made, project)\nPropertyClaim(project, \"IsPossible\", true)", "expectedOutput": ""}, {"Line": 420, "Input": "Team B made every mistake possible.", "actualOutput": "NegatedRelationClaim(team,\"Made\",mistake)\nNegatedPropertyClaim(mistake,\"Possible\",every)", "expectedOutput": ""}, {"Line": 421, "Input": "#startnewcontext", "actualOutput": "neo is a character and keanu_reef plays neo. dracula is a horror_movie and happy_gilmore is a comedy_movie. A man has a bike and a car, and the car is owned by the man. Jericho eats berries and went to the beach, but did not go to the shop. Pair is the only glass, but they have been lost. A team made a project, but they also made a mistake. It is possible for every mistake to happen.", "expectedOutput": ""}, {"Line": 422, "Input": "", "actualOutput": "", "expectedOutput": ""}, {"Line": 423, "Input": "Tell me about Mr. Magoo?", "actualOutput": "There is no memory item about Mr. Magoo in the given Memory.", "expectedOutput": "Mr. Magoo is a popular cartoon character from the 1940s. He is known for being comically near-sighted and was voiced by Bobby Backus."}, {"Line": 424, "Input": "Who is the popular cartoon character from the 1940's?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "Mr. Magoo"}, {"Line": 425, "Input": "What is Mr. Magoo known for?", "actualOutput": "There is no information in the given memory about what Mr. Magoo is known for.", "expectedOutput": "For being comically near-sighted"}, {"Line": 426, "Input": "Who was Mr. Magoo voiced by?", "actualOutput": "Memory does not contain information about who voiced Mr. Magoo.", "expectedOutput": "Bobby Backus"}, {"Line": 427, "Input": "When is Jim's party?", "actualOutput": "There is no information in Memory about Jim's party, so no memory item can be identified.", "expectedOutput": "At 5 PM today"}, {"Line": 428, "Input": "Is Jim's party at 4 pm?", "actualOutput": "There is no memory item that directly states whether Jim's party is at 4 pm.", "expectedOutput": "\"No, at 5 PM today\""}, {"Line": 429, "Input": "Does Tina want a dog?", "actualOutput": "Yes, Tina wants a dog according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "\"No, a cat\""}, {"Line": 430, "Input": "What does Tina want?", "actualOutput": "Tina wants a dog according to memory item i=24 with a certainty of 0.8214285.", "expectedOutput": "A cat"}, {"Line": 431, "Input": "What has been lost?", "actualOutput": "Memory item i=18 states that \"pair have lost\" with a certainty of hypothetically false at 0.2631578947368421.", "expectedOutput": "Pair of glasses"}, {"Line": 432, "Input": "What kind of dress does Mrs. White wear?", "actualOutput": "Mrs. White wears a white dress according to memory item i=0 with a certainty of 0.641.", "expectedOutput": "White dresses"}, {"Line": 433, "Input": "What kind of tie does Aubrey wear?", "actualOutput": "Aubrey wears a tie, with a certainty of 0.7368, according to memory item i=4.", "expectedOutput": "Black ties"}, {"Line": 434, "Input": "What kind of dress does Mrs. Black wear?", "actualOutput": "Memory does not provide information on what kind of dress Mrs. Black wears.", "expectedOutput": "Black dresses"}, {"Line": 435, "Input": "What kind of tie does Mr. White wear?", "actualOutput": "Memory does not provide information on what kind of tie Mr. White wears.", "expectedOutput": "White ties"}, {"Line": 436, "Input": "Is Taylor Keegan female?", "actualOutput": "Memory does not contain information about Taylor Keegan's gender, so no memory item can be identified.", "expectedOutput": "yes"}, {"Line": 437, "Input": "Is Taylor Keegan male?", "actualOutput": "Memory does not contain information about Taylor Keegan's gender.", "expectedOutput": "\"No, female\""}, {"Line": 438, "Input": "Is Taylor Monegan male?", "actualOutput": "Memory does not contain information about Taylor Monegan's gender, so no memory item can be identified.", "expectedOutput": "yes"}, {"Line": 439, "Input": "Is Taylor Monegan female?", "actualOutput": "Memory does not contain information about Taylor Monegan's gender.", "expectedOutput": "\"No, male\""}, {"Line": 440, "Input": "How tall is Kendrick?", "actualOutput": "There is no memory item that provides information on Kendrick's height.", "expectedOutput": "very"}, {"Line": 441, "Input": "How tall is Dr. Murphy?", "actualOutput": "There is no memory item that provides information on Dr. Murphy's height.", "expectedOutput": "very"}, {"Line": 442, "Input": "How tall is Dr. Kendrick Murphy Jr.?", "actualOutput": "There is no memory item that provides information on the height of Dr. Kendrick Murphy Jr.", "expectedOutput": "very"}, {"Line": 443, "Input": "How tall is Mr. Murphy?", "actualOutput": "There is no memory item that provides information on Mr. Murphy's height.", "expectedOutput": "very"}, {"Line": 444, "Input": "How tall is Kendrick Murphy?", "actualOutput": "There is no memory item that provides information on Kendrick Murphy's height.", "expectedOutput": "very"}, {"Line": 445, "Input": "How tall is Kendrick Marmion Murphy?", "actualOutput": "There is no memory item that provides information on Kendrick Marmion Murphy's height.", "expectedOutput": "very"}, {"Line": 446, "Input": "Who is giving a presentation?", "actualOutput": "Society is giving a presentation according to memory. Memory item i=2 with certainty=0.736842105263158.", "expectedOutput": "The North American Society for Marine Mammal Research"}, {"Line": 447, "Input": "Where is the organization?", "actualOutput": "There is no information in the memory about the organization, so no memory item can be identified.", "expectedOutput": "In Boston"}, {"Line": 448, "Input": "Where is the North American Society for Marine Mammal Research?", "actualOutput": "The north american society for marine mammal research is in Boston, according to memory item i=3 with a certainty of 0.736.", "expectedOutput": "In Boston"}, {"Line": 449, "Input": "What is Carl's first name?", "actualOutput": "There is no memory item that provides information about Carl's first name.", "expectedOutput": "Carl"}, {"Line": 450, "Input": "What is Carl's full name?", "actualOutput": "There is no memory content that provides information about Carl's full name.", "expectedOutput": "Carl Austin Weathers"}, {"Line": 451, "Input": "Is Jasmine a team?", "actualOutput": "Jasmine is part of a team according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 452, "Input": "Are Robin and Jasmine a team?", "actualOutput": "According to Memory, jasmine is part of a team (i=20) with a certainty of 0.8214285, but it is uncertain if robin is part of the same team.", "expectedOutput": "yes"}, {"Line": 453, "Input": "Robin and Jasmine are lawyers.", "actualOutput": "RelationClaim(robin,\"IsA\",lawyer)\nRelationClaim(jasmine,\"IsA\",lawyer)", "expectedOutput": ""}, {"Line": 454, "Input": "Is Robin a lawyer?", "actualOutput": "Memory item 14 states that \"robin isa lawyer\" with a certainty value of 0.647456, indicating that it is hypothetically true but not completely certain.", "expectedOutput": "yes"}, {"Line": 455, "Input": "Is Jasmine a lawyer?", "actualOutput": "Jasmine is possibly a lawyer according to memory item 24 with a certainty of 0.6179648000000001.", "expectedOutput": "yes"}, {"Line": 456, "Input": "Are Robin and Jasmine lawyers?", "actualOutput": "Yes, according to memory items i=0 and i=24, there is a hypothetical truth that Jasmine and Robin are lawyers with a certainty of 0.6179648000000001.", "expectedOutput": "yes"}, {"Line": 457, "Input": "Which cars are red?", "actualOutput": "Memory item i=4 states that \"car hasproperty red\" with a certainty of 0.736842105263158. Therefore, it is hypothetically true that some cars are red.", "expectedOutput": "Every car"}, {"Line": 458, "Input": "Did Jericho eat all of the berries?", "actualOutput": "Memory does not provide enough information to determine if Jericho ate all the berries.", "expectedOutput": "\"No, some of the berries\""}, {"Line": 459, "Input": "When did Forrest go to the shop?", "actualOutput": "Forrest hypothetically went to the shop, with a certainty of 0.736842105263158, according to memory item i=4.", "expectedOutput": "Before Jericho went to the beach"}, {"Line": 460, "Input": "Why does Cindy eat apples?", "actualOutput": "Memory item i=4 states that Cindy eats apples with a hypothetical truth value of 0.736842105263158.", "expectedOutput": "So that the doctor stays away"}, {"Line": 461, "Input": "Will Carla eat pie?", "actualOutput": "Memory does not provide a direct answer to the question. The closest memory item is i=4, which states that \"carla isa pie\" with a certainty of 0.2631578947368421.", "expectedOutput": "Yes"}, {"Line": 462, "Input": "Will Carla have eaten pie?", "actualOutput": "Memory does not support the claim that Carla ate pie. Memory item i=22 has a certainty value of 0.1785715 for being knowingly false.", "expectedOutput": "Yes"}, {"Line": 463, "Input": "Will Carla be eating pie?", "actualOutput": "Memory does not support the claim that Carla will be eating pie. Item i=22 has a certainty value of 0.1785715.", "expectedOutput": "Yes"}, {"Line": 464, "Input": "Is Carla eating pie?", "actualOutput": "Memory does not contain information about Carla eating pie. No memory item is relevant.", "expectedOutput": "I don't know"}, {"Line": 465, "Input": "What is Carla eating?", "actualOutput": "Memory does not provide information on what Carla is eating.", "expectedOutput": "I don't know"}, {"Line": 466, "Input": "What did Carla eat?", "actualOutput": "There is no memory item indicating what Carla ate, so the answer is unknown.", "expectedOutput": "Pie"}, {"Line": 467, "Input": "What was Carla eating?", "actualOutput": "Memory does not provide information on what Carla was eating.", "expectedOutput": "Pie"}, {"Line": 468, "Input": "What has Carla eaten?", "actualOutput": "There is no memory item that directly states what Carla has eaten.", "expectedOutput": "Pie"}, {"Line": 469, "Input": "What will Carla copy?", "actualOutput": "Carla will hypothetically copy a report according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "The reports"}, {"Line": 470, "Input": "Will Carla copy the reports?", "actualOutput": "According to memory item 21, it is highly likely (certainty=0.8214285) that Carla will copy the reports.", "expectedOutput": "Yes"}, {"Line": 471, "Input": "Will Carla have copied the reports?", "actualOutput": "Memory item i=21 suggests that Carla is copying a report with a certainty of 0.8214285.", "expectedOutput": "Yes"}, {"Line": 472, "Input": "Is Carla going to copy the reports?", "actualOutput": "Memory item i=21 suggests that Carla is copying the report with a certainty of 0.8214285.", "expectedOutput": "Yes"}, {"Line": 473, "Input": "Will Carla be copying the reports?", "actualOutput": "According to memory item i=21, there is a high probability (0.8214285) that Carla will be copying the reports.", "expectedOutput": "Yes"}, {"Line": 474, "Input": "Is Carla copying the reports?", "actualOutput": "Yes, according to memory item i=21, Carla is copying the report with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 475, "Input": "Was Carla copying the reports?", "actualOutput": "Yes, according to memory item i=21 with a certainty value of 0.8214285.", "expectedOutput": "yes"}, {"Line": 476, "Input": "What has Carla copied?", "actualOutput": "Carla has copied a report according to memory. Memory item i=21 with a certainty of 0.8214285.", "expectedOutput": "The reports"}, {"Line": 477, "Input": "What did Carla copy?", "actualOutput": "Carla copied a report according to memory. The memory item is i=21 with a certainty of 0.8214285.", "expectedOutput": "The reports"}, {"Line": 478, "Input": "What had Carla copied?", "actualOutput": "Carla copied a report according to memory. Memory item i=21 with a certainty of 0.8214285.", "expectedOutput": "The reports"}, {"Line": 479, "Input": "Had Carla been copying the reports?", "actualOutput": "Yes, according to memory item i=21, Carla is copying the report with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 480, "Input": "Has Carla been copying the reports?", "actualOutput": "Yes, according to memory item i=21, Carla is copying the report with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 481, "Input": "Who will Carla email?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "Jenny"}, {"Line": 482, "Input": "Who will Carla have emailed?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "Jenny"}, {"Line": 483, "Input": "Who is Carla going to email?", "actualOutput": "Memory does not provide a clear answer to who Carla is going to email.", "expectedOutput": "Jenny"}, {"Line": 484, "Input": "Who will Carla be emailing?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "Jenny"}, {"Line": 485, "Input": "Who will Carla have been emailing?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "Jenny"}, {"Line": 486, "Input": "Who is Carla emailing?", "actualOutput": "Memory does not provide a clear answer to who Carla is emailing.", "expectedOutput": "Jenny"}, {"Line": 487, "Input": "Who did Raquel sing a song to?", "actualOutput": "Memory does not provide information on who Raquel sang a song to.", "expectedOutput": "Martha"}, {"Line": 488, "Input": "When will Julius bring the cake?", "actualOutput": "Memory does not provide a certain answer for when Julius will bring the cake. Memory item i=4 suggests it is hypothetically false.", "expectedOutput": "in a few minutes"}, {"Line": 489, "Input": "When will I feed the dog?", "actualOutput": "Based on the memory contents, it is hypothetically true that I will feed the dog (i=4) with a certainty of 0.736842105263158.", "expectedOutput": "When you get home"}, {"Line": 490, "Input": "What did Zachary say?", "actualOutput": "Zachary said \"Wilma\" with a hypothetical truth certainty of 0.736842105263158. This is memory item i=0.", "expectedOutput": "Carla gave the materials to Wilma"}, {"Line": 491, "Input": "What did Zachary say Carla did?", "actualOutput": "The memory does not contain information about what Zachary said Carla did.", "expectedOutput": "Carla gave the materials to Wilma"}, {"Line": 492, "Input": "What was updated?", "actualOutput": "Contact number was updated, i=0 with a hypothetical false certainty of 0.263.", "expectedOutput": "The contact numbers"}, {"Line": 493, "Input": "Which numbers were updated?", "actualOutput": "Memory items i=0, i=1, i=2, i=3, i=4, i=5, i=13, i=16, i=18 were updated according to Memory.", "expectedOutput": "The contact numbers"}, {"Line": 494, "Input": "Who gave the numbers to Miranda?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "Carla"}, {"Line": 495, "Input": "Who did Carla give the numbers to?", "actualOutput": "Carla gave the numbers to Miranda according to memory. This is memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "Miranda"}, {"Line": 496, "Input": "Which numbers did Carla give to Miranda?", "actualOutput": "Memory item i=16 states that Carla gave something to Miranda with a certainty of 0.8214285.", "expectedOutput": "The contact numbers"}, {"Line": 497, "Input": "Which numbers did Erina update?", "actualOutput": "Erina did not update any contact number according to Memory. (i=0, certainty=0.263)", "expectedOutput": "The contact numbers"}, {"Line": 498, "Input": "Who gave Miranda the numbers Erina updated?", "actualOutput": "Memory item i=16 states that Carla gave Miranda something, but it does not specify what. Certainty value is 0.8214285.", "expectedOutput": "Carla"}, {"Line": 499, "Input": "Why did Selena look over the plan?", "actualOutput": "Selena looked over the tax plan hypothetically false, with a certainty of 0.263. (i=0)", "expectedOutput": "So that Selena could prepare to answer Miriam's questions"}, {"Line": 500, "Input": "Who looked over the plan?", "actualOutput": "Selena looked over the tax plan according to memory item i=8 with a certainty of 0.1785715.", "expectedOutput": "Selena"}, {"Line": 501, "Input": "What does Miriam have?", "actualOutput": "Miriam asked a question, with a certainty of 0.736842105263158, according to memory item i=3.", "expectedOutput": "Questions"}, {"Line": 502, "Input": "Who has questions?", "actualOutput": "Memory item i=3 contains a question. It is hypothetically true with a certainty of 0.736842105263158.", "expectedOutput": "Miriam"}, {"Line": 503, "Input": "What is Selena prepared to do?", "actualOutput": "Selena is prepared to answer, according to memory item i=2 with a certainty of 0.736842105263158.", "expectedOutput": "To answer Miriam's questions"}, {"Line": 504, "Input": "What did Kayla know?", "actualOutput": "Kayla knew how to brew coffee (i=4) with a certainty of 0.736842105263158.", "expectedOutput": "The pamphlet would cover all the talking points"}, {"Line": 505, "Input": "What did the pamphlet cover?", "actualOutput": "Memory does not contain information about a pamphlet, so there is no corresponding memory item i.", "expectedOutput": "All the talking points"}, {"Line": 506, "Input": "What was Kayla's staff looking for?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "All the talking points"}, {"Line": 507, "Input": "Whose staff was looking for all the talking points?", "actualOutput": "The memory does not provide information on whose staff was looking for all the talking points.", "expectedOutput": "Kayla's"}, {"Line": 508, "Input": "Whose staff was looking for points the pamphlet covered?", "actualOutput": "The memory item i=7 suggests that the staff was looking for points covered in a pamphlet with a certainty of 0.8214285.", "expectedOutput": "Kayla's"}, {"Line": 509, "Input": "Which talking points did the pamphlet cover?", "actualOutput": "There is no information in the given memory about a pamphlet or its talking points.", "expectedOutput": "All the talking points"}, {"Line": 510, "Input": "What kind of points did the pamphlet cover?", "actualOutput": "Memory does not provide a clear answer to the question.", "expectedOutput": "All the talking points"}, {"Line": 511, "Input": "What covered the points?", "actualOutput": "The memory covers various points, including people's actions, questions, and updates. The certainty values range from 0.1785715 to 0.8214285.", "expectedOutput": "The pamphlet"}, {"Line": 512, "Input": "What did Carla ask Miranda to do?", "actualOutput": "Carla asked Miranda to do something according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "To clarify the question about the quarterly revenue made by Miranda's company before taxes"}, {"Line": 513, "Input": "What kind of revenue was the question about?", "actualOutput": "The question about revenue was hypothetically true and the memory item is i=7 with a certainty of 0.8214285.", "expectedOutput": "The quarterly revenue made by Miranda's company before taxes"}, {"Line": 514, "Input": "Who owns the company?", "actualOutput": "Memory item i=3 states that the company belongs to her with a certainty of 0.736842105263158.", "expectedOutput": "Miranda"}, {"Line": 515, "Input": "Who did Carla send the blueprints to?", "actualOutput": "Carla sent the blueprints to Miranda according to memory item i=16 with a certainty of 0.8214285.", "expectedOutput": "Carla's boss"}, {"Line": 516, "Input": "Who did Carla send the blueprints?", "actualOutput": "Carla sent the blueprints to Miranda according to memory item 16 with a certainty of 0.8214285.", "expectedOutput": "Carla's boss"}, {"Line": 517, "Input": "Who were the blueprints sent to?", "actualOutput": "The blueprints were sent to Wilma according to memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "Carla's boss"}, {"Line": 518, "Input": "Who did Kayla brew the coffee for?", "actualOutput": "Kayla brewed coffee for someone, but it is not specified who. This information is in memory item i=6 with a certainty of 0.8214285.", "expectedOutput": "Terrence"}, {"Line": 519, "Input": "Who did Kayla brew another batch of coffee?", "actualOutput": "Kayla brewed another batch of coffee according to memory item i=4 with a certainty of 0.627.", "expectedOutput": "Terrence"}, {"Line": 520, "Input": "Who did Kayla give twenty dollars?", "actualOutput": "Kayla gave twenty dollars to someone according to Memory. This is memory item i=2 with a certainty value of 0.6411150125896854.", "expectedOutput": "Mike"}, {"Line": 521, "Input": "Who did Kayla give twenty dollars to?", "actualOutput": "Kayla gave twenty dollars to someone, but it is uncertain who. Memory item i=2 has a certainty of 0.6411150125896854.", "expectedOutput": "Mike"}, {"Line": 522, "Input": "Who did Kayla give the money?", "actualOutput": "Kayla gave twenty dollars to someone according to Memory item i=2 with a certainty of 0.6411150125896854.", "expectedOutput": "Mike"}, {"Line": 523, "Input": "Who did Kayla give the amount to?", "actualOutput": "Kayla gave twenty dollars to someone, according to memory item i=2 with a certainty of 0.6411150125896854.", "expectedOutput": "Mike"}, {"Line": 524, "Input": "How much did Kayla give?", "actualOutput": "Kayla gave twenty dollars according to Memory. This is memory item i=2 with a certainty value of 0.6411150125896854.", "expectedOutput": "$20"}, {"Line": 525, "Input": "What amount did Kayla give Mike?", "actualOutput": "Kayla gave twenty dollars to Terrence and Mike according to Memory. This information is in memory item i=2 with a certainty of 0.6411150125896854.", "expectedOutput": "$20"}, {"Line": 526, "Input": "How much money was given to Mike?", "actualOutput": "Memory item i=4 states that Kayla gave something to Mike, but it does not specify the amount of money given.", "expectedOutput": "$20"}, {"Line": 527, "Input": "Carrot is to vegetable as apple is to what?", "actualOutput": "According to Memory, apple is hypothetically true and has a certainty value of 0.7368. Memory does not provide an answer to the question.", "expectedOutput": "fruit"}, {"Line": 528, "Input": "Produce is to food as carrot is to what?", "actualOutput": "According to Memory, carrot is to food. This is implied by memory item i=3: \"soup_dumpling isa food.\" (certainty=0.736842105263158)", "expectedOutput": "vegetable"}, {"Line": 529, "Input": "Produce is to ripeness as animal is to what?", "actualOutput": "Memory does not provide an answer to this question.", "expectedOutput": "gender"}, {"Line": 530, "Input": "Mother is to child as grandmother is to what?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "grandchild"}, {"Line": 531, "Input": "Engine is to sparkplug as car is to what?", "actualOutput": "According to Memory, car is to topspeed (i=0) with a certainty of 0.736842105263158.", "expectedOutput": "wheel"}, {"Line": 532, "Input": "Tea is to caffeine as wine is to what?", "actualOutput": "According to Memory, wine is to alcohol. This is stated in memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "alcohol"}, {"Line": 533, "Input": "Carla ducked.", "actualOutput": "RelationClaim(carla,\"Ducked\",null)", "expectedOutput": ""}, {"Line": 534, "Input": "Clifton saw her duck.", "actualOutput": "RelationClaim(clifton,saw,duck)\nNegatedRelationClaim(her,saw,duck)", "expectedOutput": ""}, {"Line": 535, "Input": "Did Clifton see Carla duck?", "actualOutput": "Memory item i=4 states that Clifton saw a duck, but there is no mention of Carla or her duck. Therefore, it is uncertain if Clifton saw Carla's duck.", "expectedOutput": "Yes"}, {"Line": 536, "Input": "Did Clifton see Carla's duck?", "actualOutput": "Memory does not provide a clear answer, as there is a hypothetical truth about Clifton seeing a duck and a knowing truth about Carla asking Miranda.", "expectedOutput": "\"No, Carla\""}, {"Line": 537, "Input": "Jeannie is Carla's friend.", "actualOutput": "RelationClaim(\"jeannie\",\"IsA\",\"friend\")\nRelationClaim(\"friend\",\"belongsTo\",\"carla\")\nRelationClaim(\"jeannie\",\"belongsTo\",\"carla\")", "expectedOutput": ""}, {"Line": 538, "Input": "Jeannie has a duck.", "actualOutput": "PropertyClaim(\"jeannie\",\"HasProperty\",\"duck\")", "expectedOutput": ""}, {"Line": 539, "Input": "Clifton saw her duck.", "actualOutput": "RelationClaim(clifton,\"Saw\",her_duck)\nNegatedRelationClaim(clifton,\"Saw\",her_duck) #not needed since sentence has to be believed\nNegatedPropertyClaim(clifton,\"HasProperty\",her_duck) #not needed since sentence has to be believed\nPropertyClaim(her_duck,\"BelongsTo\",clifton)", "expectedOutput": ""}, {"Line": 540, "Input": "Did Clifton see Jeannie duck?", "actualOutput": "Memory item i=18 suggests that Jeannie has a duck, but there is no memory indicating whether Clifton saw it.", "expectedOutput": "\"No, Carla\""}, {"Line": 541, "Input": "Did Clifton see Jeannie's duck?", "actualOutput": "Memory item i=17 suggests that Jeannie has a duck, but there is no memory item indicating whether Clifton saw it.", "expectedOutput": "Yes"}, {"Line": 542, "Input": "If Sally is a girl then say Sally is funny.?", "actualOutput": "Memory does not contain information about whether Sally is funny or not.", "expectedOutput": "Sally is funny"}, {"Line": 543, "Input": "If Sally is a boy then say Sally is interesting.?", "actualOutput": "There is no memory item that directly addresses whether Sally is a boy or girl, so the answer cannot be determined from the given memory contents.", "expectedOutput": "\"No, girl\""}, {"Line": 544, "Input": "Does Jim receive pictures?", "actualOutput": "Yes, Jim receives a picture according to memory item i=4 with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 545, "Input": "What will Jim download?", "actualOutput": "Jim will hypothetically download something according to memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 546, "Input": "Will Jim download pictures?", "actualOutput": "According to memory item i=21, Jim will download them with a certainty value of 0.8214285.", "expectedOutput": "I don't know"}, {"Line": 547, "Input": "Jim receives pictures.", "actualOutput": "RelationClaim(jim, \"Receives\", pictures)", "expectedOutput": ""}, {"Line": 548, "Input": "Does Jim receive envelopes?", "actualOutput": "There is no memory item indicating that Jim receives envelopes, so the probability is 0.", "expectedOutput": "\"No, pictures\""}, {"Line": 549, "Input": "Will Jim download pictures?", "actualOutput": "According to memory item i=21, Jim will download the pictures with a high degree of certainty (0.8214285).", "expectedOutput": "yes"}, {"Line": 550, "Input": "Does Jim receive pictures?", "actualOutput": "Yes, Jim receives pictures according to memory item 22 with a certainty of 0.500116826679317.", "expectedOutput": "yes"}, {"Line": 551, "Input": "Will Jim receive new emails?", "actualOutput": "Memory does not provide enough information to answer the question with certainty.", "expectedOutput": "\"No, pictures\""}, {"Line": 552, "Input": "Will Logan receive new emails?", "actualOutput": "There is a 26.32% chance that Logan will not receive new emails according to memory item i=4.", "expectedOutput": "I don't know"}, {"Line": 553, "Input": "Is Logan's inbox full?", "actualOutput": "According to memory item i=0, Logan's inbox is hypothetically full with a certainty of 0.7368.", "expectedOutput": "I don't know"}, {"Line": 554, "Input": "Logan's inbox is full.", "actualOutput": "PropertyClaim(inbox,\"BelongsTo\",logan)\nPropertyClaim(inbox,\"HasProperty\",full)", "expectedOutput": ""}, {"Line": 555, "Input": "Is Logan's outbox full?", "actualOutput": "Memory item i=16 states that \"inbox is full for Logan\" with a certainty of 0.8214285, suggesting that Logan's outbox may be full.", "expectedOutput": "I don't know"}, {"Line": 556, "Input": "Is Logan's inbox full?", "actualOutput": "According to memory item i=16, Logan's inbox is full with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 557, "Input": "Will Logan receive new emails?", "actualOutput": "There is a hypothetical chance (certainty=0.5000934613434537) that Logan will receive new emails (i=20) based on the memory content.", "expectedOutput": "no"}, {"Line": 558, "Input": "Is Marcus early?", "actualOutput": "There is no memory item that directly answers whether Marcus is early.", "expectedOutput": "I don't know"}, {"Line": 559, "Input": "Does Marcus clean the blackboards?", "actualOutput": "Memory item i=1 states that \"marcus clean blackboard\" with a certainty of 0.736842105263158, indicating a high probability that Marcus did clean the blackboards.", "expectedOutput": "I don't know"}, {"Line": 560, "Input": "Marcus is early.", "actualOutput": "RelationClaim(marcus,\"ArriveBefore\",time)\nNegatedRelationClaim(marcus,\"ArriveLate\",time)", "expectedOutput": ""}, {"Line": 561, "Input": "Is Marcus late?", "actualOutput": "There is no information in the memory about Marcus being late, so the answer is uncertain (certainty=0).", "expectedOutput": "I don't know"}, {"Line": 562, "Input": "Is Marcus early?", "actualOutput": "There is no memory item that directly states whether Marcus is early or not, so it cannot be determined with certainty.", "expectedOutput": "yes"}, {"Line": 563, "Input": "Does Marcus clean the blackboards?", "actualOutput": "Yes, Marcus cleans the blackboard according to memory item 20 with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 564, "Input": "Does Simon propose at the wedding?", "actualOutput": "Yes, Simon proposes at the wedding according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 565, "Input": "Does Marie take pictures?", "actualOutput": "Marie takes pictures according to Memory item i=3 with a hypothetical truth type and a certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 566, "Input": "Simon proposes at the wedding.", "actualOutput": "RelationClaim(\"simon\",\"ProposesAt\",\"wedding\")", "expectedOutput": ""}, {"Line": 567, "Input": "Does Simon propose at the wedding?", "actualOutput": "Memory item i=19 suggests that Simon hypothetically proposes at the wedding with a certainty of 0.5.", "expectedOutput": "Yes"}, {"Line": 568, "Input": "Does Marie take pictures?", "actualOutput": "Marie takes pictures at the wedding according to memory item i=21 with a certainty of 0.8214285.", "expectedOutput": "Yes"}, {"Line": 569, "Input": "Do you close the window?", "actualOutput": "According to memory item i=4, there is a hypothetical truth with a certainty of 0.736842105263158 that you close the window.", "expectedOutput": "I don't know"}, {"Line": 570, "Input": "do you close the window?", "actualOutput": "According to memory item i=0, the window is closed hypothetically false with a certainty of 0.263.", "expectedOutput": "I don't know"}, {"Line": 571, "Input": "You close the window.", "actualOutput": "RelationClaim(\"you\",\"close\",\"window\")\nRelationClaim(\"window\",\"IsA\",\"window\")\nPropertyClaim(\"window\",\"HasProperty\",\"closed\")", "expectedOutput": ""}, {"Line": 572, "Input": "Do you close the window?", "actualOutput": "According to memory item 20, there is a 50% chance that you closed the window.", "expectedOutput": "yes"}, {"Line": 573, "Input": "Is the window closed?", "actualOutput": "Memory item i=20 suggests that the window is both closed and contradictory with a certainty value of 0.378.", "expectedOutput": "yes"}, {"Line": 574, "Input": "When is Wednesday?", "actualOutput": "There is no information in Memory about when Wednesday is, so none of the memory items can be used to answer this question.", "expectedOutput": "10/26/2016"}, {"Line": 575, "Input": "When is tomorrow?", "actualOutput": "There is no memory item that directly answers when tomorrow is.", "expectedOutput": "10/22/2016"}, {"Line": 576, "Input": "When is today?", "actualOutput": "There is no information in the Memory about today's date or day of the week.", "expectedOutput": "10/21/2016"}, {"Line": 577, "Input": "When is this week?", "actualOutput": "There is no information in the Memory about when this week is.", "expectedOutput": "from 10/16/2016 to 10/22/2016"}, {"Line": 578, "Input": "When is next week?", "actualOutput": "There is no memory item that directly answers when next week is.", "expectedOutput": "from 10/23/2016 to 10/29/2016"}, {"Line": 579, "Input": "When was last week?", "actualOutput": "There is no clear indication of when last week was in the Memory.", "expectedOutput": "from 10/9/2016 to 10/15/2016"}, {"Line": 580, "Input": "When was last month?", "actualOutput": "There is no information in the Memory about when last month was, so none of the memory items can be identified as the answer.", "expectedOutput": "from 9/1/2016 to 9/30/2016"}, {"Line": 581, "Input": "When is this weekend?", "actualOutput": "There is no memory item that directly answers when this weekend is.", "expectedOutput": "from 10/22/2016 to 10/23/2016"}, {"Line": 582, "Input": "When is this Wednesday?", "actualOutput": "There is no information in the Memory about when this Wednesday is.", "expectedOutput": "10/26/2016"}, {"Line": 583, "Input": "When is next Wednesday?", "actualOutput": "There is no information in the given memory about when the next Wednesday is.", "expectedOutput": "10/26/2016"}, {"Line": 584, "Input": "When is next weekend?", "actualOutput": "There is no memory item that directly answers the question of when next weekend is.", "expectedOutput": "from 10/29/2016 to 10/30/2016"}, {"Line": 585, "Input": "When is next month?", "actualOutput": "There is no memory item that directly answers when next month is, so the answer cannot be determined with certainty.", "expectedOutput": "from 11/1/2016 to 11/30/2016"}, {"Line": 586, "Input": "When is this year?", "actualOutput": "There is no information in the Memory about the current year or any specific time frame.", "expectedOutput": "from 1/1/2016 to 12/31/2016"}, {"Line": 587, "Input": "When is all week?", "actualOutput": "There is no memory item that explicitly states when \"all week\" is, so it cannot be determined with certainty.", "expectedOutput": "from 10/16/2016 to 10/22/2016"}, {"Line": 588, "Input": "When is all year?", "actualOutput": "There is no memory item that states when all year is, so it cannot be determined with certainty.", "expectedOutput": "from 1/1/2016 to 12/31/2016"}, {"Line": 589, "Input": "When was yesterday?", "actualOutput": "Yesterday was mentioned in memory item i=0 with a certainty of 0.7368, but the exact date is unknown.", "expectedOutput": "10/20/2016"}, {"Line": 590, "Input": "When was Wednesday?", "actualOutput": "There is no memory item that directly states when Wednesday was, so it cannot be determined with certainty.", "expectedOutput": "10/19/2016"}, {"Line": 591, "Input": "When was last Tuesday?", "actualOutput": "There is no memory item that directly states when last Tuesday was, so the answer cannot be determined from the given memory contents.", "expectedOutput": "10/18/2016"}, {"Line": 592, "Input": "When was last weekend?", "actualOutput": "There is no memory item that directly states when last weekend was, so the answer cannot be determined with certainty.", "expectedOutput": "from 10/15/2016 to 10/16/2016"}, {"Line": 593, "Input": "When was last week?", "actualOutput": "There is no memory item in the given list that provides a clear answer to when last week was.", "expectedOutput": "from 10/9/2016 to 10/15/2016"}, {"Line": 594, "Input": "When was last month?", "actualOutput": "There is no information in the Memory about when last month was, so it cannot be determined which memory item i corresponds to it.", "expectedOutput": "from 9/1/2016 to 9/30/2016"}, {"Line": 595, "Input": "When was last year?", "actualOutput": "There is no memory item that directly states when last year was, so the answer cannot be determined with certainty.", "expectedOutput": "from 1/1/2015 to 12/31/2015"}, {"Line": 596, "Input": "When is the upcoming weekend?", "actualOutput": "Memory does not provide information about the upcoming weekend.", "expectedOutput": "from 10/22/2016 to 10/23/2016"}, {"Line": 597, "Input": "When is this upcoming week?", "actualOutput": "There is no memory item that directly answers the question of when this upcoming week is.", "expectedOutput": "from 10/23/2016 to 10/29/2016"}, {"Line": 598, "Input": "When is this coming weekend?", "actualOutput": "Memory does not contain information about the coming weekend. No relevant memory item.", "expectedOutput": "from 10/22/2016 to 10/23/2016"}, {"Line": 599, "Input": "When is the upcoming Thursday?", "actualOutput": "There is no memory item that directly answers the question about the upcoming Thursday.", "expectedOutput": "10/27/2016"}, {"Line": 600, "Input": "When is the next month?", "actualOutput": "There is no memory item that directly answers the question of when the next month is.", "expectedOutput": "from 11/1/2016 to 11/30/2016"}, {"Line": 601, "Input": "When is the next coming Friday?", "actualOutput": "Memory does not contain information about the next coming Friday.", "expectedOutput": "10/28/2016"}, {"Line": 602, "Input": "When was the last month?", "actualOutput": "There is no information in the memory about the last month, so it cannot be determined.", "expectedOutput": "from 9/1/2016 to 9/30/2016"}, {"Line": 603, "Input": "When is the next coming month?", "actualOutput": "There is no memory item that directly answers the question about the next coming month.", "expectedOutput": "from 11/1/2016 to 11/30/2016"}, {"Line": 604, "Input": "When was this last week?", "actualOutput": "Memory item i=13 suggests that Simon proposed at a wedding on time=825, which could have been last week with a certainty of 50%.", "expectedOutput": "from 10/9/2016 to 10/15/2016"}, {"Line": 605, "Input": "When was the most recent Wednesday?", "actualOutput": "The most recent Wednesday cannot be determined from Memory.", "expectedOutput": "10/19/2016"}, {"Line": 606, "Input": "When was this past weekend?", "actualOutput": "There is no memory item that directly states when the past weekend was.", "expectedOutput": "from 10/15/2016 to 10/16/2016"}, {"Line": 607, "Input": "When is Tuesday morning?", "actualOutput": "There is no memory item that directly answers the question of when Tuesday morning is.", "expectedOutput": "On 10/25/2016 from 6 AM to noon"}, {"Line": 608, "Input": "When is next Tuesday morning?", "actualOutput": "There is no memory item that directly answers the question about next Tuesday morning.", "expectedOutput": "On 10/25/2016 from 6 AM to noon"}, {"Line": 609, "Input": "When is Panz's birthday?", "actualOutput": "Memory does not provide information about Panz's birthday.", "expectedOutput": "on 11/20/2016"}, {"Line": 610, "Input": "When is two days after her birthday?", "actualOutput": "Memory item 2 states that a ceremony occurs after a birthday with a certainty of 0.7368, but it does not provide a specific date.", "expectedOutput": "11/22/2016"}, {"Line": 611, "Input": "What date is a month before her birthday?", "actualOutput": "There is no memory content that directly answers this question.", "expectedOutput": "10/20/2016"}, {"Line": 612, "Input": "When is 2 days after 2 days after her birthday?", "actualOutput": "Memory item i=2 states that ceremony occurs after birthday with a certainty of 0.7368. Based on this, it is probabilistically likely that 2 days after 2 days after her birthday is after the ceremony.", "expectedOutput": "11/24/2016"}, {"Line": 613, "Input": "What date is the Monday after her birthday?", "actualOutput": "Memory does not provide a direct answer to the question.", "expectedOutput": "11/21/2016"}, {"Line": 614, "Input": "When is Christmas?", "actualOutput": "There is no information in Memory about when Christmas is, so none of the memory items can answer this question.", "expectedOutput": "12/25/2016"}, {"Line": 615, "Input": "What date is 2 days after Christmas?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "12/27/2016"}, {"Line": 616, "Input": "When is 2 days before Christmas?", "actualOutput": "There is no memory item that directly answers the question about 2 days before Christmas.", "expectedOutput": "12/23/2016"}, {"Line": 617, "Input": "When is the Monday before Christmas?", "actualOutput": "There is no memory item that directly answers the question about the Monday before Christmas.", "expectedOutput": "12/19/2016"}, {"Line": 618, "Input": "What date is the Monday after Christmas?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "12/26/2016"}, {"Line": 619, "Input": "When is 2 days before 2 days before Christmas?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "12/21/2016"}, {"Line": 620, "Input": "What date is 2 days before the Monday before Christmas?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "12/17/2016"}, {"Line": 621, "Input": "When is Anthony's ceremony?", "actualOutput": "Anthony's ceremony occurs in 3 days according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "On 11/23/2016"}, {"Line": 622, "Input": "Karl will walk home Monday", "actualOutput": "RelationClaim(karl, \"WillWalk\", home)\nRelationClaim(home, \"IsA\", place)\nRelationClaim(monday, \"IsA\", day)", "expectedOutput": ""}, {"Line": 623, "Input": "When will Karl walk home?", "actualOutput": "Karl will hypothetically walk home and the memory item is i=20 with a certainty value of 0.5000156802114677.", "expectedOutput": "On Monday"}, {"Line": 624, "Input": "When did Google buy DeepMind?", "actualOutput": "Google bought DeepMind according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "in 2014"}, {"Line": 625, "Input": "How do you know?", "actualOutput": "According to memory, fruit being good for you has a certainty of 0.7368 (i=1).", "expectedOutput": "money.cnn.com told me earlier today"}, {"Line": 626, "Input": "Can red unicorns fly?", "actualOutput": "There is no memory item that directly addresses red unicorns flying, so the probability is unknown.", "expectedOutput": "yes"}, {"Line": 627, "Input": "Who told you that?", "actualOutput": "Harvey Paetzold told Dee Darrell hypothetically true information with 73.68% certainty (memory item i=0).", "expectedOutput": "Jane told me earlier today"}, {"Line": 628, "Input": "this is from Jake.", "actualOutput": "RelationClaim(this,\"IsFrom\",jake)", "expectedOutput": ""}, {"Line": 629, "Input": "Amazon released Alexa last year.", "actualOutput": "RelationClaim(\"amazon\",\"released\",\"alexa\")\nNegatedRelationClaim(\"alexa\",\"released\",\"last year\")\nNegatedPropertyClaim(\"alexa\",\"isNew\",True)\nPropertyClaim(\"alexa\",\"wasReleasedIn\", \"last year\")", "expectedOutput": ""}, {"Line": 630, "Input": "What did Amazon release last year?", "actualOutput": "Memory item i=19 states that \"alexa release last_year\" with a certainty of 0.49999197173172855, suggesting it is hypothetically false.", "expectedOutput": "Alexa"}, {"Line": 631, "Input": "How do you know?", "actualOutput": "According to memory item i=16, fruit are good for you with a certainty of 0.821.", "expectedOutput": "Jake told me just now"}, {"Line": 632, "Input": "What did a U.S. Navy plane see?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "Help spelled out in palm fronds on a beach on a deserted island in the Pacific"}, {"Line": 633, "Input": "What is AMVER?", "actualOutput": "Amver is a two-part system according to memory item i=0 with a certainty of 0.641.", "expectedOutput": "A Coast Guard voluntary search and rescue program"}, {"Line": 634, "Input": "Which wine is Bill's favorite?", "actualOutput": "There is no information in Memory about Bill's favorite wine.", "expectedOutput": "Etna Rosso"}, {"Line": 635, "Input": "Which wine doesn't Bill like?", "actualOutput": "Bill doesn't like white wine (i=4) with a certainty of 0.263.", "expectedOutput": "White wine"}, {"Line": 636, "Input": "Why did James sell his plane?", "actualOutput": "James sold his plane hypothetically true, with a certainty of 0.736842105263158, according to memory item i=4.", "expectedOutput": "Because it is too slow"}, {"Line": 637, "Input": "Who has it now?", "actualOutput": "Memory does not provide enough information to answer this question.", "expectedOutput": "James' neighbor"}, {"Line": 638, "Input": "Who used to own it before?", "actualOutput": "There is no information in the given memory about who used to own something before.", "expectedOutput": "James"}, {"Line": 639, "Input": "What did James buy?", "actualOutput": "James bought a plane according to memory. The memory item is i=4 with a certainty of 0.736842105263158.", "expectedOutput": "a 20 ft plane"}, {"Line": 640, "Input": "Is the 250 horsepower engine part of the plane?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "yes"}, {"Line": 641, "Input": "Who will Viola play with?", "actualOutput": "Viola will play with Stan according to memory item i=2 with a certainty of 0.736842105263158.", "expectedOutput": "Stan"}, {"Line": 642, "Input": "When will she play with her horse?", "actualOutput": "According to Memory, Viola playing with her horse is hypothetically true with a certainty of 0.7368 (i=0).", "expectedOutput": "At 3 PM"}, {"Line": 643, "Input": "Where will she play with her horse?", "actualOutput": "She will play with her horse according to memory item 21 with a certainty of 0.8214285.", "expectedOutput": "At the park"}, {"Line": 644, "Input": "What did Suzie suggest that Phil do?", "actualOutput": "Suzie suggested that Phil do something, but the specific action is not mentioned in the memory. (Memory item i=2, certainty=0.736842105263158)", "expectedOutput": "That Phil run at 7 AM"}, {"Line": 645, "Input": "When did Suzie suggest that Phil run?", "actualOutput": "Memory item i=17 states that \"Suzie suggests Phil\" with a certainty of 0.8214285, but it does not mention anything about Phil running.", "expectedOutput": "At 7 AM"}, {"Line": 646, "Input": "Tell me who climbed the mountain?", "actualOutput": "Rufus climbed the mountain according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "Rufus"}, {"Line": 647, "Input": "Barry bought Herbie.", "actualOutput": "RelationClaim(barry,buy,herbie)", "expectedOutput": ""}, {"Line": 648, "Input": "Who has Herbie?", "actualOutput": "Barry has Herbie according to memory item i=4 with a certainty value of 0.5000010775359272.", "expectedOutput": "Barry"}, {"Line": 649, "Input": "Chad bought Herbie from Barry.", "actualOutput": "RelationClaim(chad, \"Buy\", herbie)\nRelationClaim(herbie, \"BelongTo\", barry)", "expectedOutput": ""}, {"Line": 650, "Input": "Who has Herbie?", "actualOutput": "Barry has Herbie according to memory item i=4 with a certainty value of 0.5.", "expectedOutput": "Chad"}, {"Line": 651, "Input": "What did Chad do?", "actualOutput": "Chad hypothetically bought Herbie (i=18) with a certainty of 0.5.", "expectedOutput": "bought Herbie from Barry"}, {"Line": 652, "Input": "Chad sold Herbie.", "actualOutput": "RelationClaim(chad, \"Sold\", herbie)", "expectedOutput": ""}, {"Line": 653, "Input": "Who has Herbie?", "actualOutput": "Barry has Herbie according to memory item i=4 with a certainty value of 0.5.", "expectedOutput": "I don't know"}, {"Line": 654, "Input": "Andrea has the quarterly reports", "actualOutput": "PropertyClaim(\"andrea\",\"HasProperty\",\"quarterly reports\")", "expectedOutput": ""}, {"Line": 655, "Input": "Who has the reports?", "actualOutput": "Andrea has the reports according to Memory. This is memory item i=24 with a certainty of 0.5000010775359272.", "expectedOutput": "Andrea"}, {"Line": 656, "Input": "Andrea gave the reports to Jim.", "actualOutput": "RelationClaim(andrea,gave,reports)\nRelationClaim(reports,to,jim)", "expectedOutput": ""}, {"Line": 657, "Input": "Who has the reports?", "actualOutput": "Andrea has the reports according to Memory. This is memory item i=22 with a certainty value of 0.5000016836498862.", "expectedOutput": "Jim"}, {"Line": 658, "Input": "Who gave them to him?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "Andrea"}, {"Line": 659, "Input": "Jim gave the reports to Sandra", "actualOutput": "RelationClaim(jim,gave,reports)\nRelationClaim(reports,to,sandra)", "expectedOutput": ""}, {"Line": 660, "Input": "Who gave her them?", "actualOutput": "Jim gave her them according to memory. Memory item i=3 has the highest certainty value of knowingly True at 0.8214285.", "expectedOutput": "Jim"}, {"Line": 661, "Input": "Who had the reports before him?", "actualOutput": "Andrea had the reports before Jim according to Memory. Memory item 21 has a certainty of 0.5000021045623577.", "expectedOutput": "Andrea"}, {"Line": 662, "Input": "Who had the reports after him?", "actualOutput": "Memory item i=23: Jim gave the report to Sandra with a certainty of 0.5000010775359272.", "expectedOutput": "Sandra"}, {"Line": 663, "Input": "Alex wants a dog and a cat.", "actualOutput": "RelationClaim(alex, \"Wants\", dog)\nRelationClaim(alex, \"Wants\", cat)\nNegatedRelationClaim(alex, \"Hates\", dog)\nNegatedRelationClaim(alex, \"Hates\", cat)", "expectedOutput": ""}, {"Line": 664, "Input": "What does Alex want?", "actualOutput": "According to memory, Alex wants either a dog or a cat (items i=2 and i=3) with a certainty of 0.736842105263158.", "expectedOutput": "A dog and a cat"}, {"Line": 665, "Input": "\"Actually, Alex only wants a cat\"", "actualOutput": "PropertyClaim(\"alex\",\"OnlyWants\",\"cat\")\nNegatedPropertyClaim(\"alex\",\"OnlyWants\",\"dog\")\nNegatedPropertyClaim(\"alex\",\"OnlyWants\",\"hat\")\nNegatedRelationClaim(\"alex\",\"CanChooseBetween\",\"dog\")\nRelationClaim(\"alex\",\"CanChooseBetween\",\"cat\")", "expectedOutput": ""}, {"Line": 666, "Input": "What does Alex want?", "actualOutput": "According to Memory, Alex wants a cat with a certainty of 0.830756, which corresponds to memory item i=23.", "expectedOutput": "A cat"}, {"Line": 667, "Input": "Does Alex want a dog?", "actualOutput": "There is a memory item that suggests Alex can choose between a dog and a cat, with a certainty value of 0.8214285. It is unclear if Alex wants a dog based on the available memory.", "expectedOutput": "\"No, a cat\""}, {"Line": 668, "Input": "\"Is Charles, Ray's favorite turtle?\"?", "actualOutput": "There is no memory item that directly answers the question about Charles being Ray's favorite turtle.", "expectedOutput": "\"no, Ray's new turtle\""}, {"Line": 669, "Input": "Ray's favorite turtle is Herb.", "actualOutput": "RelationClaim(ray,\"HasFavorite\",turtle)\nRelationClaim(turtle,\"Is\",herb)", "expectedOutput": ""}, {"Line": 670, "Input": "\"is Ray's favorite turtle, Charles?\"?", "actualOutput": "There is no memory item that directly answers the question about Ray's favorite turtle being Charles.", "expectedOutput": "\"no, Herb\""}, {"Line": 671, "Input": "Does Rob have a sister?", "actualOutput": "There is no memory item that directly answers the question about Rob having a sister.", "expectedOutput": "yes"}, {"Line": 672, "Input": "What is Rob's sister's cat's name?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "Toby"}, {"Line": 673, "Input": "Where is Rob's sister's cat?", "actualOutput": "The cat is hypothetically with either the old woman or Alex, with a certainty of 0.7368 (memory item i=0 or i=4).", "expectedOutput": "At the veterinarian"}, {"Line": 674, "Input": "Why is Rob's sister's cat at the vet?", "actualOutput": "Memory item i=3 suggests that the cat is at the vet, with a certainty of 0.736842105263158.", "expectedOutput": "because Toby needs some shots"}, {"Line": 675, "Input": "Does Toby need treats?", "actualOutput": "There is no memory item that directly states whether Toby needs treats or not.", "expectedOutput": "\"no, some shots\""}, {"Line": 676, "Input": "Who is Gina's cat?", "actualOutput": "There is no information in Memory about Gina's cat.", "expectedOutput": "Toby"}, {"Line": 677, "Input": "Is Gina's cat friendly?", "actualOutput": "There is no memory item that directly answers whether Gina's cat is friendly or not.", "expectedOutput": "yes"}, {"Line": 678, "Input": "Is Toby cold blooded?", "actualOutput": "There is no information in the given memory that can answer whether Toby is cold-blooded or not.", "expectedOutput": "\"No, warm blooded\""}, {"Line": 679, "Input": "\"Actually, Rob's sister's cat is Moby.\"", "actualOutput": "RelationClaim(cat,\"BelongsTo\",rob_sister)\nRelationClaim(cat,\"Is\",moby)\nPropertyClaim(rob_sister,\"Has\",sister)\nNegatedPropertyClaim(sister,\"Has\",cat)", "expectedOutput": ""}, {"Line": 680, "Input": "Who is Gina's cat?", "actualOutput": "There is no information in Memory about Gina's cat, so it cannot be determined from any memory item.", "expectedOutput": "Moby"}, {"Line": 681, "Input": "Is Robert's sister's cat Toby?", "actualOutput": "There is a memory item (i=4) that states the cat's name is Toby with a certainty of 0.7368.", "expectedOutput": "\"No, Moby\""}, {"Line": 682, "Input": "Where is Moby?", "actualOutput": "Moby is hypothetically at the vet and given to an old woman. This information is contained in memory item i=13 and i=14 with a certainty of 0.5.", "expectedOutput": "At the veterinarian"}, {"Line": 683, "Input": "Where is Toby?", "actualOutput": "Toby's location is uncertain, but he may be with Alex or with Sister. Memory item i=21.", "expectedOutput": "I don't know"}, {"Line": 684, "Input": "Does a large pot have tea?", "actualOutput": "Memory item i=4 states that \"large have tea\" with a certainty of 0.425, but it does not mention a pot. Therefore, it is uncertain if a large pot has tea.", "expectedOutput": "yes"}, {"Line": 685, "Input": "Does a small pot have tea?", "actualOutput": "Memory item i=4 states that \"pot have tea\" is hypothetically false with a certainty of 0.2631578947368421. Therefore, it is unlikely that a small pot has tea according to Memory.", "expectedOutput": "no"}, {"Line": 686, "Input": "The cold pot has milk.", "actualOutput": "PropertyClaim(\"pot\",\"HasProperty\",\"cold\")\nPropertyClaim(\"pot\",\"HasProperty\",\"milk\")", "expectedOutput": ""}, {"Line": 687, "Input": "Does the small pot have milk?", "actualOutput": "Memory item 21 states that the pot has the property of cold milk with a certainty of 0.5, which suggests a 50/50 chance of the small pot having milk.", "expectedOutput": "yes"}, {"Line": 688, "Input": "Who is a teacher of Stan?", "actualOutput": "Memory item i=1 states that Murray teaches Stan with a certainty of 0.736842105263158.", "expectedOutput": "Murray"}, {"Line": 689, "Input": "Whose teacher is Murray?", "actualOutput": "Murray teaches Stan according to memory item i=21 with a certainty of 0.8214285.", "expectedOutput": "Stan's"}, {"Line": 690, "Input": "who is running for office?", "actualOutput": "There is no memory item indicating who is running for office.", "expectedOutput": "Ralph"}, {"Line": 691, "Input": "who is Scott's family?", "actualOutput": "There is no information in the given memory about Scott's family.", "expectedOutput": "\"Ralph, Ethan, and Nan\""}, {"Line": 692, "Input": "Is Nan male?", "actualOutput": "There is no information in Memory about whether Nan is male or not.", "expectedOutput": "\"No, female\""}, {"Line": 693, "Input": "How many sisters does Trevor have?", "actualOutput": "Trevor hypothetically has two sisters according to memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "2"}, {"Line": 694, "Input": "Who are Trevor's sisters?", "actualOutput": "Trevor has 2 sisters according to memory item i=21 with a certainty value of 0.8214285.", "expectedOutput": "Alisha and Becky"}, {"Line": 695, "Input": "Who is Kenneth's daughter?", "actualOutput": "There is no information in the given Memory about Kenneth's daughter.", "expectedOutput": "Kenisha"}, {"Line": 696, "Input": "Which robot is Ronald's?", "actualOutput": "There is no information in the given Memory about Ronald's robot, so it cannot be determined.", "expectedOutput": "Ozmo"}, {"Line": 697, "Input": "Is Jane's book big?", "actualOutput": "Memory item i=4 states that \"book isbig big\" with a certainty of 0.736842105263158, so it is probable that Jane's book is big.", "expectedOutput": "yes"}, {"Line": 698, "Input": "Is Mike's book small?", "actualOutput": "There is no memory item that directly states whether Mike's book is small or not.", "expectedOutput": "yes"}, {"Line": 699, "Input": "Is Jane's book small?", "actualOutput": "There is no information in the memory that directly states whether Jane's book is small or not.", "expectedOutput": "\"No, big\""}, {"Line": 700, "Input": "Is Mike's book big?", "actualOutput": "Memory does not provide a direct answer to whether Mike's book is big.", "expectedOutput": "\"No, small\""}, {"Line": 701, "Input": "What color is Jane's book?", "actualOutput": "Jane's book is hypothetically true to be orange according to memory item i=2 with a certainty of 0.736842105263158.", "expectedOutput": "orange"}, {"Line": 702, "Input": "What color is Mike's book?", "actualOutput": "There is no information in Memory about the color of Mike's book.", "expectedOutput": "brown"}, {"Line": 703, "Input": "Is Krista nice?", "actualOutput": "Krista is hypothetically nice with a certainty of 0.6707060063224447, according to memory item i=1.", "expectedOutput": "\"yes, very nice\""}, {"Line": 704, "Input": "Who made the case?", "actualOutput": "Memory item i=4 states that the lawyer made the case with a certainty value of 0.736842105263158.", "expectedOutput": "Harvey"}, {"Line": 705, "Input": "Does rain fall directly from the sky?", "actualOutput": "Memory item i=0 suggests that rain falls from the sky hypothetically true with a certainty of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 706, "Input": "Does rain fall directly from the ground?", "actualOutput": "Memory item i=13 states \"rain fall sky\" with a certainty of 0.8214285, suggesting that rain does not fall directly from the ground.", "expectedOutput": "\"No, the sky\""}, {"Line": 707, "Input": "Do Lily and Charlie have a vase?", "actualOutput": "According to Memory, Lily and Charlie both own a vase (Memory item i=4) with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 708, "Input": "Does Lily have a vase?", "actualOutput": "Yes, Lily owns a vase according to memory item i=17 with a certainty value of 0.8214285.", "expectedOutput": "yes"}, {"Line": 709, "Input": "Does Charlie have a vase?", "actualOutput": "Yes, according to memory item i=4, it is hypothetically true with a certainty of 0.736842105263158 that Charlie owns a vase.", "expectedOutput": "yes"}, {"Line": 710, "Input": "What kind of car will Uber pay for?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "Mid-size rental cars"}, {"Line": 711, "Input": "What type of car will Uber pay for?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "Mid-size rental cars"}, {"Line": 712, "Input": "What will not be taken lightly?", "actualOutput": "Memory item i=3 (james sell plane) will not be taken lightly with a certainty of 0.8214285.", "expectedOutput": "Any claim against Yahoo"}, {"Line": 713, "Input": "Can the children touch Jon's reptiles?", "actualOutput": "Memory does not provide information on Jon's reptiles, so it is impossible to determine.", "expectedOutput": "yes"}, {"Line": 714, "Input": "Which animals can the children touch?", "actualOutput": "According to Memory, the children can touch a dog (i=4) with a certainty of 0.8214285.", "expectedOutput": "Small mammals and Jon's reptiles"}, {"Line": 715, "Input": "What kind of animals can the children touch?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "Small mammals and Jon's reptiles"}, {"Line": 716, "Input": "What does Amazon give refunds for?", "actualOutput": "Amazon gives refunds for specific items (i=2) and types of items (i=3) with a certainty of at least 0.641.", "expectedOutput": "Very specific defects"}, {"Line": 717, "Input": "Is twenty-second an ordinal?", "actualOutput": "There is no information in Memory about a twenty-second ordinal.", "expectedOutput": "yes"}, {"Line": 718, "Input": "Is smrt@aigo.ai an email address?", "actualOutput": "There is no information in the given memory about whether smrt@aigo.ai is an email address.", "expectedOutput": "yes"}, {"Line": 719, "Input": "Is 123-4567 a phone number?", "actualOutput": "There is no information in Memory that directly answers the question about 123-4567 being a phone number.", "expectedOutput": "yes"}, {"Line": 720, "Input": "Is ROBO a ticker?", "actualOutput": "There is no information in Memory about whether \"robo\" is a ticker.", "expectedOutput": "yes"}, {"Line": 721, "Input": "Is 3 and a half days a time span?", "actualOutput": "Memory does not contain information about 3 and a half days as a time span.", "expectedOutput": "yes"}, {"Line": 722, "Input": "Is 1100 cc a volume?", "actualOutput": "There is no information in Memory that directly answers this question.", "expectedOutput": "yes"}, {"Line": 723, "Input": "Whose dad bought ice cream and gelato at the creamery?", "actualOutput": "Memory does not provide information about whose dad bought ice cream and gelato at the creamery.", "expectedOutput": "Jill's"}, {"Line": 724, "Input": "Whose daughter is not home?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "Dane's"}, {"Line": 725, "Input": "Is Jill home?", "actualOutput": "Memory item i=4 states that \"jill isa home\" with a certainty of 0.2631578947368421, which is hypothetically false.", "expectedOutput": "\"No, Jill is not home\""}, {"Line": 726, "Input": "Why did Jim sell the bike?", "actualOutput": "Memory item i=4: Jim sold the bike hypothetically with a certainty of 0.736842105263158.", "expectedOutput": "because Jim was sick"}, {"Line": 727, "Input": "Why will the police have to investigate?", "actualOutput": "Memory item i=0, because it is hypothetically true and has a high certainty value.", "expectedOutput": "in order for the police to catch the criminal"}, {"Line": 728, "Input": "Why didn't Jim attend?", "actualOutput": "Jim didn't attend due to memory item i=4, with a certainty value of 0.263.", "expectedOutput": "due to Jim's illness"}, {"Line": 729, "Input": "Why has Johnny's singing improved?", "actualOutput": "There is no memory item that directly answers why Johnny's singing has improved.", "expectedOutput": "Thanks to Johnny's practicing and Johnny's voice coach"}, {"Line": 730, "Input": "Why does Jane want to have some room?", "actualOutput": "Memory item i=4: jane want room. Certainty=0.736842105263158.", "expectedOutput": "because Jane is going to try a stunt"}, {"Line": 731, "Input": "Does Lara have any children?", "actualOutput": "Lara has property children according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 732, "Input": "How many kids does she have?", "actualOutput": "Memory does not provide information on how many kids she has.", "expectedOutput": "2"}, {"Line": 733, "Input": "Does Ella have any emails?", "actualOutput": "According to Memory, ella has an email (i=4) with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 734, "Input": "Does Ella have 2 emails?", "actualOutput": "Memory item i=7 states that Ella has an email, but there is no mention of a second email. Probability of Ella having 2 emails is low.", "expectedOutput": "\"No, 3\""}, {"Line": 735, "Input": "How many letters does Ella have?", "actualOutput": "According to Memory, Ella has at least one letter, but it is uncertain how many. The memory item for this information is i=4.", "expectedOutput": "1"}, {"Line": 736, "Input": "Does George have any apples?", "actualOutput": "There is no memory item that directly states whether George has apples or not.", "expectedOutput": "no"}, {"Line": 737, "Input": "How much sand does George have?", "actualOutput": "George has a pile of sand, hypothetically true with a certainty of 0.736842105263158, memory item i=1.", "expectedOutput": "pile of sand"}, {"Line": 738, "Input": "How much rope is Alex's?", "actualOutput": "There is no memory item that directly answers the question about the amount of rope belonging to Alex.", "expectedOutput": "60 feet"}, {"Line": 739, "Input": "How much chalk can Henry buy?", "actualOutput": "Henry can hypothetically buy chalk according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "\"\"\"a lot of chalk\"\"\""}, {"Line": 740, "Input": "How hot is Henry's car?", "actualOutput": "There is no memory item that directly states the hotness of Henry's car.", "expectedOutput": "very"}, {"Line": 741, "Input": "How did Delia cook the pasta?", "actualOutput": "Delia hypothetically cooked the pasta. Memory item i=4. Certainty=0.736842105263158.", "expectedOutput": "\"\"\"with the boiler\"\"\""}, {"Line": 742, "Input": "How did Delia drive the truck?", "actualOutput": "Memory item i=4 states that Delia hypothetically drove the truck with a certainty of 0.7368.", "expectedOutput": "dangerously"}, {"Line": 743, "Input": "Did Delia drive the car dangerously?", "actualOutput": "Memory item i=3 states that \"delia drive dangerous\" with a certainty of 0.641, indicating a likelihood but not certainty that she drove dangerously.", "expectedOutput": "\"No, the truck\""}, {"Line": 744, "Input": "How did Kim dance?", "actualOutput": "Kim danced beautifully and gracefully according to Memory. Memory item i=3 and i=4 have a certainty of 0.736842105263158.", "expectedOutput": "Beautifully and gracefully"}, {"Line": 745, "Input": "Did Kim dance gracefully and poorly?", "actualOutput": "Kim danced gracefully according to memory item i=4 with a certainty of 0.8214285. There is no memory of her dancing poorly.", "expectedOutput": "Beautifully and gracefully"}, {"Line": 746, "Input": "Whose dogs are nice?", "actualOutput": "Memory item i=4 states that \"dog isa nice\" with a hypothetical certainty of 0.736842105263158. It is not specified whose dogs are nice.", "expectedOutput": "\"George, Rodney, Robin, Ella, and Owen's\""}, {"Line": 747, "Input": "Did Delia buy bikes and a missile?", "actualOutput": "Memory does not contain information about Delia buying bikes and a missile.", "expectedOutput": "\"No. A house, bikes, boats, planes, and a car\""}, {"Line": 748, "Input": "Did Allison buy a lot of ships and some sweets?", "actualOutput": "There is no memory item that states Allison bought ships and sweets, so the probability is 0.", "expectedOutput": "\"No. Three cars, some ships, and a lot of sweets\""}, {"Line": 749, "Input": "Did Allison buy ships and mouses?", "actualOutput": "There is no memory item that mentions Allison buying ships and mouses.", "expectedOutput": "\"No. Three cars, some ships, and a lot of sweets\""}, {"Line": 750, "Input": "Did Allison buy 2 cars?", "actualOutput": "There is no memory item that directly states whether Allison bought 2 cars, so it cannot be determined with certainty.", "expectedOutput": "\"No, 3\""}, {"Line": 751, "Input": "Who likes ships and mouses?", "actualOutput": "Priscilla likes Ronald and Harry, but it is uncertain who likes ships and mouses.", "expectedOutput": "Paige and Henry"}, {"Line": 752, "Input": "What do Paige and Henry like?", "actualOutput": "Paige and Henry's likes are not mentioned in Memory.", "expectedOutput": "ships and mice"}, {"Line": 753, "Input": "What were bought by Tom and Lara?", "actualOutput": "Tom bought oranges and apples (i=2, i=3) and Lara bought apples (i=0).", "expectedOutput": "apples and oranges"}, {"Line": 754, "Input": "What are extremely sweet completely edible flowers?", "actualOutput": "Memory item i=2 states that \"lily isa edible\" with a certainty of 0.736842105263158.", "expectedOutput": "lily"}, {"Line": 755, "Input": "Which owls are dangerous?", "actualOutput": "Memory item i=1 states that \"owl haveproperty dangerous\" with a certainty of 0.736842105263158. Therefore, it is hypothetically true that some owls are dangerous.", "expectedOutput": "\"owls from small, dense forests\""}, {"Line": 756, "Input": "Are owls from small dense forest dangerous?", "actualOutput": "Memory item i=4 states that \"owl haveproperty dangerous\" with a certainty of 0.8214285, so it is likely that owls from small dense forest are considered dangerous.", "expectedOutput": "yes"}, {"Line": 757, "Input": "Are owls from big dense forest dangerous?", "actualOutput": "Memory does not provide information on whether owls from big dense forests are dangerous.", "expectedOutput": "I don't know"}, {"Line": 758, "Input": "Are owls from dense forest dangerous?", "actualOutput": "Memory item i=2 states that owls have the property of being dangerous with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 759, "Input": "Did Gabe drink hot milk?", "actualOutput": "Memory item i=2 states that \"gabe drink hot\" with a certainty of 0.6411150125896854, but it does not specify if it was hot milk.", "expectedOutput": "No. Hot coffee and hot cocoa"}, {"Line": 760, "Input": "Did Gabe drink hot coffee?", "actualOutput": "According to Memory, it is hypothetically true that Gabe drank hot coffee with a certainty value of 0.6411150125896854 at i=2.", "expectedOutput": "yes"}, {"Line": 761, "Input": "Did Gabe drink hot cocoa?", "actualOutput": "Yes, according to memory item i=4, Gabe drank hot cocoa with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 762, "Input": "What did Gabe drink?", "actualOutput": "Gabe drank hot, according to memory item i=2 with a certainty value of 0.6411150125896854.", "expectedOutput": "Hot coffee and hot cocoa"}, {"Line": 763, "Input": "Who ran screaming?", "actualOutput": "Ramon ran screaming according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "Ramon"}, {"Line": 764, "Input": "Who ran crying?", "actualOutput": "Ramon ran screaming according to memory item i=0 with a certainty of 0.8214285.", "expectedOutput": "I don't know"}, {"Line": 765, "Input": "What did Ramon do?", "actualOutput": "Ramon ran screaming according to memory item i=0 with a certainty of 0.8214285.", "expectedOutput": "Ran screaming"}, {"Line": 766, "Input": "When did Owain remind Cornelia?", "actualOutput": "Owain reminded Cornelia hypothetically true at either noon or 5pm, with a certainty of 0.736842105263158. It could be either memory item i=0 or i=1.", "expectedOutput": "At noon"}, {"Line": 767, "Input": "What did Owain remind Cornelia?", "actualOutput": "Owain reminded Cornelia of something hypothetically true, according to memory item i=2 with a certainty of 0.736842105263158.", "expectedOutput": "To run at 5 PM"}, {"Line": 768, "Input": "What book did Kim read?", "actualOutput": "Kim read a book, with a certainty of 0.7368, according to memory item i=4.", "expectedOutput": "\"a book about the acidic, cold, hot, and dry conditions of these environments\""}, {"Line": 769, "Input": "Whose dogs terrorize the elderly?", "actualOutput": "Memory does not provide information on whose dogs terrorize the elderly.", "expectedOutput": "Gio's"}, {"Line": 770, "Input": "Where are Gio's dogs from?", "actualOutput": "There is no information in the given memory about Gio's dogs, so it is impossible to determine which memory item i corresponds to this question.", "expectedOutput": "From Alesso and Chiara's mafia"}, {"Line": 771, "Input": "Who around the house does Lara like?", "actualOutput": "Lara likes Henry around the house according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "Henry"}, {"Line": 772, "Input": "Where on the ship did Henry hide the gold?", "actualOutput": "Memory does not provide a certain answer to where Henry hid the gold. Memory item i=4 suggests that it is hypothetically true that he hid it, but does not provide a location.", "expectedOutput": "in the red cabinet on the ship"}, {"Line": 773, "Input": "Where on the ship did Henry hide the diamond?", "actualOutput": "Memory item i=4 states that Henry hiding the diamond is hypothetically false with a certainty value of 0.263.", "expectedOutput": "in the blue cabinet on the ship"}, {"Line": 774, "Input": "Where on the car did Henry hide the gold?", "actualOutput": "Memory does not provide information on where Henry hid the gold. No memory item provides this information.", "expectedOutput": "I don't know"}, {"Line": 775, "Input": "Is the rolling bus blue?", "actualOutput": "Memory does not provide a direct answer to the question. The closest related memory item is i=1, which states that \"blue isa truck\" with a certainty of 0.736842105263158.", "expectedOutput": "\"No, green\""}, {"Line": 776, "Input": "What is an example of tree fruit?", "actualOutput": "Memory item i=1 states that \"fruit like banana\" with a certainty of 0.736842105263158.", "expectedOutput": "persimmon"}, {"Line": 777, "Input": "What are the three sources of European Union law?", "actualOutput": "Sources of EU law: uncertain, not mentioned in Memory.", "expectedOutput": "\"Primary law, secondary law, and supplementary law\""}, {"Line": 778, "Input": "Is Arnold Smith a drummer?", "actualOutput": "Arnold Grohl is a drummer according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "\"No, the mechanic from the body shop\""}, {"Line": 779, "Input": "Is Arnold Grohl from the body shop?", "actualOutput": "There is no memory item that directly answers the question about Arnold Grohl's affiliation with the body shop.", "expectedOutput": "\"No, the grunge band\""}, {"Line": 780, "Input": "What does Sally enjoy?", "actualOutput": "Sally enjoys running and swimming according to memory item i=3 and i=4 with a hypothetical certainty of 0.7368.", "expectedOutput": "Swimming and running marathons"}, {"Line": 781, "Input": "What does Matthew want to do?", "actualOutput": "Matthew wants to send something according to Memory. This is memory item i=4 with a certainty value of 0.736842105263158.", "expectedOutput": "To send a postcard and a package"}, {"Line": 782, "Input": "Who did the woman who was on the stage see?", "actualOutput": "The woman who was on stage saw Sally according to memory item i=2 with a certainty of 0.736842105263158.", "expectedOutput": "Sally"}, {"Line": 783, "Input": "Who saw Sally?", "actualOutput": "A woman saw Sally, with a certainty of 0.8214285, according to memory item i=4.", "expectedOutput": "The woman on the stage"}, {"Line": 784, "Input": "Who did the dancer who Andrew saw see?", "actualOutput": "The dancer hypothetically saw someone, but it is uncertain if it was the person Andrew saw. Memory item i=3 or i=4 could potentially be relevant.", "expectedOutput": "Steve"}, {"Line": 785, "Input": "Who saw Steve?", "actualOutput": "Dancer saw Steve according to Memory and memory item i=4 with a certainty of 0.8214285.", "expectedOutput": "The dancer"}, {"Line": 786, "Input": "Who is the physician?", "actualOutput": "The physician could be Merlin (i=3) with a certainty of 0.736842105263158.", "expectedOutput": "Merlin"}, {"Line": 787, "Input": "Is Merlin a mother?", "actualOutput": "Merlin is not a mother according to Memory. There is no memory item that states Merlin is a mother.", "expectedOutput": "\"No, father\""}, {"Line": 788, "Input": "Is Kramer a pilot?", "actualOutput": "Memory item i=0 states that \"winner isa pilot\" with a certainty of 0.7368, suggesting that Kramer may be a pilot hypothetically.", "expectedOutput": "\"No, journalist\""}, {"Line": 789, "Input": "Is Janet a pilot?", "actualOutput": "Janet is not mentioned as a pilot in Memory.", "expectedOutput": "\"No, journalist\""}, {"Line": 790, "Input": "Who are the peanuts?", "actualOutput": "Barry and Larry are hypothetically false peanuts, according to memory items i=0 and i=1 with certainty 0.3727.", "expectedOutput": "Barry and Larry"}, {"Line": 791, "Input": "Who was assaulted?", "actualOutput": "Memory does not contain information about an assault, so it is not possible to answer this question based on memory content.", "expectedOutput": "Barry and Larry"}, {"Line": 792, "Input": "Who is a captain?", "actualOutput": "Ronald and Harry are hypothetically false captains with a certainty of 0.263. Priscilla likes captain hypothetically true with a certainty of 0.736. Therefore, Priscilla is a captain according to Memory and memory item i=2.", "expectedOutput": "Ronald"}, {"Line": 793, "Input": "Who is a janitor?", "actualOutput": "According to Memory, John is a janitor with a hypothetical truth certainty of 0.736842105263158 (memory item i=0).", "expectedOutput": "John"}, {"Line": 794, "Input": "Who dated?", "actualOutput": "Mary was dated by both Janitor and John, according to Memory. Memory items i=0 and i=1.", "expectedOutput": "John and Mary"}, {"Line": 795, "Input": "Who are the singers?", "actualOutput": "Memory items i=2 and i=3 suggest that Rita and Phoebe are singers with a certainty of 0.736842105263158.", "expectedOutput": "Phoebe and Rita"}, {"Line": 796, "Input": "Who is with Ernie?", "actualOutput": "Memory item i=1 states \"man have ernie\" with a certainty of 0.736842105263158, suggesting that the man is with Ernie.", "expectedOutput": "Carlton"}, {"Line": 797, "Input": "What can Alex choose between?", "actualOutput": "Alex can choose between a cat according to memory item i=0 with certainty 0.830756.", "expectedOutput": "between the cat and the dog"}, {"Line": 798, "Input": "Where did the lady shop?", "actualOutput": "The lady shopped at a store, according to memory item i=1 with a certainty of 0.736842105263158.", "expectedOutput": "at the store"}, {"Line": 799, "Input": "What arrived at the vet?", "actualOutput": "A cat and an old woman arrived at the vet according to memory. i=1 or i=2 with certainty=0.736842105263158.", "expectedOutput": "The old woman"}, {"Line": 800, "Input": "Where did Phil eat?", "actualOutput": "Phil ate a banana according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "the park"}, {"Line": 801, "Input": "Who likes volleyball?", "actualOutput": "Memory item i=4 states that beach like volleyball with a certainty of 0.736842105263158.", "expectedOutput": "Alisha"}, {"Line": 802, "Input": "What did the memo say?", "actualOutput": "The memo was about vacation, with a certainty of 0.736842105263158 at memory item i=0.", "expectedOutput": "Valentine's Day will be added"}, {"Line": 803, "Input": "what said Valentine's Day will be added.?", "actualOutput": "There is no memory item that mentions Valentine's Day, so the probability is 0.", "expectedOutput": "The memo about vacation"}, {"Line": 804, "Input": "What will the train do?", "actualOutput": "The train will leave without Ann (i=0) with a certainty of 0.736842105263158.", "expectedOutput": "Will leave without Ann"}, {"Line": 805, "Input": "Is the Rolleiflex Jack's main camera?", "actualOutput": "There is no memory item that directly answers this question, so certainty cannot be determined.", "expectedOutput": "\"No, Doreen's main camera\""}, {"Line": 806, "Input": "What is the Rolleiflex?", "actualOutput": "The rolleiflex is owned by Doreen, with a hypothetical truth certainty of 0.7368, found in memory item i=0.", "expectedOutput": "Doreen's main camera"}, {"Line": 807, "Input": "Remind me what Anita's favorite food is.?", "actualOutput": "Anita's favorite food is hypothetically true with a certainty of 0.6411, found in memory item i=0.", "expectedOutput": "Soup dumpling"}, {"Line": 808, "Input": "Emily is the pilot Kristopher is talking about.", "actualOutput": "RelationClaim(\"emily\",\"IsA\",\"pilot\")\nRelationClaim(\"kristopher\",\"IsTalkingAbout\",\"pilot\")\nRelationClaim(\"kristopher\",\"IsTalkingAbout\",\"emily\")", "expectedOutput": ""}, {"Line": 809, "Input": "Is Emily the winner?", "actualOutput": "Emily is a hypothetically true winner with a certainty of 0.6806719999999999, according to memory item i=16.", "expectedOutput": "\"No, the pilot\""}, {"Line": 810, "Input": "\"Is the pilot Kristopher is talking about, Jack?\"?", "actualOutput": "No, the pilot Kristopher is talking about is hypothetically Emily, with a certainty of 0.5 at i=2, i=3, and i=22.", "expectedOutput": "\"No, Emily\""}, {"Line": 811, "Input": "Is the winner Emily?", "actualOutput": "Memory item i=16 suggests that Emily has a probability of 0.68 of being the winner.", "expectedOutput": "\"No, Jack\""}, {"Line": 812, "Input": "Is the green truck the truck in the gararge?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "\"No, the green truck on the street\""}, {"Line": 813, "Input": "Is the truck on the street the blue truck?", "actualOutput": "There is no information in Memory that the truck on the street is blue.", "expectedOutput": "\"no, the green truck\""}, {"Line": 814, "Input": "Is the blue truck the truck on the street?", "actualOutput": "Memory does not provide enough information to determine if the blue truck is the truck on the street.", "expectedOutput": "\"No, the blue truck inside the garage\""}, {"Line": 815, "Input": "Is the truck in the garage the green truck?", "actualOutput": "Memory does not provide information on whether the truck is in the garage or if it is green.", "expectedOutput": "\"No, the blue truck inside the garage\""}, {"Line": 816, "Input": "Is the blue truck on the street?", "actualOutput": "Memory item i=3 states that the truck is hypothetically on the street with a certainty of 0.736842105263158.", "expectedOutput": "\"no, inside the garage\""}, {"Line": 817, "Input": "Is the green truck in the garage?", "actualOutput": "Memory does not provide enough information to determine if the green truck is in the garage.", "expectedOutput": "\"no, on the street\""}, {"Line": 818, "Input": "Whose car is fast?", "actualOutput": "Devin's car is hypothetically fast (item i=1) with a certainty of 0.736842105263158.", "expectedOutput": "\"Carol's, Leland's, and Devin's\""}, {"Line": 819, "Input": "Which car is extremely fast?", "actualOutput": "The car with a top speed of 200 mph is extremely fast according to Memory. Memory item i=22.", "expectedOutput": "Devin's 200 mph car"}, {"Line": 820, "Input": "Which car is slightly fast?", "actualOutput": "The car with a top speed of 185 mph is slightly faster, with a certainty value of 0.8214285 (memory item i=3).", "expectedOutput": "Ken's 175 mph car"}, {"Line": 821, "Input": "Whose car is average speed?", "actualOutput": "There is no memory item that directly states the average speed of a car or whose car it is.", "expectedOutput": "Owne's and Ken's"}, {"Line": 822, "Input": "Whose car is slow?", "actualOutput": "There is no memory item indicating that a car is slow.", "expectedOutput": "Kristina's and Carla's"}, {"Line": 823, "Input": "Which car is the fastest?", "actualOutput": "The car with a top speed of 200 mph is the fastest according to Memory. Memory item i=22.", "expectedOutput": "Devin's 200 mph car"}, {"Line": 824, "Input": "Which car is the slowest?", "actualOutput": "The memory does not provide enough information to determine which car is the slowest.", "expectedOutput": "Kristina's 130 mph car"}, {"Line": 825, "Input": "Who is accepting new clients?", "actualOutput": "The doctor is accepting new clients according to Memory, and memory item i=4 has the highest certainty value of 0.736842105263158.", "expectedOutput": "Paul"}, {"Line": 826, "Input": "Who are Alice's doctors?", "actualOutput": "There is no information in Memory about Alice's doctors.", "expectedOutput": "Paul and Kathy"}, {"Line": 827, "Input": "Who is Alice's primary doctor?", "actualOutput": "There is no information in Memory about Alice's primary doctor.", "expectedOutput": "Paul"}, {"Line": 828, "Input": "Can you remind me what the name of Sofia's daughter is?", "actualOutput": "There is no memory content that mentions Sofia's daughter, so I cannot provide a probabilistic answer.", "expectedOutput": "Courtney"}, {"Line": 829, "Input": "What is Sofia's daughter's favorite snack?", "actualOutput": "There is no memory content that directly answers this question.", "expectedOutput": "Mango"}, {"Line": 830, "Input": "Why did Sofia throw the mangos away?", "actualOutput": "There is no memory item that provides an answer to this question.", "expectedOutput": "Because the mango was rotten"}, {"Line": 831, "Input": "What snack did Sofia get Courtney?", "actualOutput": "Sofia did not get a specific snack for Courtney according to Memory. No memory item can answer this question.", "expectedOutput": "Some chips"}, {"Line": 832, "Input": "What does Westley understand?", "actualOutput": "Cannot answer as there is no mention of Westley or his understanding in the given memory contents.", "expectedOutput": "That success requires hard work and passionate determination"}, {"Line": 833, "Input": "What did Westley receive from his parents?", "actualOutput": "There is no information in the given memory about what Westley received from his parents.", "expectedOutput": "Hard work and passionate determination"}, {"Line": 834, "Input": "What do the boys attempt?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "The challenging race"}, {"Line": 835, "Input": "What do the boys try?", "actualOutput": "Memory item i=0 states that \"boy go it\" with a certainty of 0.736842105263158, implying that the boy tried something.", "expectedOutput": "The challenging race"}, {"Line": 836, "Input": "Where has Elijah traveled to?", "actualOutput": "Elijah has traveled to Russia according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "To Russia and Brazil"}, {"Line": 837, "Input": "When did Elijah visit Brazil?", "actualOutput": "Elijah visited Brazil according to memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "In 2017"}, {"Line": 838, "Input": "What school did Jenny attend?", "actualOutput": "There is no information in Memory about Jenny's attendance at a school.", "expectedOutput": "Reed College"}, {"Line": 839, "Input": "Did Jenny attend UCLA?", "actualOutput": "There is no memory item in the given Memory that mentions Jenny attending UCLA.", "expectedOutput": "\"No, Reed College\""}, {"Line": 840, "Input": "Is Alexa more rigid than Aigo?", "actualOutput": "Memory item i=3 states that \"alexa is more rigid than aigo\" with a certainty value of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 841, "Input": "Is Aigo more rigid than Alexa?", "actualOutput": "Memory item 15 states that \"alexa is more rigid than aigo\" with a certainty value of 0.8214285, indicating a high probability.", "expectedOutput": "\"No, less rigid\""}, {"Line": 842, "Input": "Is Aigo less rigid than Alexa?", "actualOutput": "Memory item 15 states that \"alexa is more rigid than aigo\" with a certainty of 0.8214285. Therefore, it is probable that aigo is less rigid than alexa.", "expectedOutput": "Yes"}, {"Line": 843, "Input": "Is Alexa less rigid than Aigo?", "actualOutput": "Memory item 15 states that \"alexa is more rigid than aigo\" with a certainty of 0.8214285. Therefore, it is unlikely that alexa is less rigid than aigo.", "expectedOutput": "\"No, more rigid\""}, {"Line": 844, "Input": "The news anchor wears blue suits.", "actualOutput": "RelationClaim(news_anchor, \"Wears\", blue_suits)", "expectedOutput": ""}, {"Line": 845, "Input": "He is David Potter.", "actualOutput": "RelationClaim(\"he\",\"IsA\",\"david_potter\")", "expectedOutput": ""}, {"Line": 846, "Input": "What is the news anchor's name?", "actualOutput": "Janet is a news anchor according to Memory. Memory item i=3 has a certainty value of 0.736842105263158.", "expectedOutput": "David Potter"}, {"Line": 847, "Input": "Does he wear green suits?", "actualOutput": "There is no memory item that mentions him wearing green suits.", "expectedOutput": "\"No, blue suits\""}, {"Line": 848, "Input": "What is Aiden having on Sunday for dinner?", "actualOutput": "Aiden is hypothetically having dinner on Sunday, according to memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "Fish with potatoes"}, {"Line": 849, "Input": "What is Aiden having with Marcy for dinner?", "actualOutput": "Aiden is hypothetically having dinner with Marcy, with a certainty value of 0.736842105263158. This information is stored in memory item i=3.", "expectedOutput": "Chicken"}, {"Line": 850, "Input": "What did John eat?", "actualOutput": "John ate meatballs according to memory item i=3 with a hypothetical truth type and a certainty value of 0.641.", "expectedOutput": "Pasta with meatballs"}, {"Line": 851, "Input": "What did John eat with?", "actualOutput": "John hypothetically ate pasta with a certainty of 0.736842105263158, according to memory item i=4.", "expectedOutput": "Fork and spoon"}, {"Line": 852, "Input": "Who did John eat with?", "actualOutput": "John ate pasta (i=21) according to Memory. The memory item i has a certainty value of 0.8214285.", "expectedOutput": "Mary"}, {"Line": 853, "Input": "What are the parts of an email?", "actualOutput": "An email has parts: message, subject, recipient, and sender. Memory items i=0 to i=3.", "expectedOutput": "\"Email's part, a sender, a recipient, a subject, and a message\""}, {"Line": 854, "Input": "What are the parts of the email I received?", "actualOutput": "The email has a message and a sender, according to memory items 18 and 19 (certainty=0.821).", "expectedOutput": "\"Email's part, a sender, a recipient, a subject, and a message\""}, {"Line": 855, "Input": "Is the farm for vegetables big?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "\"No, small\""}, {"Line": 856, "Input": "Is Isabella's farm small?", "actualOutput": "Memory item i=2 states that Isabella has a farm, but does not mention its size. Certainty value is 0.736842105263158.", "expectedOutput": "\"No, big\""}, {"Line": 857, "Input": "Where is that farm?", "actualOutput": "The farm is in Texas according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 858, "Input": "Is the farm for vegetables important?", "actualOutput": "Memory does not contain information about whether the farm is for vegetables or not.", "expectedOutput": "yes"}, {"Line": 859, "Input": "Is the big farm important?", "actualOutput": "Memory item i=2 states that \"farm isa important\" with a hypothetical truth value of 0.736842105263158. It is uncertain if the farm is big.", "expectedOutput": "yes"}, {"Line": 860, "Input": "What in Texas is important and common?", "actualOutput": "Memory item i=3 states that \"important are common in texas\" with a certainty of 0.6167145.", "expectedOutput": "Farms"}, {"Line": 861, "Input": "Are farms common in Alaska?", "actualOutput": "Memory does not provide information on farms in Alaska. No memory item is relevant to this question.", "expectedOutput": "\"No, in Texas\""}, {"Line": 862, "Input": "What was fun?", "actualOutput": "Memory item i=1 states that \"fun isa movie\" with a certainty of 0.6411150125896854.", "expectedOutput": "The first movie"}, {"Line": 863, "Input": "Which movie was fun?", "actualOutput": "The movie was fun according to memory item i=3 with a hypothetical truth certainty of 0.641.", "expectedOutput": "The first movie"}, {"Line": 864, "Input": "Which paper got published?", "actualOutput": "Memory does not contain information about a published paper. No item corresponds to this question.", "expectedOutput": "the first paper"}, {"Line": 865, "Input": "What wrote 5 papers?", "actualOutput": "Memory item i=0 states that someone wrote 5 papers, with a hypothetical truth certainty of 0.7368.", "expectedOutput": "the association"}, {"Line": 866, "Input": "What did Billson order?", "actualOutput": "Billson ordered a drink according to memory. This is memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "A large drink"}, {"Line": 867, "Input": "Did Billson order a small drink?", "actualOutput": "There is no memory item that states Billson ordered a small drink.", "expectedOutput": "\"no, a large drink\""}, {"Line": 868, "Input": "Who ordered a large drink?", "actualOutput": "Xena ordered a large drink according to Memory. Memory item i=4 has a certainty value of 0.736842105263158.", "expectedOutput": "Billson"}, {"Line": 869, "Input": "Who did Vera fire?", "actualOutput": "Vera fired someone hypothetically false, with a certainty of 0.263. Memory item i=1.", "expectedOutput": "A few lawyers"}, {"Line": 870, "Input": "What did Bibi drop?", "actualOutput": "Bibi dropped a case according to Memory. This is memory item i=1 with a certainty value of 0.2631578947368421.", "expectedOutput": "A few cases"}, {"Line": 871, "Input": "What did Carl make?", "actualOutput": "Carl made two according to memory item i=4 with a certainty value of 0.736842105263158.", "expectedOutput": "Two arguments"}, {"Line": 872, "Input": "Who made arguments?", "actualOutput": "Cannot answer the question as it is incomplete.", "expectedOutput": "Carl Weathers and Larkin"}, {"Line": 873, "Input": "Who made two arguments?", "actualOutput": "Carl made two arguments according to Memory and memory item i=4. Certainty value: knowingly True (0.8214285).", "expectedOutput": "Carl Weathers"}, {"Line": 874, "Input": "Who is the whale owned by?", "actualOutput": "The whale is hypothetically owned by either Santa Clarita or a zoo, according to memory item i=3 and i=4 with a certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 875, "Input": "What does Santa Clarita have?", "actualOutput": "Memory does not contain any information about what Santa Clarita has.", "expectedOutput": "zoo"}, {"Line": 876, "Input": "Who fed Esma?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "Esma's mother"}, {"Line": 877, "Input": "Who did her mother feed?", "actualOutput": "Memory item i=0 states that \"I fed the dog.\" It is known with a certainty of 0.8214285 that her mother fed the dog.", "expectedOutput": "Esma"}, {"Line": 878, "Input": "Who did Jenna's father chat to?", "actualOutput": "Jenna's father chatted with someone according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "Jenna"}, {"Line": 879, "Input": "Who talked to Jenna?", "actualOutput": "According to memory item i=1, father talked to Jenna with a certainty of 0.8214285.", "expectedOutput": "Jenna's father"}, {"Line": 880, "Input": "Who talked to Jenna's father?", "actualOutput": "Memory item i=1 states that Jenna's father talked to someone. The certainty value is 0.8214285.", "expectedOutput": "I don't know"}, {"Line": 881, "Input": "Who did Sandra's mother talk to?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": ""}, {"Line": 882, "Input": "Who talked to Sandra's mother?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "Sandra's mother"}, {"Line": 883, "Input": "Who talked to Sandra?", "actualOutput": "Memory item i=3 reports that someone talked to Sandra at time=857 with a hypothetical truth certainty of 0.5000478522078483.", "expectedOutput": "I don't know"}, {"Line": 884, "Input": "Who has a dog?", "actualOutput": "Owen, Ella, Robin, Rodney, and George hypothetically have a dog with a certainty of 0.736842105263158 (i=0-4).", "expectedOutput": "\"Gio, George, Rodney, Robin, Ella, and Owen, Robert, and Sam\""}, {"Line": 885, "Input": "Who walked Sam's dog?", "actualOutput": "Memory item i=4 states that Sam walked a dog with a certainty value of 0.736842105263158.", "expectedOutput": "Sam"}, {"Line": 886, "Input": "Why did Samuel clean the medal?", "actualOutput": "Memory does not provide a reason for why Samuel cleaned the medal. Item i=1 has certainty=0.736842105263158.", "expectedOutput": "So that it would shine"}, {"Line": 887, "Input": "What shines?", "actualOutput": "Memory item i=5 shines as the most certain with a probability of 0.829566, stating that soup dumplings are food.", "expectedOutput": "The medal"}, {"Line": 888, "Input": "What did Samuel clean?", "actualOutput": "Samuel cleaned a medal. This information is stored in memory item i=1 with a certainty value of 0.8214285.", "expectedOutput": "The medal"}, {"Line": 889, "Input": "Who did Esma shoot?", "actualOutput": "There is no memory item that provides information on who Esma shot.", "expectedOutput": "Igor"}, {"Line": 890, "Input": "Who shot Igor?", "actualOutput": "Memory does not provide information on who shot Igor.", "expectedOutput": "Esma"}, {"Line": 891, "Input": "Who felt sick?", "actualOutput": "There is no memory item that directly states who felt sick, so there is no answer to this question based on memory content only.", "expectedOutput": "Lydia"}, {"Line": 892, "Input": "Who sent her to the hospital?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "Lydia"}, {"Line": 893, "Input": "Who was sent to the hospital?", "actualOutput": "There is no memory item that directly states who was sent to the hospital.", "expectedOutput": "Lydia"}, {"Line": 894, "Input": "What is bright?", "actualOutput": "Bright is a hypothetical property of something in memory item i=2 with a certainty of 0.736842105263158.", "expectedOutput": "The bright and pretty jewels"}, {"Line": 895, "Input": "Are the heirs pretty?", "actualOutput": "Memory item i=1 states that \"jewel is pretty\" with a certainty of 0.736842105263158. No information is given about the heirs' appearance.", "expectedOutput": "I don't know"}, {"Line": 896, "Input": "Are the jewels bright?", "actualOutput": "Memory does not provide a direct answer to whether jewels are bright. No memory item mentions this property.", "expectedOutput": "Yes"}, {"Line": 897, "Input": "What is late?", "actualOutput": "There is no memory item that directly states what is late.", "expectedOutput": "the reply"}, {"Line": 898, "Input": "What is with Jane?", "actualOutput": "Memory item i=1 states that Jane has a book with a certainty of 0.736842105263158.", "expectedOutput": "The celebration"}, {"Line": 899, "Input": "Who has a clock?", "actualOutput": "There is no memory item that mentions who has a clock, so there is no answer available within the given memory contents.", "expectedOutput": "Molly"}, {"Line": 900, "Input": "What drove Molly crazy?", "actualOutput": "There is no memory item that directly answers the question of what drove Molly crazy.", "expectedOutput": "Molly's clock"}, {"Line": 901, "Input": "Who got a compliment?", "actualOutput": "There is no memory item that directly states who got a compliment, so the answer cannot be determined with certainty.", "expectedOutput": "Marty"}, {"Line": 902, "Input": "What made Marty feel good?", "actualOutput": "Memory item i=4 states \"him feel good\" with a hypothetical truth type and a certainty of 0.736842105263158. It is uncertain who \"him\" refers to.", "expectedOutput": "A compliment"}, {"Line": 903, "Input": "Where did Mimi meet Charles?", "actualOutput": "Mimi met Charles at the park according to memory item i=0 with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "The park"}, {"Line": 904, "Input": "Where did Charles eat?", "actualOutput": "Charles ate at the park according to Memory. Memory item i=4 has a certainty value of 0.8214285.", "expectedOutput": "At the park"}, {"Line": 905, "Input": "Who did Mimi meet?", "actualOutput": "Mimi met someone hypothetically true, but it is uncertain who. This information is in memory item i=1 with a certainty of 0.736842105263158.", "expectedOutput": "Charles"}, {"Line": 906, "Input": "What has many pages?", "actualOutput": "\"They have page\" is the memory item with a probability of 0.736842105263158 of referring to something with many pages. (i=4)", "expectedOutput": "Student's books"}, {"Line": 907, "Input": "Who has books?", "actualOutput": "According to Memory, both Kim and Jane have books (i=1 and i=24) with a certainty value of 0.8214285.", "expectedOutput": "Mike and Jane"}, {"Line": 908, "Input": "What do the books have?", "actualOutput": "The book has the property of being big according to Memory item i=3 with a certainty of 0.8214285.", "expectedOutput": "Student's book's pages"}, {"Line": 909, "Input": "What likes pickles?", "actualOutput": "Memory item i=4 states \"cat like pickle\" with a hypothetical truth value of 0.736842105263158.", "expectedOutput": "Kristopher's brown cat"}, {"Line": 910, "Input": "Does Kristopher have a cat?", "actualOutput": "Memory item i=4 states that kristopher has a cat with a certainty value of 0.736842105263158.", "expectedOutput": "Yes"}, {"Line": 911, "Input": "Which cat likes pickles?", "actualOutput": "Cat likes pickles according to memory item i=4 with a certainty value of 0.8214285.", "expectedOutput": "Kristopher's brown cat"}, {"Line": 912, "Input": "What was good with chocolate?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "A cake with chocolate"}, {"Line": 913, "Input": "Was it good?", "actualOutput": "Memory item i=2 states \"him feel good\" with a certainty of 0.8214285, indicating a high probability that it was good.", "expectedOutput": "yes"}, {"Line": 914, "Input": "What kind of cake did Glen eat?", "actualOutput": "Memory does not provide information on the type of cake Glen ate.", "expectedOutput": "A good cake with chocolate"}, {"Line": 915, "Input": "What kind of sandwich did Glen eat?", "actualOutput": "Memory does not provide information on the type of sandwich Glen ate.", "expectedOutput": "A bad sandwich with cheese"}, {"Line": 916, "Input": "What was bad with cheese?", "actualOutput": "Memory item i=1 states that the sandwich hasingredient cheese with a certainty of 0.736842105263158.", "expectedOutput": "A sandwich with cheese"}, {"Line": 917, "Input": "Was it bad?", "actualOutput": "There is no memory item that directly answers the question, so it cannot be answered with certainty.", "expectedOutput": "yes"}, {"Line": 918, "Input": "Who bought flowers?", "actualOutput": "Memory does not provide a clear answer on who bought flowers. No memory item mentions a person buying flowers.", "expectedOutput": "The girls"}, {"Line": 919, "Input": "What did the girls buy?", "actualOutput": "Memory does not provide information on what the girls bought.", "expectedOutput": "The flowers"}, {"Line": 920, "Input": "What cars will Jo Jo pay for?", "actualOutput": "Memory does not provide information on what cars Jo will pay for. No relevant memory item.", "expectedOutput": "Mid-size rental cars"}, {"Line": 921, "Input": "What air fare will Jo Jo pay for?", "actualOutput": "Memory does not provide information on what air fare Jo Jo will pay for.", "expectedOutput": "Coach airfare"}, {"Line": 922, "Input": "Will Jo Jo pay for first class air fare?", "actualOutput": "Memory does not provide a clear answer to whether Jo will pay for first class air fare.", "expectedOutput": "\"No, coach airfare\""}, {"Line": 923, "Input": "Will Jo Jo pay for business class air fare?", "actualOutput": "Memory does not provide a clear answer to whether Jo will pay for business class air fare.", "expectedOutput": "\"No, coach airfare\""}, {"Line": 924, "Input": "Will Jo Jo pay for compact rental cars?", "actualOutput": "Memory does not provide a clear answer to whether Jo will pay for compact rental cars.", "expectedOutput": "\"No, mid-size rental cars\""}, {"Line": 925, "Input": "Will Jo Jo pay for large rental cars?", "actualOutput": "Memory does not provide information on whether Jo will pay for large rental cars.", "expectedOutput": "\"No, mid-size rental cars\""}, {"Line": 926, "Input": "What does Jo Jo require?", "actualOutput": "Jo requires outside counsel according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "\"That outside counsel utilize the task, activity, and expense codes\""}, {"Line": 927, "Input": "What is outside counsel required to use?", "actualOutput": "Memory does not provide information on what outside counsel is required to use.", "expectedOutput": "\"The task, activity, and expense codes\""}, {"Line": 928, "Input": "What does outside counsel need to use?", "actualOutput": "Cannot answer the question as it is not clear what \"outside counsel\" needs to use and which memory item i is relevant to the question.", "expectedOutput": "\"The task, activity, and expense codes\""}, {"Line": 929, "Input": "Does outside counsel need to use task codes?", "actualOutput": "Cannot be determined from the given memory contents.", "expectedOutput": "yes"}, {"Line": 930, "Input": "Will Jo Jo pay for two attorneys?", "actualOutput": "Memory item i=4 states that \"jo pay for attorney\" with a certainty value of 0.2631578947368421. It is uncertain if Jo will pay for two attorneys.", "expectedOutput": "\"No, Jo Jo won't pay for more than one attorney to attend a deposition\""}, {"Line": 931, "Input": "Will Jo Jo pay for more than one attorney?", "actualOutput": "Memory item i=4 states that jo will hypothetically not pay for more than one attorney with a certainty of 0.263.", "expectedOutput": "Not more than one attorney to attend a deposition"}, {"Line": 932, "Input": "Who must approve timekeepers?", "actualOutput": "Lead must approve timekeepers according to Memory. This information is in memory item i=0 with a certainty value of 0.263.", "expectedOutput": "The lead inside counsel"}, {"Line": 933, "Input": "What will Jo Jo pay for?", "actualOutput": "Jo may pay for a coach according to memory item i=0 with a certainty of 0.3727.", "expectedOutput": "For coach airfare and mid-size rental cars unless authorized in advance by the lead inside counsel expressly"}, {"Line": 934, "Input": "What is hereby revoked?", "actualOutput": "There is no information in Memory about anything being revoked.", "expectedOutput": "All prior blanket waivers"}, {"Line": 935, "Input": "What will Jo Jo not provide?", "actualOutput": "Jo will not provide outside counsel according to memory item i=4 with a certainty of 0.8214285.", "expectedOutput": "Blanket waivers"}, {"Line": 936, "Input": "What will each party bear?", "actualOutput": "Party bear will own something according to memory item i=0 with a certainty of 0.641.", "expectedOutput": "Own fees and expenses"}, {"Line": 937, "Input": "Who has fees?", "actualOutput": "There is no memory item that directly states who has fees, so it cannot be answered with certainty.", "expectedOutput": "Each party"}, {"Line": 938, "Input": "What will each party share?", "actualOutput": "Party bear will share about owning something (i=0) with a hypothetical truth certainty of 0.64.", "expectedOutput": "The fees of the arbitrator and expenses of the arbitrator"}, {"Line": 939, "Input": "Why is the door locked?", "actualOutput": "The door is hypothetically locked by Mort according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "Because Mort locked the door"}, {"Line": 940, "Input": "Who locked the door?", "actualOutput": "Memory item i=0 states that Mort locked the door with a certainty value of 0.8214285.", "expectedOutput": "Mort"}, {"Line": 941, "Input": "Is the door locked?", "actualOutput": "The door is locked according to memory item i=0 with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 942, "Input": "Are all pets dirty?", "actualOutput": "Memory item i=0 suggests that there is a hypothetical possibility that a pet has the property of being dirty with a certainty of 0.627.", "expectedOutput": "\"No, 1\""}, {"Line": 943, "Input": "Is Tigger dirty?", "actualOutput": "According to memory item i=0, there is a 73.68% chance that Tigger has the property of being dirty.", "expectedOutput": "Yes"}, {"Line": 944, "Input": "What does Tigger need?", "actualOutput": "Tigger needs to be washed according to Memory. Memory item i=4 has a certainty value of 0.736842105263158.", "expectedOutput": "To get washed because Tigger is dirty"}, {"Line": 945, "Input": "Who has a car?", "actualOutput": "Memory item i=4 states \"man have car\" with a certainty of 0.736842105263158. Therefore, it is probabilistically likely that the man has a car.", "expectedOutput": "\"Kristina, Devin, Carla, Ken, Leland, Carol, Allison, Delia, Henry, and Milly\""}, {"Line": 946, "Input": "Does she have a car?", "actualOutput": "Yes, according to Memory, the man has a car with a certainty value of 0.8214285 (Memory item i=4).", "expectedOutput": "yes"}, {"Line": 947, "Input": "What does Milly have?", "actualOutput": "There is no information in Memory about what Milly has.", "expectedOutput": "Green car"}, {"Line": 948, "Input": "Does Deanna have it?", "actualOutput": "There is no information in Memory about whether Deanna has anything.", "expectedOutput": "I don't know"}, {"Line": 949, "Input": "What does Deanna have?", "actualOutput": "There is no information in Memory about what Deanna has.", "expectedOutput": "Purple lamp"}, {"Line": 950, "Input": "What color is it?", "actualOutput": "Memory item i=3 states that \"truck color green\" with a certainty of 0.736842105263158.", "expectedOutput": "purple"}, {"Line": 951, "Input": "Who has a lamp?", "actualOutput": "There is no memory item that mentions anyone having a lamp, so it cannot be determined with certainty who has a lamp.", "expectedOutput": "Deanna"}, {"Line": 952, "Input": "Does she have a lamp?", "actualOutput": "There is no memory item that directly states whether she has a lamp or not.", "expectedOutput": "yes"}, {"Line": 953, "Input": "Does she have a car?", "actualOutput": "Yes, according to memory item i=4, the man has a car with a certainty value of 0.8214285.", "expectedOutput": "I don't know"}, {"Line": 954, "Input": "What is Yahoo's ticker?", "actualOutput": "There is no memory item that provides information about Yahoo's ticker.", "expectedOutput": "YHOO"}, {"Line": 955, "Input": "Who decided to push back the deadline?", "actualOutput": "yhoo decided to push back the deadline according to Memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "Yahoo and Microsoft"}, {"Line": 956, "Input": "What did Yahoo and Microsoft decide?", "actualOutput": "There is no information in the memory about what Yahoo and Microsoft decided.", "expectedOutput": "To push the deadline from 9/21/2016 to today to renegotiate Microsoft's 10-year search deal"}, {"Line": 957, "Input": "Did the tech giants join forces in 2011?", "actualOutput": "There is no memory item indicating that tech giants joined forces in 2011.", "expectedOutput": "no in 2010"}, {"Line": 958, "Input": "When did the tech giants join forces?", "actualOutput": "There is no memory item that directly answers the question of when the tech giants joined forces.", "expectedOutput": "In 2010"}, {"Line": 959, "Input": "who joined forces?", "actualOutput": "There is no memory item that directly answers the question of who joined forces.", "expectedOutput": "The tech giants"}, {"Line": 960, "Input": "When did they join forces?", "actualOutput": "There is no memory item that directly answers the question of when they joined forces.", "expectedOutput": "In 2010"}, {"Line": 961, "Input": "Who is Yahoo's CEO?", "actualOutput": "According to Memory, it is hypothetically true that Britta is the CEO. Memory item i=2. Certainty=0.736842105263158.", "expectedOutput": "Marissa Mayer"}, {"Line": 962, "Input": "Who has 47 plants in 13 countries?", "actualOutput": "There is no memory item that mentions someone having 47 plants in 13 countries.", "expectedOutput": "Verallia"}, {"Line": 963, "Input": "\"Who employs nearly 10,000 people?\"?", "actualOutput": "Memory does not contain information to answer this question.", "expectedOutput": "Verallia"}, {"Line": 964, "Input": "What did an official say?", "actualOutput": "There is no memory item that mentions an official saying something.", "expectedOutput": "\"An ancient Egyptian amulet that girl discovered dates at more than r_quant 3,200 years to the days of the the Pharaohs back\""}, {"Line": 965, "Input": "Whose family took part in the Temple Mount Sifting Project?", "actualOutput": "Memory does not contain information about any family taking part in the temple mount sifting project.", "expectedOutput": "Neshama Spielman's"}, {"Line": 966, "Input": "Who took part in the Temple Mount Sifting Project?", "actualOutput": "Memory does not contain information about who took part in the temple mount sifting project.", "expectedOutput": "Neshama Spielman and her family"}, {"Line": 967, "Input": "What is an initiative?", "actualOutput": "There is no memory item that directly defines an initiative.", "expectedOutput": "An initiative to sort through earth discarded from the area of the biblical temples in Jerusalem"}, {"Line": 968, "Input": "Where did Neshama find a pendant-shaped amulet?", "actualOutput": "There is no memory item that mentions where Neshama found a pendant-shaped amulet.", "expectedOutput": "The area of the biblical temples in Jerusalem"}, {"Line": 969, "Input": "What did Neshama find?", "actualOutput": "Neshama participated in the Temple Mount sifting project with a certainty of 0.736. This is memory item i=2.", "expectedOutput": "A pendant-shaped amulet"}, {"Line": 970, "Input": "What does the amulet bear?", "actualOutput": "The amulet has the property \"ancient\" according to memory item i=1 with a certainty of 0.641.", "expectedOutput": "Name"}, {"Line": 971, "Input": "Is the Temple Mount Sifting Project an initiative?", "actualOutput": "There is no memory item related to the Temple Mount Sifting Project in the given memory.", "expectedOutput": "Yes"}, {"Line": 972, "Input": "What was started by scientists?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "The deepest hole"}, {"Line": 973, "Input": "Who found some pretty cool things?", "actualOutput": "Memory item i=0 states that \"they find cool_thing\" with a certainty of 0.7368. It is uncertain who found it.", "expectedOutput": "The Russian scientists"}, {"Line": 974, "Input": "What did the scientists find?", "actualOutput": "The scientists found a 2 billion year old fossil (i=0) with a certainty of 0.736842105263158.", "expectedOutput": "2-billion-year-old fossils"}, {"Line": 975, "Input": "Who found 2-billion-year-old fossils?", "actualOutput": "Memory item i=0 states that they found 2-billion-year-old fossils with a certainty of 0.8214285.", "expectedOutput": "The Russian scientists"}, {"Line": 976, "Input": "What was deeper than scientists thought?", "actualOutput": "Memory item i=3: \"farm are common in Texas\" was deeper than scientists thought. (certainty=0.821)", "expectedOutput": "Free water"}, {"Line": 977, "Input": "Who is Jane's band's director?", "actualOutput": "There is no memory item that directly answers the question about Jane's band director.", "expectedOutput": "Omar"}, {"Line": 978, "Input": "Who goes shopping?", "actualOutput": "Jericho goes shopping according to Memory and memory item i=0 with a certainty value of 0.2631578947368421.", "expectedOutput": "Omar"}, {"Line": 979, "Input": "Who is going shopping with Sam?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "Omar"}, {"Line": 980, "Input": "Who is going to the competition?", "actualOutput": "Jane is going to the competition according to memory item i=0 with a certainty of 0.40028083703526396.", "expectedOutput": "No bands"}, {"Line": 981, "Input": "HarperCollins:: HarperCollins is a company.", "actualOutput": "RelationClaim(\"harpercollins\",\"IsA\",\"company\")", "expectedOutput": ""}, {"Line": 982, "Input": "We are glad Jean has picked up one of our plays.", "actualOutput": "RelationClaim(\"jean\",\"picked up\",\"play\")\nRelationClaim(\"play\",\"IsA\",\"our play\")\nPropertyClaim(\"we\",\"HasProperty\",\"glad\")", "expectedOutput": ""}, {"Line": 983, "Input": "Our plays have strong characters and good stories.", "actualOutput": "PropertyClaim(\"our_plays\",\"HasProperty\",\"strong\")\nPropertyClaim(\"our_plays\",\"HasProperty\",\"good_stories\")\nRelationClaim(\"our_plays\",\"Have\",\"characters\")", "expectedOutput": ""}, {"Line": 984, "Input": "DefaultUser:: What plays did Jean pick up?", "actualOutput": "Jean picked up \"play\" and \"our_play\" according to Memory. Memory items i=1 and i=12. Certainty value: 0.5.", "expectedOutput": "HarperCollins' plays"}, {"Line": 985, "Input": "DefaultUser:: Whose plays have strong characters?", "actualOutput": "Our_play has strong characters according to Memory and memory item i=24 with a certainty of 0.5.", "expectedOutput": "HarperCollins'"}, {"Line": 986, "Input": "What do the plays have?", "actualOutput": "The plays have strong and good stories, according to memory items i=18-23, with a hypothetical certainty of 0.5.", "expectedOutput": "Strong characters and good stories"}, {"Line": 987, "Input": "HarperCollins:: Hi Jean.", "actualOutput": "RelationClaim(harpercollins, \"Said\", hi)\nRelationClaim(hi, \"DirectedAt\", jean)", "expectedOutput": ""}, {"Line": 988, "Input": "We hope you liked our plays.", "actualOutput": "PropertyClaim(\"we\",\"HasProperty\",\"hope\")\nPropertyClaim(\"you\",\"Liked\",\"our_plays\")", "expectedOutput": ""}, {"Line": 989, "Input": "DefaultUser:: What does HarperCollins hope?", "actualOutput": "There is no memory item that directly states what HarperCollins hopes, so there is no answer to the question.", "expectedOutput": "Jean liked HarperCollins' plays"}, {"Line": 990, "Input": "Who emailed Otto Vantassel about his project?", "actualOutput": "Memory item i=4 states that an email was sent to Otto, but it does not specify who sent it. Certainty value is 0.736842105263158.", "expectedOutput": "Anastacia Shuttleworth"}, {"Line": 991, "Input": "What did Anastacia Shuttleworth email?", "actualOutput": "Memory does not provide a certain answer to what Anastacia Shuttleworth emailed. The closest memory item is i=3, which states that the statement \"email sentto anastacia\" is hypothetically false with a certainty of 0.2631578947368421.", "expectedOutput": "An email about Otto Vantassel's project"}, {"Line": 992, "Input": "What did Grayce Molina email Ben Fernandez?", "actualOutput": "Memory does not contain information about an email from Grayce Molina to Ben Fernandez.", "expectedOutput": "I don't know"}, {"Line": 993, "Input": "Who did Grayce Molina email packages?", "actualOutput": "Memory item i=23 states that the email was not sent to Anastacia, so it is unlikely that Grayce Molina emailed packages to her.", "expectedOutput": "I don't know"}, {"Line": 994, "Input": "Who does Ellis Hamel send texts to?", "actualOutput": "Ellis Hamel sends texts, memory item i=4, but it is only hypothetically true with a certainty of 0.736842105263158. No recipient is mentioned.", "expectedOutput": "Joan Blanco"}, {"Line": 995, "Input": "What does Ellis Hamel text?", "actualOutput": "Ellis Hamel sent a text, with a certainty of 0.8214285, according to memory item i=17. The content of the text is not specified in the memory.", "expectedOutput": "texts"}, {"Line": 996, "Input": "What does Maya Molina text?", "actualOutput": "There is no memory item that directly answers the question of what Maya Molina texted.", "expectedOutput": "I don't know"}, {"Line": 997, "Input": "What does Maya Molina email?", "actualOutput": "Cannot answer as there is no memory item that mentions Maya Molina emailing.", "expectedOutput": "I don't know"}, {"Line": 998, "Input": "Does Loise Monge bike decently?", "actualOutput": "Memory does not provide information on whether Loise Monge rides the bike decently. No relevant memory item.", "expectedOutput": "Yes"}, {"Line": 999, "Input": "What does Loise Monge ride decently?", "actualOutput": "Loise Monge hypothetically rides a bike decently according to memory item i=1 with a certainty of 0.736842105263158.", "expectedOutput": "Bikes"}, {"Line": 1000, "Input": "Who does Arnold Arno hug?", "actualOutput": "Arnold Arno hugs someone according to Memory, but it is not specified who or which memory item i.", "expectedOutput": "Matilda Aigner"}, {"Line": 1001, "Input": "Who does Arnold Arno give a hug to?", "actualOutput": "Arnold gives a hug to someone hypothetically true with a certainty of 0.736842105263158, but the memory does not specify who (memory item i=4).", "expectedOutput": "Matilda Aigner"}, {"Line": 1002, "Input": "When does Amy Hamel nap?", "actualOutput": "According to memory item i=1, Amy Hamel hypothetically takes a nap, with a certainty of 0.736842105263158.", "expectedOutput": "From 12:01 PM to 5 PM"}, {"Line": 1003, "Input": "Who showers in the evenings?", "actualOutput": "Jackie takes showers in the evenings with a certainty value of 0.736842105263158 (memory item i=2).", "expectedOutput": "Jackie Peden"}, {"Line": 1004, "Input": "Does Jackie Peden take baths?", "actualOutput": "There is no memory item that directly answers whether Jackie Peden takes baths, so it cannot be determined with certainty.", "expectedOutput": "\"No, showers\""}, {"Line": 1005, "Input": "Did Kyle Hohl's goldfish die?", "actualOutput": "There is no memory item that directly addresses whether Kyle Hohl's goldfish died, so the answer is unknown.", "expectedOutput": "yes"}, {"Line": 1006, "Input": "Did Lydia Tye die?", "actualOutput": "There is no memory item that mentions Lydia's death, so it cannot be determined with certainty.", "expectedOutput": "I don't know"}, {"Line": 1007, "Input": "Where did Lydia Tye kick the bucket?", "actualOutput": "Memory does not provide information on where Lydia Tye kicked the bucket.", "expectedOutput": "Down the street"}, {"Line": 1008, "Input": "Who departed the basketball game at 3 pm?", "actualOutput": "Jessie departed the basketball game at 3 pm according to Memory. Memory item i=2 with certainty=0.641.", "expectedOutput": "Jessie Dreiling"}, {"Line": 1009, "Input": "Who forgot the game at home?", "actualOutput": "Jessie forgot the game at home according to Memory. Memory item i=16 has a certainty value of 0.7201085.", "expectedOutput": "Julie Lybarger"}, {"Line": 1010, "Input": "Who abandoned Melly Burleson?", "actualOutput": "There is no information in the given memory about who abandoned Melly Burleson.", "expectedOutput": "Stevie Burleson"}, {"Line": 1011, "Input": "Who entrusted Lola Vizcarra an entire fortune?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "Darrell Tupper"}, {"Line": 1012, "Input": "What did Acie Newbury inquire about?", "actualOutput": "Acie Newbury inquired about dinner according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "if dinner was ready"}, {"Line": 1013, "Input": "What did Abner Abbas inquire about?", "actualOutput": "Abner Abbas inquired about revenue according to memory item i=0 with a certainty of 0.8214285.", "expectedOutput": "I don't know"}, {"Line": 1014, "Input": "Did Abner Abbas request a drink?", "actualOutput": "There is no memory item indicating that Abner Abbas requested a drink.", "expectedOutput": "Yes"}, {"Line": 1015, "Input": "What did Abner Abbas request?", "actualOutput": "Abner Abbas' request is not mentioned in Memory.", "expectedOutput": "a drink"}, {"Line": 1016, "Input": "Who did Santo Sober invite for dinner?", "actualOutput": "According to Memory, Santo asked Elaina Booe to dinner (i=1) with a certainty of 0.736842105263158.", "expectedOutput": "Elaina Booe"}, {"Line": 1017, "Input": "What did Brent Huson get Brenda Bale?", "actualOutput": "There is no memory item that mentions Brent Huson getting Brenda Bale anything.", "expectedOutput": "some vases"}, {"Line": 1018, "Input": "Is Bradley Rollings purchasing time?", "actualOutput": "Memory item i=0 suggests that Bradley Rolling is hypothetically not buying time with a certainty of 0.263.", "expectedOutput": "I don't know"}, {"Line": 1019, "Input": "Who quit smoking?", "actualOutput": "There is no memory item that directly states who quit smoking.", "expectedOutput": "Sebastian Helfer"}, {"Line": 1020, "Input": "Who paused to smoke?", "actualOutput": "There is no memory item that directly states who paused to smoke, so there is no answer available within the given memory content.", "expectedOutput": "Sean Zentz"}, {"Line": 1021, "Input": "Who made the sketch of a bench by the fireplace?", "actualOutput": "Dominick made the sketch of a bench by the fireplace according to Memory. Memory item i=1.", "expectedOutput": "Dominick Huson"}, {"Line": 1022, "Input": "Where did Bobby Dieguez move the bench?", "actualOutput": "Memory item i=1 states that Bobby Dieguez drew the bench, with a hypothetical truth certainty of 0.7368.", "expectedOutput": "towards the fireplace"}, {"Line": 1023, "Input": "Who pulled Mrs. Twellman into the disagreement?", "actualOutput": "Memory does not provide information on who pulled Mrs. Twellman into the disagreement.", "expectedOutput": "Shon Mundy"}, {"Line": 1024, "Input": "Who is fulfilling the dream?", "actualOutput": "Memory item i=0 states that Levi Gagnon is fulfilling the dream with a certainty of 0.736842105263158.", "expectedOutput": "Levi Gagnon"}, {"Line": 1025, "Input": "Who is residing in the wild?", "actualOutput": "There is no memory item that directly answers the question of who is residing in the wild.", "expectedOutput": "Liam Gorham"}, {"Line": 1026, "Input": "Who resides down the street?", "actualOutput": "Memory does not provide information on who resides down the street.", "expectedOutput": "Lauren Wendell"}, {"Line": 1027, "Input": "What does Leanna Salo downplay?", "actualOutput": "Memory does not provide information on what Leanna Salo downplays. No memory item is related to Leanna Salo.", "expectedOutput": "Leanna Salo's achievements"}, {"Line": 1028, "Input": "Did Carl's employees name him homie?", "actualOutput": "Memory item i=4 suggests that Carl's employees named him homie with a hypothetical truth value of 0.736842105263158.", "expectedOutput": "Yes"}, {"Line": 1029, "Input": "Where did Carl's employees call him?", "actualOutput": "Memory item i=2 states that \"employee call carl\" with a certainty of 0.736842105263158.", "expectedOutput": "Home"}, {"Line": 1030, "Input": "What did Terry Sieg clean?", "actualOutput": "There is no memory item that mentions Terry Sieg cleaning, so it cannot be answered within the given parameters.", "expectedOutput": "The table"}, {"Line": 1031, "Input": "What did Terry Sieg remove?", "actualOutput": "Memory does not contain information about Terry Sieg removing anything. No memory item is related to Terry Sieg's actions.", "expectedOutput": "Crumbs"}, {"Line": 1032, "Input": "Who is Volvoing?", "actualOutput": "There is no memory item that mentions \"volvoing\" so it cannot be answered based on memory content only.", "expectedOutput": "Chuck Saban"}, {"Line": 1033, "Input": "Who is IBMing?", "actualOutput": "There is no mention of \"ibming\" in the given memory contents.", "expectedOutput": "Jan Cesario"}, {"Line": 1034, "Input": "Who skyped in during the Q&A session?", "actualOutput": "Memory does not provide information on who skyped in during the q&a session.", "expectedOutput": "Students"}, {"Line": 1035, "Input": "What does Gerry Trombley enjoy doing?", "actualOutput": "Gerry Trombley enjoys uncling according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "Uncling"}, {"Line": 1036, "Input": "Who whapped two winters ago?", "actualOutput": "tonie_harrod whapped two_winters_ago according to Memory and i=0 with a certainty of 0.2631578947368421.", "expectedOutput": "Tonie Harrod"}, {"Line": 1037, "Input": "Who is fobbing joyfully?", "actualOutput": "Memory item i=0 states that ruth_lavin fobbed joyfully with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "Ruth Lavin"}, {"Line": 1038, "Input": "Who was vivified?", "actualOutput": "There is no information in the given memory about anyone being vivified.", "expectedOutput": "Tanja Charlton"}, {"Line": 1039, "Input": "What is Sheilah Rector trying to do?", "actualOutput": "Memory does not provide information on what Sheilah Rector is trying to do.", "expectedOutput": "To unfreeze Sheilah Rector's assets"}, {"Line": 1040, "Input": "Who arrests those who break the law?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "Those s_noun"}, {"Line": 1041, "Input": "What was misplaced?", "actualOutput": "Memory does not provide information on what was misplaced.", "expectedOutput": "Stacks of documents"}, {"Line": 1042, "Input": "Which team won after a poor start?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "The varsity volleyball team"}, {"Line": 1043, "Input": "Who drives a Chevrolet?", "actualOutput": "John Schneider drives a Chevrolet according to memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "John Schneider"}, {"Line": 1044, "Input": "Who is Murray's client?", "actualOutput": "Murray's client is mentioned in memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "Stan Weber"}, {"Line": 1045, "Input": "What did Harriette Phung wonder about?", "actualOutput": "Harriette Phung's wonder is not mentioned in Memory.", "expectedOutput": "Whether Svetlana Golla would admit guilt"}, {"Line": 1046, "Input": "What did Harvey Paetzold tell Dee Darrell?", "actualOutput": "Harvey Paetzold told Dee Darrell something, with a certainty of 0.8214285, according to memory item i=3.", "expectedOutput": "To eat an apple"}, {"Line": 1047, "Input": "Who said that all fruits are good?", "actualOutput": "Memory item i=4 states that \"fruit are good for you\" with a certainty of 0.8214285. No one is mentioned as the speaker.", "expectedOutput": "Carter Hageman"}, {"Line": 1048, "Input": "What did Martin say?", "actualOutput": "Martin has a property according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "Beagles are great"}, {"Line": 1049, "Input": "What is a car to buy in 2018?", "actualOutput": "Memory item i=4 states that a car was bought, with a certainty of 0.7368. No specific car is mentioned.", "expectedOutput": "Toyota"}, {"Line": 1050, "Input": "What did Dr. Russo report?", "actualOutput": "Dr. Russo reported extra_data with a certainty value of 0.736842105263158. This is memory item i=4.", "expectedOutput": "the extra data"}, {"Line": 1051, "Input": "What do American students need to study?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "To study more math in order to compete in global marketplace today"}, {"Line": 1052, "Input": "What do American students need to study math?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "I don't know"}, {"Line": 1053, "Input": "What did Brendon Potts promise Krystin Quail?", "actualOutput": "Brendon Potts promised Krystin Quail, i=1, hypothetically true with a certainty of 0.736842105263158.", "expectedOutput": "To leave"}, {"Line": 1054, "Input": "What did Karl Betterton promise?", "actualOutput": "Karl promised to leave, with a certainty value of 0.736842105263158, in memory item i=2.", "expectedOutput": "To leave Ewa Odum"}, {"Line": 1055, "Input": "What did Mr. Middleton's grandchildren receive?", "actualOutput": "Mr. Middleton's grandchildren received presents, with a certainty value of 0.736842105263158 at memory item i=0.", "expectedOutput": "Presents"}, {"Line": 1056, "Input": "Did Valencia Mcardle buy Jeffrey Kittle's bike?", "actualOutput": "There is no memory item that directly answers whether Valencia McArdle bought Jeffrey Kittle's bike.", "expectedOutput": "yes"}, {"Line": 1057, "Input": "Is the office door closed?", "actualOutput": "The office door is hypothetically closed according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 1058, "Input": "Are the kitchen lights turned off?", "actualOutput": "There is no memory item that directly answers the question about the kitchen lights being turned off.", "expectedOutput": "Yes"}, {"Line": 1059, "Input": "Are the hallway lights turned off?", "actualOutput": "There is no memory item that directly answers whether the hallway lights are turned off.", "expectedOutput": "I don't know"}, {"Line": 1060, "Input": "What flies like an arrow?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "time"}, {"Line": 1061, "Input": "What likes bananas?", "actualOutput": "Memory item i=4 states that fruit likes bananas with a certainty of 0.8214285.", "expectedOutput": "fruit flies"}, {"Line": 1062, "Input": "Does time like an arrow?", "actualOutput": "Memory item i=4 states \"time flies like arrow\" with a hypothetical truth value of 0.736842105263158, suggesting a moderate probability that time behaves similarly to an arrow.", "expectedOutput": "I don't know"}, {"Line": 1063, "Input": "Does fruit fly bananas?", "actualOutput": "Memory does not suggest that fruit can fly bananas. No memory item mentions this.", "expectedOutput": "I don't know"}, {"Line": 1064, "Input": "What do the old man?", "actualOutput": "The old man owns a boat according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "The boat"}, {"Line": 1065, "Input": "What do the old do?", "actualOutput": "Memory does not provide a clear answer to this question. None of the memory items directly address what the old do.", "expectedOutput": "Man the boat"}, {"Line": 1066, "Input": "Who is Dorian Gray?", "actualOutput": "There is no memory item that directly answers who Dorian Gray is.", "expectedOutput": "Dorian Gray is the subject of a full-length portrait in oil by Basil Hallward."}, {"Line": 1067, "Input": "Where is Southern California Children's Museum?", "actualOutput": "The southern California children's museum is hypothetically located in Pasadena (i=2) with a certainty of 0.736.", "expectedOutput": "In Pasadena"}, {"Line": 1068, "Input": "What cake is not good?", "actualOutput": "Memory does not provide information on what cake is not good.", "expectedOutput": "The chocolate cake"}, {"Line": 1069, "Input": "Is the food at a new Italian restaurant delicious?", "actualOutput": "Memory item i=1 states that the food is at a new restaurant and i=2 states that the restaurant is Italian. Both are hypothetically true with certainty values of 0.627 and 0.736 respectively. However, there is no memory item that directly states whether the food is delicious.", "expectedOutput": "\"Yes, very delicious\""}, {"Line": 1070, "Input": "Did Iida meet Pearl's cousin?", "actualOutput": "Memory does not contain information about Pearl's cousin. Therefore, it is uncertain if Iida met Pearl's cousin.", "expectedOutput": "Yes"}, {"Line": 1071, "Input": "Did Iida meet Callie's cousin?", "actualOutput": "Memory item i=1 states \"iida meet cousin\" with a certainty of 0.736842105263158, but it does not mention Callie's cousin.", "expectedOutput": "I don't know"}, {"Line": 1072, "Input": "Is Jeremy's class difficult?", "actualOutput": "Memory item i=0 suggests that Jeremy's class is hypothetically difficult with a certainty of 0.5866911235305836.", "expectedOutput": "I don't know"}, {"Line": 1073, "Input": "Is the student from Jeremy's class difficult?", "actualOutput": "Memory item i=4 states that the student is from a class, but the difficulty level is only hypothetically true with a certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 1074, "Input": "Is the homework difficult?", "actualOutput": "The homework is hypothetically difficult with a certainty of 0.6411150125896854, according to memory item i=0.", "expectedOutput": "Yes"}, {"Line": 1075, "Input": "What is difficult?", "actualOutput": "It is difficult to determine the truth about \"jack isa pilot\" (i=4) with a certainty of 0.741907.", "expectedOutput": "\"Student's homework, the student from Brandon's class, and the students from Georgette's class' homework\""}, {"Line": 1076, "Input": "Where is the loud student from?", "actualOutput": "There is no memory item that directly answers the question about the loud student's origin.", "expectedOutput": "Jeremy's class"}, {"Line": 1077, "Input": "Who owns the homework?", "actualOutput": "The homework belongs to a student with a certainty value of 0.873801, found in memory item i=4.", "expectedOutput": "The loud student from Jeremy's class"}, {"Line": 1078, "Input": "Does Jeremy's class own the homework?", "actualOutput": "Memory does not provide information on whether Jeremy's class owns the homework (i=4).", "expectedOutput": "I don't know"}, {"Line": 1079, "Input": "Does the student from Jeremy's class own the homework?", "actualOutput": "Yes, the student from Jeremy's class owns the homework according to Memory. Memory item i=4 with certainty=0.873801.", "expectedOutput": "Yes"}, {"Line": 1080, "Input": "does the student from Jeremy's class have devoirs?", "actualOutput": "Memory item i=2 states that devoirs belong to the student, with a hypothetical certainty of 0.6411150125896854.", "expectedOutput": "\"Yes, difficult homework\""}, {"Line": 1081, "Input": "Is the devoirs difficult?", "actualOutput": "There is no information in the given memory to determine if the devoirs are difficult.", "expectedOutput": "Yes"}, {"Line": 1082, "Input": "Is Brandon's class difficult?", "actualOutput": "Memory item i=0 suggests that Brandon's class is hypothetically difficult with a certainty of 0.586.", "expectedOutput": "I don't know"}, {"Line": 1083, "Input": "Is the student from Brandon's class difficult?", "actualOutput": "Memory item i=2 states that the student has the property difficult with a certainty of 0.8677995.", "expectedOutput": "Yes"}, {"Line": 1084, "Input": "Is Georgette's class difficult?", "actualOutput": "Memory item i=0 suggests that Georgette's class is difficult with a certainty of 0.5866911235305836.", "expectedOutput": "I don't know"}, {"Line": 1085, "Input": "Are the students from Georgette's class's homework difficult?", "actualOutput": "Memory item i=1 states that the student has the property difficult with a certainty of 0.8677995000000001.", "expectedOutput": "Yes"}, {"Line": 1086, "Input": "Is the student from Georgette's class difficult?", "actualOutput": "Memory item i=2 states that the student has the property difficult with a certainty of 0.8677995.", "expectedOutput": "I don't know"}, {"Line": 1087, "Input": "What is from France?", "actualOutput": "Dogs, cats, and hamsters are from France according to Memory. Memory items i=2, i=3, i=4.", "expectedOutput": "\"Cats, dogs, and hamsters\""}, {"Line": 1088, "Input": "Did Ludovic pack the hotdogs?", "actualOutput": "Memory item i=1 states that Ludovic packed everything, so it is probable that he also packed the hotdogs.", "expectedOutput": "\"No, everything minus the hotdogs\""}, {"Line": 1089, "Input": "Is the pasta from Italy?", "actualOutput": "Memory item i=4 states that pasta is hypothetically true to be from Italy with a certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 1090, "Input": "Who does Holly trust?", "actualOutput": "Holly trusts someone, but it is only hypothetically true. Memory item i=0.", "expectedOutput": "Benedict"}, {"Line": 1091, "Input": "Does Holly trust Mendel?", "actualOutput": "Memory item i=3 states that \"holly trust him\" with a certainty of 0.8214285, but it does not mention Mendel.", "expectedOutput": "\"No, Benedict\""}, {"Line": 1092, "Input": "Who did Lain see?", "actualOutput": "Lain saw a man according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "Leland"}, {"Line": 1093, "Input": "Who saw the electrician?", "actualOutput": "According to Memory, Gregor saw the electrician with a hypothetical truth certainty of 0.599719162964736 at memory item i=3.", "expectedOutput": "Lain"}, {"Line": 1094, "Input": "Who saw Britta?", "actualOutput": "Gregor saw Britta according to Memory and memory item i=4 with a certainty value of 0.736842105263158.", "expectedOutput": "Leland and Gregor"}, {"Line": 1095, "Input": "Who did Kelly see?", "actualOutput": "Kelly saw Richter according to memory item i=0 with a certainty of 0.263.", "expectedOutput": "Umbra"}, {"Line": 1096, "Input": "Did Kelly see Jill?", "actualOutput": "There is no memory item that states whether Kelly saw Jill, so it cannot be determined.", "expectedOutput": "\"No, Umbra\""}, {"Line": 1097, "Input": "Is Umbra warm blooded?", "actualOutput": "Memory does not provide a certain answer, but hypothetically suggests that umbra is a mammal (i=0) which typically implies being warm-blooded.", "expectedOutput": "Yes"}, {"Line": 1098, "Input": "Are crows as big as ravens?", "actualOutput": "Memory item i=4 states that crows are as big as ravens with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 1099, "Input": "Are crows as big as elephants?", "actualOutput": "There is no memory item that states crows are as big as elephants.", "expectedOutput": "I don't know"}, {"Line": 1100, "Input": "Are crows as rotund as elephants?", "actualOutput": "Memory does not contain information about the rotundness of elephants or crows.", "expectedOutput": "I don't know"}, {"Line": 1101, "Input": "Are ravens as big as crows?", "actualOutput": "Memory item i=4 states that \"crow areasbigas raven\" with a certainty of 0.8214285, suggesting that ravens are not as big as crows.", "expectedOutput": "yes"}, {"Line": 1102, "Input": "Are ravens as big as elephants?", "actualOutput": "Memory does not contain information about ravens being as big as elephants. No memory item.", "expectedOutput": "I don't know"}, {"Line": 1103, "Input": "Are pidgeons as big as crows?", "actualOutput": "Memory item i=4 suggests that pidgeons are smaller than crows with a certainty value of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 1104, "Input": "Are pidgeons as big as ravens?", "actualOutput": "Memory item i=4 states that \"crow areassmallas pidgeons\" with a certainty of 0.8214285, but does not provide information on the size comparison with ravens.", "expectedOutput": "yes"}, {"Line": 1105, "Input": "Are pidgeons as big as elephants?", "actualOutput": "Memory does not contain information about pidgeons being as big as elephants.", "expectedOutput": "I don't know"}, {"Line": 1106, "Input": "Are crows as small as ravens?", "actualOutput": "Memory item i=4 states that crows are as big as ravens with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 1107, "Input": "Are ravens as small as crows?", "actualOutput": "Memory item i=4 states that crows are as big as ravens with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 1108, "Input": "Are crows as small as pidgeons?", "actualOutput": "Memory item i=4 states that \"crows are as small as pidgeons\" with a certainty value of 0.8214285.", "expectedOutput": "yes"}, {"Line": 1109, "Input": "Are pidgeons as small as ravens?", "actualOutput": "Memory item i=4 states that \"crow areassmallas pidgeons\" with a certainty of 0.8214285, but it does not compare the size of pidgeons to ravens.", "expectedOutput": "yes"}, {"Line": 1110, "Input": "Are crows as small as elephants?", "actualOutput": "Memory does not contain information about crows being as small as elephants.", "expectedOutput": "I don't know"}, {"Line": 1111, "Input": "Are elephants as small as ravens?", "actualOutput": "Memory does not provide a direct answer to this question.", "expectedOutput": "I don't know"}, {"Line": 1112, "Input": "Are crows bigger than ravens?", "actualOutput": "Memory item i=1 states that crows are as big as ravens with a certainty of 0.8214285.", "expectedOutput": "\"no, the same\""}, {"Line": 1113, "Input": "Are ravens bigger than crows?", "actualOutput": "Memory item i=1 states that crows are as big as ravens with a certainty of 0.8214285.", "expectedOutput": "\"no, the same\""}, {"Line": 1114, "Input": "Are pidgeons bigger than crows?", "actualOutput": "Memory item i=1 states that \"crow areassmallas pidgeons\" with a certainty of 0.8214285, suggesting that pidgeons are smaller than crows.", "expectedOutput": "\"no, the same\""}, {"Line": 1115, "Input": "Are ravens bigger than pidgeons?", "actualOutput": "Memory item i=1 states that \"crow areasbigas raven\" with a certainty of 0.8214285, suggesting that ravens are bigger than crows, not necessarily pidgeons.", "expectedOutput": "\"no, the same\""}, {"Line": 1116, "Input": "Are crows smaller than ravens?", "actualOutput": "Memory item i=0 states that crows are smaller than pigeons, but no information is given about ravens. Certainty=0.8214285.", "expectedOutput": "\"no, the same\""}, {"Line": 1117, "Input": "Are ravens smaller than crows?", "actualOutput": "Memory item i=1 states that crows are as big as ravens with a certainty of 0.8214285. No information suggests that ravens are smaller than crows.", "expectedOutput": "\"no, the same\""}, {"Line": 1118, "Input": "Are pidgeons smaller than crows?", "actualOutput": "Memory item i=1 states that \"crow areassmallas pidgeons\" with a certainty of 0.8214285, suggesting that pidgeons are indeed smaller than crows.", "expectedOutput": "\"no, the same\""}, {"Line": 1119, "Input": "Where are velots from?", "actualOutput": "Velots are hypothetically from Spain according to memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "Spain"}, {"Line": 1120, "Input": "What color are velots?", "actualOutput": "Velots are hypothetically green according to memory item i=2 with a certainty of 0.736842105263158.", "expectedOutput": "Green"}, {"Line": 1121, "Input": "What color is Kyle's velot?", "actualOutput": "The color of Kyle's velot is not mentioned in Memory.", "expectedOutput": "Red"}, {"Line": 1122, "Input": "Is Kyle's velot green?", "actualOutput": "Memory item i=10 states that \"velots hasproperty green\" with a certainty of 0.8322955000000001, suggesting that Kyle's velot is green.", "expectedOutput": "\"No, red\""}, {"Line": 1123, "Input": "Are velots loud?", "actualOutput": "Memory item i=1 states that \"velots hasproperty loud\" with a certainty of 0.6707060063224447, indicating that there is a probability that velots are loud.", "expectedOutput": "Yes"}, {"Line": 1124, "Input": "Are velots angelic?", "actualOutput": "Velots are hypothetically true to have the property of being angelic with a certainty of 0.6966019417475728 in memory item i=2.", "expectedOutput": "Yes"}, {"Line": 1125, "Input": "Are velots hairy?", "actualOutput": "Yes, velots are hairy according to memory item i=2 with a certainty value of 0.736842105263158.", "expectedOutput": "Yes"}, {"Line": 1126, "Input": "What color is Kyle's velot?", "actualOutput": "The color of Kyle's velot is not mentioned in Memory.", "expectedOutput": "Red"}, {"Line": 1127, "Input": "Does Kyle have an endotherm?", "actualOutput": "There is no memory item indicating whether Kyle has an endotherm.", "expectedOutput": "Yes"}, {"Line": 1128, "Input": "what color is Kyle's endotherm?", "actualOutput": "There is no information in Memory about Kyle's endotherm, so no memory item can be identified.", "expectedOutput": "Red"}, {"Line": 1129, "Input": "Are the yellow birds in dogs?", "actualOutput": "Memory does not provide a clear answer to whether yellow birds are in dogs. The closest memory item is i=4, which states \"bird are yellow yellow\" with a hypothetical certainty of 0.736842105263158.", "expectedOutput": "\"No, in cages\""}, {"Line": 1130, "Input": "Are the red birds in dogs?", "actualOutput": "There is no memory item that directly answers the question about red birds in dogs.", "expectedOutput": "No. In cages and boxes"}, {"Line": 1131, "Input": "Which word has Latin origin?", "actualOutput": "The memory does not contain any information about a word with Latin origin.", "expectedOutput": "Liminality"}, {"Line": 1132, "Input": "Does Elijah live in California?", "actualOutput": "There is no memory item that states whether Elijah lives in California or not.", "expectedOutput": "yes"}, {"Line": 1133, "Input": "Does Elijah live in Irvine?", "actualOutput": "There is no memory item that states whether Elijah lives in Irvine, so it cannot be determined.", "expectedOutput": "\"No, in Westwood\""}, {"Line": 1134, "Input": "Did Elijah live in New York City?", "actualOutput": "There is no memory item that states whether Elijah lived in New York City.", "expectedOutput": "yes"}, {"Line": 1135, "Input": "Did Elijah live in Irvine?", "actualOutput": "There is no memory item that states whether Elijah lived in Irvine, so it cannot be determined.", "expectedOutput": "\"No, in Westwood\""}, {"Line": 1136, "Input": "Where does Elijah reside?", "actualOutput": "Elijah's residence is hypothetically false in memory item i=1 with a certainty of 0.263.", "expectedOutput": "In Westwood and New York City"}, {"Line": 1137, "Input": "Where did Elijah reside?", "actualOutput": "Memory does not provide information on where Elijah resided.", "expectedOutput": "In Westwood and New York City"}, {"Line": 1138, "Input": "When does Rob eat breakfast?", "actualOutput": "Rob eating breakfast is hypothetically true with a certainty of 0.736842105263158, but it is not specified when it happened in the memory.", "expectedOutput": "At 8 AM"}, {"Line": 1139, "Input": "When does Rob eat dinner?", "actualOutput": "Rob eats dinner hypothetically, with a certainty of 0.736842105263158, according to memory item i=4.", "expectedOutput": "At 8 PM"}, {"Line": 1140, "Input": "Who is Tesla's employee?", "actualOutput": "There is no memory item in the given Memory that directly answers the question with certainty.", "expectedOutput": "Steven"}, {"Line": 1141, "Input": "Who is in The Matrix?", "actualOutput": "There is no information in the given memory about who is in the matrix.", "expectedOutput": "Keanu Reeves"}, {"Line": 1142, "Input": "Who played Neo?", "actualOutput": "Keanu Reeves played Neo according to memory item i=4 with a certainty value of 0.736842105263158.", "expectedOutput": "Keanu Reeves"}, {"Line": 1143, "Input": "Who starred in The Matrix?", "actualOutput": "There is no memory item in the given Memory that provides a probabilistic answer to who starred in the Matrix.", "expectedOutput": "Keanu Reeves"}, {"Line": 1144, "Input": "Who acted in The Matrix?", "actualOutput": "There is no memory item in the given memory that answers the question with certainty.", "expectedOutput": "Keanu Reeves"}, {"Line": 1145, "Input": "What is Keanu Reeves in?", "actualOutput": "There is no memory item that mentions Keanu Reeves, so there is no answer to this question based on memory content.", "expectedOutput": "The Matrix"}, {"Line": 1146, "Input": "What movie is Keanu Reeves in?", "actualOutput": "Keanu Reeves stars in a movie, i=0 or i=1, with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "The Matrix"}, {"Line": 1147, "Input": "What book is Keanu Reeves in?", "actualOutput": "There is no memory content that mentions Keanu Reeves and a book, therefore there is no answer to this question within the given memory.", "expectedOutput": "I don't know"}, {"Line": 1148, "Input": "What kind of movie is Dracula?", "actualOutput": "There is no memory item that directly states what kind of movie Dracula is.", "expectedOutput": "A horror movie"}, {"Line": 1149, "Input": "What kind of movie is Happy Gilmore?", "actualOutput": "There is no memory item in the given Memory that mentions \"Happy Gilmore\" movie.", "expectedOutput": "A comedy movie"}, {"Line": 1150, "Input": "What do the young man?", "actualOutput": "The young man has Carlton according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "The cars"}, {"Line": 1151, "Input": "What do the rich man?", "actualOutput": "The rich man buys a turtle according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "The bikes"}, {"Line": 1152, "Input": "What do the poor man?", "actualOutput": "The poor man owns a boat according to Memory item i=3 with a certainty of 0.821.", "expectedOutput": "I don't know"}, {"Line": 1153, "Input": "Is Sam's dog friendly?", "actualOutput": "Memory item i=4 states that \"dog is a friendly\" with a hypothetical truth value of 0.736842105263158. Therefore, there is a 73.68% chance that Sam's dog is friendly according to Memory.", "expectedOutput": "Yes"}, {"Line": 1154, "Input": "Is Robert's dog friendly?", "actualOutput": "Memory item i=21 states \"dog isa friendly\" with a certainty of 0.8214285, suggesting a high probability that Robert's dog is friendly.", "expectedOutput": "No"}, {"Line": 1155, "Input": "When are the rates going to increase?", "actualOutput": "Memory item i=0 suggests a hypothetical increase in interest rates, with a certainty of 0.736842105263158.", "expectedOutput": "From 12/1/2018 to 12/31/2018"}, {"Line": 1156, "Input": "Why does the Federal Open Market Committee raise the rates?", "actualOutput": "No memory item provides an answer to this question.", "expectedOutput": "In order to keep inflation steady at around 2 percent per year from 12/1/2018"}, {"Line": 1157, "Input": "Did Team A make any mistakes?", "actualOutput": "Memory item i=4 states that \"team make mistake\" with a certainty of 0.2631578947368421, indicating a low probability of the statement being true.", "expectedOutput": "I don't know"}, {"Line": 1158, "Input": "Did Team B make any mistakes?", "actualOutput": "Yes, team made a mistake according to Memory. Memory item i=4 has a certainty value of 0.1785715 for being knowingly false.", "expectedOutput": "Yes"}, {"Line": 1159, "Input": "Who made the project possible?", "actualOutput": "The team made the project possible according to memory. Memory item i=4 has a certainty value of 0.736842105263158.", "expectedOutput": "Team A"}], 1]