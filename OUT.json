[[{"Line": 1, "Input": "#setdate 10/21/2016", "actualOutput": "RelationClaim(\"sentence\",\"has\",\"relations\")\nPropertyClaim(\"sentence\",\"believed\",True)\nNegatedPropertyClaim(\"memory\",\"empty\",False)\nNegatedRelationClaim(\"sentence\",\"is\",\"false\")", "expectedOutput": ""}, {"Line": 2, "Input": "#settime 9:00 AM", "actualOutput": "PropertyClaim(\"Memory\",\"IsEmpty\",true)\nRelationClaim(\"Sentence\",\"Believes\",\"PropertyClaim\") \nRelationClaim(\"Sentence\",\"Encodes\",\"AllRelations\")\nRelationClaim(\"Sentence\",\"HasToBe\",\"Believed\")\nNegatedRelationClaim(\"Sentence\",\"Contains\",\"Not\")", "expectedOutput": ""}, {"Line": 3, "Input": "#setGlobal resetCoreDuringBatch false", "actualOutput": "PropertyClaim(\"resetcoreduringbatch\",\"HasProperty\",\"falseEncode\")\nRelationClaim(\"sentence\",\"believes\",\"all relations in the sentence\")", "expectedOutput": ""}, {"Line": 4, "Input": "Mr. Magoo is a popular cartoon character from the 1940s.", "actualOutput": "RelationClaim(\"mr. magoo\",\"IsA\",\"cartoon character\")\nPropertyClaim(\"mr. magoo\",\"HasProperty\",\"popularity\")\nRelationClaim(\"mr. magoo\",\"WasCreatedIn\",\"1940s\")", "expectedOutput": ""}, {"Line": 5, "Input": "He is known for being comically near-sighted.", "actualOutput": "RelationClaim(\"he\",\"IsKnownFor\",\"being comically near-sighted\") \nPropertyClaim(\"he\",\"Is\",\"comically near-sighted\")", "expectedOutput": ""}, {"Line": 6, "Input": "Mr. Magoo was voiced by Bobby Backus.", "actualOutput": "RelationClaim(\"mr. magoo\",\"WasVoicedBy\",\"bobby backus\")\nNegatedRelationClaim(\"mr. magoo\",\"IsA\",\"dog\")\nPropertyClaim(\"mr. magoo\",\"HasVoiceActor\",\"bobby backus\")\nNegatedPropertyClaim(\"mr. magoo\",\"HasVoiceActor\",\"jimmy johns\")", "expectedOutput": ""}, {"Line": 7, "Input": "Jim's party is at 4 pm today.", "actualOutput": "RelationClaim(party, \"IsAt\", time)\nPropertyClaim(party, \"HasTime\", \"4 pm\")\nPropertyClaim(party, \"HasDate\", \"today\")\nPropertyClaim(party, \"HasHost\", jim)", "expectedOutput": ""}, {"Line": 8, "Input": "\"Actually, Jim's party is at 5 pm.\"", "actualOutput": "NegatedRelationClaim(jim, \"IsA\", party)\nPropertyClaim(party, \"HasTime\", 5_pm)\nPropertyClaim(party, \"HasDate\", today)\nNegatedPropertyClaim(party, \"HasTime\", 4_pm)\nPropertyClaim(party, \"HasHost\", jim)", "expectedOutput": ""}, {"Line": 9, "Input": "Tina wants a dog and a cat.", "actualOutput": "RelationClaim(tina, \"Wants\", dog)\nRelationClaim(tina, \"Wants\", cat)", "expectedOutput": ""}, {"Line": 10, "Input": "\"Actually, Tina only wants a cat.\"", "actualOutput": "NegatedPropertyClaim(\"tina\",\"want\",\"dog\")\nPropertyClaim(\"tina\",\"want\",\"cat\")", "expectedOutput": ""}, {"Line": 11, "Input": "Aubrey White wears white dresses.", "actualOutput": "RelationClaim(aubrey_white, \"Wears\", white_dresses)\nPropertyClaim(white_dresses, \"HasProperty\", white)\nRelationClaim(aubrey_white, \"IsA\", person)", "expectedOutput": ""}, {"Line": 12, "Input": "Aubrey White is female.", "actualOutput": "RelationClaim(aubrey_white,\"IsA\",female)", "expectedOutput": ""}, {"Line": 13, "Input": "Aubrey Black wears black ties.", "actualOutput": "PropertyClaim(\"aubrey_black\",\"HasProperty\",\"black\")\nRelationClaim(\"aubrey_black\",\"wears\",\"black_ties\")", "expectedOutput": ""}, {"Line": 14, "Input": "Aubrey Black is male.", "actualOutput": "NegatedRelationClaim(aubrey_black,\"IsA\",male)", "expectedOutput": ""}, {"Line": 15, "Input": "Pat White is male.", "actualOutput": "RelationClaim(\"pat white\",\"IsA\",\"male\")", "expectedOutput": ""}, {"Line": 16, "Input": "Mr. White wears white ties.", "actualOutput": "PropertyClaim(\"mr. white\",\"Wear\",\"white ties\")\nRelationClaim(\"white ties\",\"IsA\",\"ties\")\nPropertyClaim(\"white ties\",\"HasProperty\",\"white\")\nNegatedRelationClaim(\"mr. white\",\"IsA\",\"female\")", "expectedOutput": ""}, {"Line": 17, "Input": "Pat Black is a woman.", "actualOutput": "RelationClaim(\"pat_black\",\"IsA\",\"woman\")", "expectedOutput": ""}, {"Line": 18, "Input": "Mrs. Black wears black dresses.", "actualOutput": "PropertyClaim(\"mrs. black\",\"HasProperty\",\"black\")\nRelationClaim(\"mrs. black\",\"Wears\",\"dresses\")\nNegatedRelationClaim(\"mrs. black\",\"IsA\",\"man\")\nNegatedRelationClaim(\"mrs. black\",\"IsA\",\"pat white\")", "expectedOutput": ""}, {"Line": 19, "Input": "Taylor Keegan is a great actress.", "actualOutput": "RelationClaim(\"taylor keegan\",\"IsA\",\"actress\")\nPropertyClaim(\"taylor keegan\",\"HasProperty\",\"great\")", "expectedOutput": ""}, {"Line": 20, "Input": "Taylor Monegan is a waiter.", "actualOutput": "RelationClaim(\"taylor monegan\",\"IsA\",\"waiter\")", "expectedOutput": ""}, {"Line": 21, "Input": "Dr. Kendrick Marmion Murphy Jr. is very tall.", "actualOutput": "RelationClaim(\"dr. kendrick marmion murphy jr.\",\"IsA\",\"person\")\nPropertyClaim(\"dr. kendrick marmion murphy jr.\",\"HasProperty\",\"tall\")\nPropertyClaim(\"dr. kendrick marmion murphy jr.\",\"HasProperty\",\"very tall\")", "expectedOutput": ""}, {"Line": 22, "Input": "\"The North American Society for Marine Mammal Research, an organization in Boston, is giving a presentation.\"", "actualOutput": "RelationClaim(\"north american society for marine mammal research\",\"IsA\",\"organization\")\nRelationClaim(\"north american society for marine mammal research\",\"LocatedIn\",\"boston\")\nRelationClaim(\"north american society for marine mammal research\",\"GivingPresentation\",\"presentation\")", "expectedOutput": ""}, {"Line": 23, "Input": "Carl's last name is Weathers.", "actualOutput": "RelationClaim(carl,\"HasLastName\",weathers)", "expectedOutput": ""}, {"Line": 24, "Input": "Carl's middle name is Austin.", "actualOutput": "PropertyClaim(carl,\"HasMiddleName\",austin)\nNegatedRelationClaim(carl,\"HasMiddleName\",austin)\nNegatedPropertyClaim(carl,\"HasMiddleName\",austin)\nRelationClaim(austin,\"IsAMiddleNameOf\",carl)", "expectedOutput": ""}, {"Line": 25, "Input": "Robin and Jasmine are a team.", "actualOutput": "RelationClaim(robin,\"IsA\",team)\nRelationClaim(jasmine,\"IsA\",team)\nRelationClaim(robin,\"IsPartOf\",team)\nRelationClaim(jasmine,\"IsPartOf\",team)", "expectedOutput": ""}, {"Line": 26, "Input": "Every car is red.", "actualOutput": "RelationClaim(car,\"IsA\",vehicle)\nPropertyClaim(car,\"HasProperty\",red)", "expectedOutput": ""}, {"Line": 27, "Input": "Cindy eats apples so the doctor stays away.", "actualOutput": "RelationClaim(cindy,\"Eats\",apples)\nRelationClaim(doctor,\"StaysAway\",cindy)", "expectedOutput": ""}, {"Line": 28, "Input": "Carla was eating pie.", "actualOutput": "RelationClaim(carla, \"IsA\", person)\nRelationClaim(carla, \"Eats\", pie)\nPropertyClaim(pie, \"IsDelicious\", True)", "expectedOutput": ""}, {"Line": 29, "Input": "Carla is copying the reports.", "actualOutput": "RelationClaim(\"carla\",\"IsA\",\"person\")\nRelationClaim(\"carla\",\"IsCopying\",\"reports\")", "expectedOutput": ""}, {"Line": 30, "Input": "\"Carla will email her client, Jenny.\"", "actualOutput": "RelationClaim(carla,\"WillEmail\",jenny)\nRelationClaim(carla,\"HasClient\",jenny)\nRelationClaim(jenny,\"IsClientOf\",carla)", "expectedOutput": ""}, {"Line": 31, "Input": "Raquel sang to Martha a song.", "actualOutput": "RelationClaim(raquel, \"SangTo\", martha)\nRelationClaim(raquel, \"Sang\", song)\nRelationClaim(song, \"IsA\", \"Song\")\nRelationClaim(raquel, \"IsA\", \"Singer\")\nRelationClaim(martha, \"IsA\", \"Listener\")", "expectedOutput": ""}, {"Line": 32, "Input": "\"Julius will, in a few minutes, bring the cake.\"", "actualOutput": "RelationClaim(julius, \"Brings\", cake)", "expectedOutput": ""}, {"Line": 33, "Input": "\"I will, when I get home, feed the dog.\"", "actualOutput": "NegatedRelationClaim(I, \"GetHome\", None)\nRelationClaim(I, \"Feed\", Dog)", "expectedOutput": ""}, {"Line": 34, "Input": "Carla gave the materials to Wilma said Zachary.", "actualOutput": "RelationClaim(carla, \"Gave\", materials)\nRelationClaim(materials, \"To\", wilma)\nRelationClaim(zachary, \"Said\", carla)\nNegatedRelationClaim(wilma, \"Said\", carla)", "expectedOutput": ""}, {"Line": 35, "Input": "an object was updated by an actor is the same as the actor updated the object.", "actualOutput": "RelationClaim(\"object\",\"wasUpdatedBy\",\"actor\")\nRelationClaim(\"actor\",\"updated\",\"object\")", "expectedOutput": ""}, {"Line": 36, "Input": "The contact numbers that Carla gave to Miranda were actually updated by Erina.", "actualOutput": "PropertyClaim(\"contact numbers\",\"WereUpdatedBy\",\"erina\")\nRelationClaim(\"carla\",\"Gave\",\"contact numbers\")\nRelationClaim(\"carla\",\"GaveTo\",\"miranda\")", "expectedOutput": ""}, {"Line": 37, "Input": "Selena looked over the tax plan so that she could prepare to answer Miriam's questions.", "actualOutput": "RelationClaim(selena, \"LookedOver\", tax_plan)\nRelationClaim(selena, \"PreparedFor\", miriam_questions)\nRelationClaim(miriam, \"HasQuestionAbout\", tax_plan)", "expectedOutput": ""}, {"Line": 38, "Input": "Kayla knew the pamphlet would cover all the talking points her staff was looking for.", "actualOutput": "RelationClaim(\"kayla\",\"knew\",\"pamphlet\")\nRelationClaim(\"pamphlet\",\"cover\",\"talking points\")\nRelationClaim(\"staff\",\"look for\",\"talking points\")\nPropertyClaim(\"staff\",\"have\",\"talking points\")", "expectedOutput": ""}, {"Line": 39, "Input": "Carla asked Miranda to clarify the question about the quarterly revenue made by her company before taxes.", "actualOutput": "RelationClaim(\"carla\",\"asked\",\"miranda\")\nRelationClaim(\"miranda\",\"clarify\",\"question\")\nRelationClaim(\"question\",\"about\",\"quarterly revenue\")\nRelationClaim(\"quarterly revenue\",\"made by\",\"company\")\nRelationClaim(\"company\",\"before taxes\",\"true\")", "expectedOutput": ""}, {"Line": 40, "Input": "Carla sent her boss the blueprints.", "actualOutput": "RelationClaim(\"carla\",\"sent\",\"blueprints\")\nPropertyClaim(\"blueprints\",\"HasProperty\",\"blue\")\nRelationClaim(\"carla\",\"HasProperty\",\"boss\")\nNegatedRelationClaim(\"carla\",\"IsA\",\"boss\") #assuming Carla is not the boss", "expectedOutput": ""}, {"Line": 41, "Input": "Kayla brewed Terrence another batch of coffee.", "actualOutput": "RelationClaim(kayla, \"Brewed\", coffee)\nNegatedRelationClaim(kayla, \"Brewed\", tea)\nNegatedRelationClaim(kayla, \"Brewed\", water)\nRelationClaim(kayla, \"BrewedFor\", terrence)\nPropertyClaim(coffee, \"HasProperty\", hot)\nPropertyClaim(coffee, \"HasProperty\", strong)\nNegatedPropertyClaim(coffee, \"HasProperty\", cold)\nNegatedPropertyClaim(coffee, \"HasProperty\", weak)", "expectedOutput": ""}, {"Line": 42, "Input": "Kayla gave Mike twenty dollars.", "actualOutput": "RelationClaim(kayla, \"Gave\", mike)\nPropertyClaim(mike, \"HasProperty\", \"Twenty dollars\")", "expectedOutput": ""}, {"Line": 43, "Input": "Currency is money.", "actualOutput": "RelationClaim(\"currency\",\"IsA\",\"money\")", "expectedOutput": ""}, {"Line": 44, "Input": "Sally is a girl.", "actualOutput": "RelationClaim(\"sally\",\"IsA\",\"girl\")", "expectedOutput": ""}, {"Line": 45, "Input": "Panz's birthday is 11/20/2016.", "actualOutput": "RelationClaim(\"panz's birthday\",\"is\", \"11/20/2016\")", "expectedOutput": ""}, {"Line": 46, "Input": "Anthony's ceremony is 3 days after her birthday.", "actualOutput": "RelationClaim(ceremony, \"OccursAfter\", birthday)\nPropertyClaim(ceremony, \"Duration\", 3)\nNegatedRelationClaim(ceremony, \"OccursBefore\", birthday) # This is false, but not explicitly stated in the sentence\nNegatedPropertyClaim(ceremony, \"Duration\", 2) # This is false, but not explicitly stated in the sentence", "expectedOutput": ""}, {"Line": 47, "Input": "\"Bill's favorite wine is Etna Rosso, and he doesn't like white wine.\"", "actualOutput": "RelationClaim(\"bill\",\"HasFavorite\",\"etna rosso\")\nNegatedPropertyClaim(\"bill\",\"Likes\",\"white wine\")", "expectedOutput": ""}, {"Line": 48, "Input": "James just bought a 20 ft plane.", "actualOutput": "RelationClaim(james, \"bought\", plane)\nPropertyClaim(plane, \"HasProperty\", \"20 ft\")", "expectedOutput": ""}, {"Line": 49, "Input": "It has the 250 hp Evinrude engine.", "actualOutput": "PropertyClaim(\"it\",\"HasProperty\",\"250 hp evinrude engine\")", "expectedOutput": ""}, {"Line": 50, "Input": "James sold his eighteen foot plane to his neighbor because it's too slow!", "actualOutput": "NegatedRelationClaim(james,sold,his eighteen foot plane)\nRelationClaim(james,sold,his neighbor)\nPropertyClaim(his eighteen foot plane,\"IsTooSlow\",True)", "expectedOutput": ""}, {"Line": 51, "Input": "\"The men rescued in this tale of three castaways were not named Tom Hanks, or Gilligan or Robinson Crusoe.\"", "actualOutput": "NegatedRelationClaim(men, \"RescuedIn\", tale)\nNegatedPropertyClaim(tale, \"HasProperty\", three_castaways)\nNegatedRelationClaim(men, \"Named\", tom_hanks)\nNegatedRelationClaim(men, \"Named\", gilligan)\nNegatedRelationClaim(men, \"Named\", robinson_crusoe)", "expectedOutput": ""}, {"Line": 52, "Input": "Though they might as well have been.", "actualOutput": "NegatedRelationClaim(they, \"IsA\", castaways)\nNegatedPropertyClaim(they, \"HasProperty\", rescued)\nPropertyClaim(they, \"MightAsWellBe\", castaways)", "expectedOutput": ""}, {"Line": 53, "Input": "\"In a scene straight from Hollywood, a U.S. Navy plane spotted the word \"\"help\"\" spelled out in palm fronds on a beach.\"", "actualOutput": "NegatedRelationClaim(navy_plane, \"IsA\", car)\nRelationClaim(navy_plane, \"Spotted\", help_word)\nPropertyClaim(help_word, \"IsMadeOf\", palm_fronds)\nPropertyClaim(beach, \"HasProperty\", palm_fronds)", "expectedOutput": ""}, {"Line": 54, "Input": "It was on a deserted island in the remote Pacific.", "actualOutput": "NegatedRelationClaim(it, \"IsA\", deserted_island)\nNegatedRelationClaim(deserted_island, \"IsA\", remote_pacific)\nPropertyClaim(deserted_island, \"HasProperty\", palm_fronds)", "expectedOutput": ""}, {"Line": 55, "Input": "The three men had been missing for three days.", "actualOutput": "RelationClaim(men, \"AreMissingFor\", three_days)\n", "expectedOutput": ""}, {"Line": 56, "Input": "Two cargo ships searched a combined 17 hours for the men as part of AMVER.", "actualOutput": "RelationClaim(cargo_ship, \"Search\", men)\nPropertyClaim(cargo_ship, \"IsA\", \"Amver_participant\")\nPropertyClaim(cargo_ship, \"HasProperty\", \"Cargo\")\nPropertyClaim(cargo_ship, \"HasProperty\", \"Large\")\nPropertyClaim(cargo_ship, \"HasProperty\", \"Motorized\")\nPropertyClaim(cargo_ship, \"HasProperty\", \"Commercial\")\nPropertyClaim(cargo_ship, \"HasProperty\", \"Seafaring\")\nPropertyClaim(cargo_ship, \"HasProperty\", \"17_hours_searched\")\nPropertyClaim(cargo_ship, \"HasProperty\", \"Combined_search\")\nPropertyClaim(men, \"HasProperty\", \"Missing\")\nPropertyClaim(men, \"HasProperty\", \"Lost_at_sea\")", "expectedOutput": ""}, {"Line": 57, "Input": "It is a Coast Guard voluntary search and rescue program.", "actualOutput": "RelationClaim(\"coast guard voluntary search and rescue program\",\"IsA\",\"program\")\nRelationClaim(\"program\",\"IsA\",\"search and rescue program\")\nRelationClaim(\"search and rescue program\",\"IsA\",\"rescue program\")\nRelationClaim(\"rescue program\",\"IsA\",\"program\")", "expectedOutput": ""}, {"Line": 58, "Input": "Viola will play with her horse at 3 PM at the park with Stan.", "actualOutput": "RelationClaim(\"viola\",\"playWith\", \"horse\")\nRelationClaim(\"horse\",\"belongsTo\", \"viola\")\nPropertyClaim(\"viola\",\"hasProperty\", \"scheduledActivity\")\nPropertyClaim(\"viola\",\"hasProperty\", \"time: 3 pm\")\nRelationClaim(\"viola\",\"isAt\", \"park\")\nRelationClaim(\"park\",\"hasProperty\", \"Stan\")", "expectedOutput": ""}, {"Line": 59, "Input": "Suzie suggested that Phil run at 7 AM at 5.", "actualOutput": "RelationClaim(Suzie, \"Suggested\", (Phil, Run, 7am))", "expectedOutput": ""}, {"Line": 60, "Input": "Rufus climbed the mountain.", "actualOutput": "RelationClaim(rufus, \"Climbed\", mountain)", "expectedOutput": ""}, {"Line": 61, "Input": "\"If Jim receives pictures, then he will download them.\"", "actualOutput": "RelationClaim(jim, \"Receives\", pictures)\nRelationClaim(jim, \"Downloads\", them)", "expectedOutput": ""}, {"Line": 62, "Input": "\"If Logan's inbox is full, then he will not receive new emails.\"", "actualOutput": "NegatedRelationClaim(inbox, \"IsFull\", logan)\nNegatedRelationClaim(logan, \"Receive\", new_emails)", "expectedOutput": ""}, {"Line": 63, "Input": "\"If Marcus is early, then he cleans the blackboards.\"", "actualOutput": "RelationClaim(\"marcus\",\"IsA\",\"person\")\nRelationClaim(\"marcus\",\"IsEarly\",True)\nRelationClaim(\"marcus\",\"Cleans\",\"blackboards\")", "expectedOutput": ""}, {"Line": 64, "Input": "\"If Simon proposes at the wedding, then Marie takes pictures.\"", "actualOutput": "RelationClaim(\"simon\",\"ProposesAt\",\"wedding\")\nRelationClaim(\"marie\",\"TakesPictures\",\"wedding\")", "expectedOutput": ""}, {"Line": 65, "Input": "\"If you close the window, the window is closed.\"", "actualOutput": "RelationClaim(window, \"IsClosed\", window)\nNegatedRelationClaim(window, \"IsClosed\", window)\nRelationClaim(you, \"Close\", window)", "expectedOutput": ""}, {"Line": 66, "Input": "this is from http://money.cnn.com/data/world_markets/americas/?iid=H_MKT_QL", "actualOutput": "There is no sentence provided in the prompt. Please provide a sentence to complete the task.", "expectedOutput": ""}, {"Line": 67, "Input": "Google bought DeepMind in 2014.", "actualOutput": "RelationClaim(google, \"bought\", deepmind)\nPropertyClaim(deepmind, \"WasBoughtIn\", 2014)", "expectedOutput": ""}, {"Line": 68, "Input": "DeepMind's AI released AlphaGo last month.", "actualOutput": "PropertyClaim(\"deepmind's ai\",\"HasProperty\",\"released alphago last month\")\nNegatedRelationClaim(\"deepmind's ai\",\"IsA\",\"rescue_program\")\nNegatedRelationClaim(\"deepmind's ai\",\"IsA\",\"program\")\nNegatedRelationClaim(\"deepmind's ai\",\"IsA\",\"horse\")", "expectedOutput": ""}, {"Line": 69, "Input": "this is from Jane.", "actualOutput": "PropertyClaim(this,\"IsFrom\",jane)", "expectedOutput": ""}, {"Line": 70, "Input": "Red unicorns were flying over a lake.", "actualOutput": "RelationClaim(unicorns,\"Are\",red)\nRelationClaim(unicorns,\"FlyOver\",lake)", "expectedOutput": ""}, {"Line": 71, "Input": "DefaultUser:: Murray is Stan's teacher.", "actualOutput": "RelationClaim(\"murray\",\"IsA\",\"teacher\")\nRelationClaim(\"murray\",\"Teaches\", \"stan\")", "expectedOutput": ""}, {"Line": 72, "Input": "Scott's brother Ralph lives in Florida.", "actualOutput": "RelationClaim(brother, \"IsA\", person)\nRelationClaim(Ralph, \"IsA\", person)\nRelationClaim(Ralph, \"IsRelativeOf\", Scott)\nRelationClaim(Ralph, \"LivesIn\", Florida)", "expectedOutput": ""}, {"Line": 73, "Input": "Scott's brother Ethan lives in Texas.", "actualOutput": "PropertyClaim(\"ethan\",\"IsRelativeOf\",\"scott\")\nPropertyClaim(\"ethan\",\"LivesIn\",\"texas\")", "expectedOutput": ""}, {"Line": 74, "Input": "Scott's brother from Florida is running for office.", "actualOutput": "RelationClaim(scott,brother,ethan)\nNegatedPropertyClaim(ethan,\"livesin\",florida)\nRelationClaim(ethan,\"runningfor\",office)", "expectedOutput": ""}, {"Line": 75, "Input": "Scott's wife is Nan.", "actualOutput": "RelationClaim(wife, \"IsA\", person)\nRelationClaim(scott, \"HasProperty\", married)\nNegatedPropertyClaim(wife, \"HasProperty\", nan) # This is false, so we use the negated property claim\nPropertyClaim(wife, \"HasProperty\", unknown) # We can use this instead of \"nan\" to avoid using a string value", "expectedOutput": ""}, {"Line": 76, "Input": "Trevor has 2 sisters.", "actualOutput": "PropertyClaim(\"trevor\",\"HasProperty\",\"2 sisters\")", "expectedOutput": ""}, {"Line": 77, "Input": "\"Trevor's sister, Alisha, is happy.\"", "actualOutput": "PropertyClaim(\"alisha\",\"HasProperty\",\"happy\")\nRelationClaim(\"trevor\",\"HasSister\",\"alisha\")", "expectedOutput": ""}, {"Line": 78, "Input": "\"Trevor, Becky's brother, is nice.\"", "actualOutput": "PropertyClaim(\"trevor\",\"IsNice\", \"true\") and RelationClaim(\"trevor\",\"IsBrotherOf\",\"becky\") and RelationClaim(\"becky\",\"IsSisterOf\",\"trevor\")", "expectedOutput": ""}, {"Line": 79, "Input": "\"The father of Kenisha, Kenneth, is having a meltdown.\"", "actualOutput": "RelationClaim(\"father\",\"IsA\",\"male\")\nRelationClaim(\"kenisha\",\"IsA\",\"daughter\")\nRelationClaim(\"kenneth\",\"IsA\",\"son\")\nRelationClaim(\"father\",\"HasProperty\",\"having a meltdown\")", "expectedOutput": ""}, {"Line": 80, "Input": "Ronald's new robot is so cool.", "actualOutput": "PropertyClaim(robot,\"IsNew\",True)\nPropertyClaim(robot,\"IsCool\",True)", "expectedOutput": ""}, {"Line": 81, "Input": "It is Ozmo.", "actualOutput": "RelationClaim(\"it\",\"IsA\",\"ozmo\")", "expectedOutput": ""}, {"Line": 82, "Input": "The book about cats is big.", "actualOutput": "RelationClaim(book,\"IsAbout\",cats)\nPropertyClaim(book,\"HasProperty\",big)", "expectedOutput": ""}, {"Line": 83, "Input": "The book about cats is orange.", "actualOutput": "RelationClaim(\"book\",\"isabout\",\"cat\")\nPropertyClaim(\"book\",\"HasProperty\",\"orange\")", "expectedOutput": ""}, {"Line": 84, "Input": "The book about dogs is small.", "actualOutput": "PropertyClaim(\"book about dogs\", \"HasProperty\", \"small\")\nRelationClaim(\"book about dogs\", \"IsAbout\", \"dogs\")", "expectedOutput": ""}, {"Line": 85, "Input": "The book about dogs is brown.", "actualOutput": "PropertyClaim(\"book_about_dogs\",\"HasProperty\",\"brown\")\nRelationClaim(\"book_about_dogs\",\"IsAbout\",\"dogs\")", "expectedOutput": ""}, {"Line": 86, "Input": "Jane has the book about cats.", "actualOutput": "PropertyClaim(jane, \"Has\", book_about_cats)\nRelationClaim(book_about_cats, \"IsAbout\", cats)", "expectedOutput": ""}, {"Line": 87, "Input": "Mike has the book about dogs.", "actualOutput": "RelationClaim(mike, \"Has\", book_about_dogs)\nPropertyClaim(book_about_dogs, \"IsAbout\", dog)\nPropertyClaim(book_about_dogs, \"HasProperty\", small)\nPropertyClaim(book_about_dogs, \"HasProperty\", brown)", "expectedOutput": ""}, {"Line": 88, "Input": "A large pot is hot.", "actualOutput": "PropertyClaim(\"large pot\",\"HasProperty\",\"hot\")", "expectedOutput": ""}, {"Line": 89, "Input": "A small pot is cold.", "actualOutput": "PropertyClaim(\"small pot\",\"HasProperty\",\"cold\")\nNegatedPropertyClaim(\"small pot\",\"HasProperty\",\"hot\")\nNegatedPropertyClaim(\"small pot\",\"HasProperty\",\"warm\")\nNegatedPropertyClaim(\"small pot\",\"HasProperty\",\"cool\")\nNegatedPropertyClaim(\"small pot\",\"HasProperty\",\"warmish\")\nNegatedPropertyClaim(\"small pot\",\"HasProperty\",\"lukewarm\")\nNegatedPropertyClaim(\"small pot\",\"HasProperty\",\"tepid\")\nNegatedPropertyClaim(\"small pot\",\"HasProperty\",\"hotter than room temperature\")\nNegatedPropertyClaim(\"small pot\",\"HasProperty\",\"warmer than room temperature\")\nNegatedPropertyClaim(\"small pot\",\"HasProperty\",\"cooler than room temperature\")\nNegatedPropertyClaim(\"small pot\",\"HasProperty\",\"coldish\")\nNegatedPropertyClaim(\"small pot\",\"HasProperty\",\"freezing\")\nNegatedPropertyClaim(\"small pot\",\"HasProperty\",\"icy\")\nNegatedPropertyClaim(\"small pot\",\"HasProperty\",\"frosty", "expectedOutput": ""}, {"Line": 90, "Input": "The hot pot has tea.", "actualOutput": "PropertyClaim(\"hot pot\",\"HasProperty\",\"tea\")", "expectedOutput": ""}, {"Line": 91, "Input": "The cold pot doesn't have tea.", "actualOutput": "NegatedPropertyClaim(small_pot,\"HasProperty\",tea)", "expectedOutput": ""}, {"Line": 92, "Input": "The nurse is very nice.", "actualOutput": "RelationClaim(nurse, \"IsA\", person)\nPropertyClaim(nurse, \"HasProperty\", nice)\nPropertyClaim(nurse, \"HasProperty\", very)", "expectedOutput": ""}, {"Line": 93, "Input": "Krista is the nurse.", "actualOutput": "RelationClaim(\"krista\",\"IsA\",\"nurse\")", "expectedOutput": ""}, {"Line": 94, "Input": "Harvey is the lawyer.", "actualOutput": "RelationClaim(harvey,\"IsA\",lawyer)", "expectedOutput": ""}, {"Line": 95, "Input": "The lawyer made his case.", "actualOutput": "RelationClaim(lawyer, \"Made\", case)", "expectedOutput": ""}, {"Line": 96, "Input": "rain falls directly from the sky.", "actualOutput": "RelationClaim(rain, \"FallsFrom\", sky)\nRelationClaim(rain, \"FallsDirectlyFrom\", sky)", "expectedOutput": ""}, {"Line": 97, "Input": "Lily and Charlie's vase is pricey.", "actualOutput": "PropertyClaim(vase,\"HasProperty\",pricey)\nRelationClaim(lily,\"Has\",vase)\nRelationClaim(charlie,\"Has\",vase)", "expectedOutput": ""}, {"Line": 98, "Input": "Uber will only pay for mid-size rental cars.", "actualOutput": "RelationClaim(uber, \"WillPayFor\", mid-size_rental_cars)\nNegatedRelationClaim(uber, \"WillPayFor\", full-size_rental_cars)\nNegatedRelationClaim(uber, \"WillPayFor\", luxury_rental_cars)", "expectedOutput": ""}, {"Line": 99, "Input": "Any type of claim against Yahoo will not be taken lightly.", "actualOutput": "NegatedRelationClaim(claim, \"Against\", yahoo) and NegatedPropertyClaim(claim, \"TakenLightly\", True)", "expectedOutput": ""}, {"Line": 100, "Input": "Children can touch any type of small mammals and Jon's reptiles.", "actualOutput": "RelationClaim(children, \"CanTouch\", small_mammals)\nRelationClaim(jon's_reptiles, \"CanBeTouchedBy\", children)", "expectedOutput": ""}, {"Line": 101, "Input": "Amazon will only give refunds for very specific types of defects.", "actualOutput": "PropertyClaim(\"amazon\",\"WillGive\",\"refunds\")\nRelationClaim(\"refunds\",\"For\",\"specific types of defects\")\nPropertyClaim(\"specific types of defects\",\"Are\",\"very specific\")\n", "expectedOutput": ""}, {"Line": 102, "Input": "Jill's dad is Dane.", "actualOutput": "RelationClaim(\"jill's dad\", \"IsA\", \"dane\")", "expectedOutput": ""}, {"Line": 103, "Input": "Jill is not home.", "actualOutput": "NegatedRelationClaim(\"jill\",\"IsA\",\"home\")", "expectedOutput": ""}, {"Line": 104, "Input": "Dane bought ice cream and gelato at the creamery.", "actualOutput": "RelationClaim(dane, \"bought\", ice_cream)\nRelationClaim(dane, \"bought\", gelato)\nRelationClaim(creamery, \"has\", ice_cream)\nRelationClaim(creamery, \"has\", gelato)", "expectedOutput": ""}, {"Line": 105, "Input": "Jim sold the bike because he was sick.", "actualOutput": "RelationClaim(jim, \"Sold\", bike)\nNegatedPropertyClaim(jim, \"Healthy\", None)\n", "expectedOutput": ""}, {"Line": 106, "Input": "\"in order for the police to catch the criminal, the police will have to investigate.\"", "actualOutput": "RelationClaim(police, \"Catch\", criminal)\nRelationClaim(police, \"Investigate\", None)", "expectedOutput": ""}, {"Line": 107, "Input": "Jim didn't attend due to his illness.", "actualOutput": "NegatedRelationClaim(jim, \"Attend\", due)\nPropertyClaim(jim, \"HasProperty\", illness)", "expectedOutput": ""}, {"Line": 108, "Input": "\"Johnny's singing has improved, thanks to his practicing and his voice coach.\"", "actualOutput": "PropertyClaim(\"Johnny's singing\", \"HasImproved\", \"thanks to his practicing and his voice coach\")\nRelationClaim(\"Johnny's singing\", \"IsA\", \"skill\")\nPropertyClaim(\"Johnny's practicing\", \"HasBenefit\", \"Johnny's singing\")\nPropertyClaim(\"Johnny's voice coach\", \"HasBenefit\", \"Johnny's singing\")", "expectedOutput": ""}, {"Line": 109, "Input": "\"Jane is going to try a stunt, so she wants to have some room.\"", "actualOutput": "RelationClaim(\"jane\",\"IsA\",\"person\")\nRelationClaim(\"jane\",\"WillTry\",\"stunt\")\nRelationClaim(\"jane\",\"WantsToHave\",\"room\")\nPropertyClaim(\"room\",\"HasProperty\",\"some\")", "expectedOutput": ""}, {"Line": 110, "Input": "Lara has 2 children.", "actualOutput": "PropertyClaim(\"lara\", \"HasProperty\", \"2 children\")", "expectedOutput": ""}, {"Line": 111, "Input": "Ella has 3 emails and a letter .", "actualOutput": "PropertyClaim(ella, \"HasProperty\", \"3 emails\")\nPropertyClaim(ella, \"HasProperty\", \"a letter\")", "expectedOutput": ""}, {"Line": 112, "Input": "George has 0 apples.", "actualOutput": "PropertyClaim(\"george\",\"HasProperty\",\"0\")", "expectedOutput": ""}, {"Line": 113, "Input": "George has a pile of sand.", "actualOutput": "PropertyClaim(\"george\",\"HasProperty\",\"pile of sand\")", "expectedOutput": ""}, {"Line": 114, "Input": "Alex's rope is 60 feet.", "actualOutput": "RelationClaim(\"alex's rope\",\"IsA\",\"rope\")\nPropertyClaim(\"alex's rope\",\"HasProperty\",\"60 feet\")\n", "expectedOutput": ""}, {"Line": 115, "Input": "Henry can buy a lot of chalk.", "actualOutput": "RelationClaim(henry, \"CanBuy\", lot_of_chalk)\nPropertyClaim(lot_of_chalk, \"HasProperty\", many)", "expectedOutput": ""}, {"Line": 116, "Input": "Henry's car is very hot.", "actualOutput": "PropertyClaim(\"henry's car\",\"HasProperty\",\"very hot\")", "expectedOutput": ""}, {"Line": 117, "Input": "Delia cooked the pasta with the boiler.", "actualOutput": "RelationClaim(delia, \"Cooked\", pasta)\nRelationClaim(pasta, \"CookedWith\", boiler)", "expectedOutput": ""}, {"Line": 118, "Input": "Delia drove the truck dangerously.", "actualOutput": "RelationClaim(delia, \"Drove\", truck)\nPropertyClaim(truck, \"HasProperty\", dangerous)", "expectedOutput": ""}, {"Line": 119, "Input": "Kim beautifully and gracefully danced.", "actualOutput": "RelationClaim(kim, \"Danced\", None)\nPropertyClaim(kim, \"IsBeautiful\", True)\nPropertyClaim(kim, \"IsGraceful\", True)", "expectedOutput": ""}, {"Line": 120, "Input": "\"George, Rodney, Robin, Ella and Owen's dogs are nice.\"", "actualOutput": "RelationClaim(dogs,\"Are\",nice)", "expectedOutput": ""}, {"Line": 121, "Input": "\"Delia bought a house, bikes, boats, planes and a car.\"", "actualOutput": "RelationClaim(delia, \"Bought\", house)\nRelationClaim(delia, \"Bought\", bikes)\nRelationClaim(delia, \"Bought\", boats)\nRelationClaim(delia, \"Bought\", planes)\nRelationClaim(delia, \"Bought\", car)", "expectedOutput": ""}, {"Line": 122, "Input": "\"Allison bought three cars, some ships and a lot of sweets.\"", "actualOutput": "PropertyClaim(allison,\"HasProperty\",car)\nPropertyClaim(allison,\"HasProperty\",car)\nPropertyClaim(allison,\"HasProperty\",car)\nPropertyClaim(allison,\"HasProperty\",ship)\nPropertyClaim(allison,\"HasProperty\",ship)\nPropertyClaim(allison,\"HasProperty\",ship)\nPropertyClaim(allison,\"HasProperty\",sweet)\nPropertyClaim(allison,\"HasProperty\",sweet)\nPropertyClaim(allison,\"HasProperty\",sweet)", "expectedOutput": ""}, {"Line": 123, "Input": "Paige and Henry like ships and mouses.", "actualOutput": "RelationClaim(\"paige\",\"Likes\",\"ship\")\nRelationClaim(\"henry\",\"Likes\",\"mouse\")", "expectedOutput": ""}, {"Line": 124, "Input": "Many apples and oranges were bought by Tom and Lara.", "actualOutput": "RelationClaim(\"apples\",\"WereBoughtBy\",\"tom\")\nRelationClaim(\"oranges\",\"WereBoughtBy\",\"tom\")\nRelationClaim(\"apples\",\"WereBoughtBy\",\"lara\")\nRelationClaim(\"oranges\",\"WereBoughtBy\",\"lara\")", "expectedOutput": ""}, {"Line": 125, "Input": "Lilies are completely edible and extremely sweet.", "actualOutput": "RelationClaim(\"lilies\",\"Are\",\"edible\")\nPropertyClaim(\"lilies\",\"HasProperty\",\"completely edible\")\nPropertyClaim(\"lilies\",\"HasProperty\",\"extremely sweet\")", "expectedOutput": ""}, {"Line": 126, "Input": "Owls from small dense forests are dangerous.", "actualOutput": "RelationClaim(owls, \"AreFrom\", small dense forests)\nPropertyClaim(owls, \"AreDangerous\", True)", "expectedOutput": ""}, {"Line": 127, "Input": "Gabe drinks hot coffee and cocoa.", "actualOutput": "RelationClaim(\"gabe\",\"drinks\",\"coffee\")\nRelationClaim(\"coffee\",\"IsA\",\"hot\")\nPropertyClaim(\"coffee\",\"HasProperty\",\"hot\")\nRelationClaim(\"gabe\",\"drinks\",\"cocoa\")\nNegatedPropertyClaim(\"cocoa\",\"HasProperty\",\"hot\")", "expectedOutput": ""}, {"Line": 128, "Input": "Ramon ran screaming.", "actualOutput": "RelationClaim(ramon, \"ran\", screaming)\nNegatedRelationClaim(ramon, \"walked\", screaming)\nNegatedPropertyClaim(ramon, \"hasProperty\", calm)\nRelationClaim(ramon, \"isA\", human)", "expectedOutput": ""}, {"Line": 129, "Input": "\"Kim read a book about the acidic, cold, hot and dry conditions of these environments.\"", "actualOutput": "RelationClaim(kim, \"Read\", book)\nPropertyClaim(book, \"HasProperty\", \"About the acidic, cold, hot and dry conditions of these environments\")", "expectedOutput": ""}, {"Line": 130, "Input": "Gio's dogs from Alesso and Chiara's mafia terrorize the elderly.", "actualOutput": "RelationClaim(dogs, \"AreFrom\", alesso)\nRelationClaim(mafia, \"Terrorize\", elderly)\nRelationClaim(dogs, \"Terrorize\", elderly)\nNegatedRelationClaim(mafia, \"AreFrom\", alesso)", "expectedOutput": ""}, {"Line": 131, "Input": "Henry is around the house.", "actualOutput": "RelationClaim(henry, \"IsAround\", house)", "expectedOutput": ""}, {"Line": 132, "Input": "Tom is around the house.", "actualOutput": "RelationClaim(\"tom\", \"IsAround\", \"house\")", "expectedOutput": ""}, {"Line": 133, "Input": "Lara likes Henry.", "actualOutput": "RelationClaim(lara, \"Likes\", henry)", "expectedOutput": ""}, {"Line": 134, "Input": "Henry hid the gold in the red cabinet.", "actualOutput": "RelationClaim(henry, \"Hide\", gold)\nRelationClaim(gold, \"IsA\", valuable)\nRelationClaim(valuable, \"IsA\", object)\nRelationClaim(red cabinet, \"IsA\", cabinet)\nRelationClaim(cabinet, \"HasProperty\", red)", "expectedOutput": ""}, {"Line": 135, "Input": "The red cabinet is on the ship.", "actualOutput": "RelationClaim(red_cabinet,\"IsOn\",ship)", "expectedOutput": ""}, {"Line": 136, "Input": "Henry hid the diamond in the blue cabinet on the ship.", "actualOutput": "RelationClaim(\"henry\",\"hid\",\"diamond\")\nRelationClaim(\"diamond\",\"isIn\",\"blue_cabinet\")\nRelationClaim(\"blue_cabinet\",\"isOn\",\"ship\")", "expectedOutput": ""}, {"Line": 137, "Input": "The green bus is rolling.", "actualOutput": "RelationClaim(green bus, \"IsA\", bus)\nPropertyClaim(green bus, \"HasProperty\", green)\nRelationClaim(green bus, \"IsRolling\", true)", "expectedOutput": ""}, {"Line": 138, "Input": "Persimmons are a type of tree fruit.", "actualOutput": "RelationClaim(\"persimmons\",\"IsA\",\"tree fruit\")", "expectedOutput": ""}, {"Line": 139, "Input": "\"The three sources of European Union law are primary law, secondary law and supplementary law.\"", "actualOutput": "RelationClaim(\"three sources\",\"Are\", \"primary law, secondary law and supplementary law\")", "expectedOutput": ""}, {"Line": 140, "Input": "Arnold Smith is the mechanic from the body shop.", "actualOutput": "RelationClaim(\"arnold smith\",\"IsA\",\"mechanic\")\nRelationClaim(\"mechanic\",\"WorksAt\",\"body shop\")\nRelationClaim(\"body shop\",\"HasEmployee\",\"arnold smith\")", "expectedOutput": ""}, {"Line": 141, "Input": "Arnold Grohl is the drummer from the grunge band.", "actualOutput": "RelationClaim(arnold_grohl, \"IsA\", drummer)\nRelationClaim(drummer, \"IsFrom\", grunge_band)", "expectedOutput": ""}, {"Line": 142, "Input": "Sally enjoys swimming and running marathons.", "actualOutput": "RelationClaim(sally, \"enjoys\", swimming)\nRelationClaim(sally, \"enjoys\", running_marathons)", "expectedOutput": ""}, {"Line": 143, "Input": "Matthew wants to send a postcard and a package.", "actualOutput": "RelationClaim(matthew, \"Wants\", send)\nRelationClaim(send, \"Sends\", postcard)\nRelationClaim(send, \"Sends\", package)", "expectedOutput": ""}, {"Line": 144, "Input": "the woman who was on the stage saw Sally.", "actualOutput": "RelationClaim(woman, \"WasOn\", stage)\nRelationClaim(woman, \"Saw\", sally)", "expectedOutput": ""}, {"Line": 145, "Input": "the dancer who Andrew saw also saw Steve.", "actualOutput": "RelationClaim(dancer, \"Saw\", andrew)\nRelationClaim(dancer, \"Saw\", steve)", "expectedOutput": ""}, {"Line": 146, "Input": "\"Merlin, my father the physician, is very smart.\"", "actualOutput": "RelationClaim(\"merlin\",\"IsA\",\"physician\")\nPropertyClaim(\"merlin\",\"HasProperty\",\"smart\")", "expectedOutput": ""}, {"Line": 147, "Input": "\"Janet and Kramer, journalists, reported the news.\"", "actualOutput": "RelationClaim(janet, \"IsA\", journalist)\nRelationClaim(kramer, \"IsA\", journalist)\nRelationClaim(janet, \"Reported\", news)\nRelationClaim(kramer, \"Reported\", news)", "expectedOutput": ""}, {"Line": 148, "Input": "\"Barry and Larry, the peanuts, were assaulted.\"", "actualOutput": "RelationClaim(\"barry\",\"WereAssaulted\", \"peanuts\")\nRelationClaim(\"larry\",\"WereAssaulted\", \"peanuts\")\nPropertyClaim(\"peanuts\",\"HasProperty\",\"assaulted\")\nRelationClaim(\"barry\",\"IsA\",\"person\")\nRelationClaim(\"larry\",\"IsA\",\"person\")", "expectedOutput": ""}, {"Line": 149, "Input": "\"Priscilla likes Harry and Ronald, the captain.\"", "actualOutput": "RelationClaim(priscilla, \"Likes\", harry)\nRelationClaim(priscilla, \"Likes\", ronald)\nRelationClaim(priscilla, \"Likes\", captain)\nNegatedRelationClaim(priscilla, \"Likes\", peanut)", "expectedOutput": ""}, {"Line": 150, "Input": "\"John, the janitor, and Mary dated.\"", "actualOutput": "RelationClaim(\"john\",\"dated\",\"mary\")\nNegatedRelationClaim(\"john\",\"IsA\",\"janitor\")\nNegatedRelationClaim(\"mary\",\"IsA\",\"janitor\")", "expectedOutput": ""}, {"Line": 151, "Input": "\"Phoebe and Rita, from Panama, the singers, saw the accident.\"", "actualOutput": "RelationClaim(\"phoebe\",\"saw\",\"accident\")\nRelationClaim(\"rita\",\"saw\",\"accident\")\nRelationClaim(\"phoebe\",\"IsA\",\"singer\")\nRelationClaim(\"rita\",\"IsA\",\"singer\")\nPropertyClaim(\"phoebe\",\"HasProperty\",\"from panama\")\nPropertyClaim(\"rita\",\"HasProperty\",\"from panama\")", "expectedOutput": ""}, {"Line": 152, "Input": "\"the man with Ernie, Carlton, bought a turtle.\"", "actualOutput": "RelationClaim(man, \"HasWith\", ernie)\nRelationClaim(man, \"HasWith\", carlton)\nRelationClaim(man, \"Bought\", turtle)", "expectedOutput": ""}, {"Line": 153, "Input": "\"Alex can choose between (i) the cat, and (ii) the dog.\"", "actualOutput": "RelationClaim(alex, \"CanChooseBetween\", cat)\nRelationClaim(alex, \"CanChooseBetween\", dog)", "expectedOutput": ""}, {"Line": 154, "Input": "The store the lady shopped at is closed.", "actualOutput": "RelationClaim(store, \"IsA\", building)\nRelationClaim(lady, \"ShoppedAt\", store)\nNegatedRelationClaim(store, \"IsOpen\", None)", "expectedOutput": ""}, {"Line": 155, "Input": "The old woman given cats arrived at the vet.", "actualOutput": "RelationClaim(woman, \"IsA\", old)\nRelationClaim(woman, \"Given\", cats)\nRelationClaim(woman, \"ArrivedAt\", vet)\nPropertyClaim(woman, \"HasProperty\", old)\nPropertyClaim(cats, \"HasProperty\", given)\nPropertyClaim(vet, \"HasProperty\", arrived)\nNegatedRelationClaim(cats, \"ArrivedAt\", vet) #False because it is not mentioned that the cats arrived at the vet.", "expectedOutput": ""}, {"Line": 156, "Input": "Arnold saw the park where Phil ate bananas.", "actualOutput": "RelationClaim(arnold, \"Saw\", park)\nRelationClaim(phil, \"Ate\", bananas)\nRelationClaim(park, \"IsA\", location)", "expectedOutput": ""}, {"Line": 157, "Input": "Jackie saw Alisha from Illinois and the beach who likes volleyball.", "actualOutput": "RelationClaim(jackie,\"Saw\",alisha)\nRelationClaim(alisha,\"From\",illinois)\nRelationClaim(alisha,\"Likes\",volleyball)\nRelationClaim(beach,\"Likes\",volleyball)", "expectedOutput": ""}, {"Line": 158, "Input": "The memo about vacation said Valentine's Day will be added.", "actualOutput": "RelationClaim(memo, \"About\", vacation)\nRelationClaim(memo, \"Said\", valentines_day)\nRelationClaim(valentines_day, \"WillBeAddedTo\", vacation)", "expectedOutput": ""}, {"Line": 159, "Input": "\"Ann must hurry, otherwise, the train will leave without her.\"", "actualOutput": "RelationClaim(ann, \"MustHurry\", train)\nNegatedRelationClaim(train, \"LeaveWithout\", ann)", "expectedOutput": ""}, {"Line": 160, "Input": "\"Doreen has a main camera, the Rolleiflex.\"", "actualOutput": "PropertyClaim(\"doreen\",\"HasProperty\",\"main camera\")\nRelationClaim(\"main camera\",\"IsA\",\"rolleiflex\")", "expectedOutput": ""}, {"Line": 161, "Input": "Anita's favorite food is soup dumplings.", "actualOutput": "PropertyClaim(\"anita\",\"HasFavoriteFood\",\"soup dumplings\")\nRelationClaim(\"soup dumplings\",\"IsA\",\"food\")", "expectedOutput": ""}, {"Line": 162, "Input": "The winner is a pilot.", "actualOutput": "RelationClaim(winner, \"IsA\", pilot)", "expectedOutput": ""}, {"Line": 163, "Input": "Jack is the winner.", "actualOutput": "RelationClaim(\"jack\",\"IsA\",\"winner\")", "expectedOutput": ""}, {"Line": 164, "Input": "Emily is the pilot I'm talking about.", "actualOutput": "RelationClaim(\"emily\",\"IsA\",\"pilot\")", "expectedOutput": ""}, {"Line": 165, "Input": "The blue truck is the truck inside the garage.", "actualOutput": "RelationClaim(blue truck, \"IsA\", truck)\nRelationClaim(truck, \"IsInside\", garage)", "expectedOutput": ""}, {"Line": 166, "Input": "The truck on the street is the green truck.", "actualOutput": "RelationClaim(truck,\"IsA\",vehicle)\nRelationClaim(truck,\"IsOn\",street)\nPropertyClaim(truck,\"Color\",\"Green\")", "expectedOutput": ""}, {"Line": 167, "Input": "Charles is Ray's new turtle.", "actualOutput": "RelationClaim(\"charles\",\"IsA\",\"person\")\nRelationClaim(\"ray\",\"IsA\",\"person\")\nRelationClaim(\"turtle\",\"IsA\",\"animal\")\nRelationClaim(\"charles\",\"new\", \"turtle\")\nRelationClaim(\"charles\",\"owns\",\"turtle\")", "expectedOutput": ""}, {"Line": 168, "Input": "Devin's car's top speed is 200 mph.", "actualOutput": "PropertyClaim(\"Devin's car\",\"HasProperty\",\"Top speed is 200 mph\")", "expectedOutput": ""}, {"Line": 169, "Input": "Leland's car's top speed is 185 mph.", "actualOutput": "RelationClaim(car, \"HasOwner\", leland)\nPropertyClaim(car, \"HasTopSpeed\", \"185 mph\")", "expectedOutput": ""}, {"Line": 170, "Input": "Carol's car's top speed is 180 mph.", "actualOutput": "PropertyClaim(\"carol's car\",\"HasTopSpeed\",\"180 mph\")", "expectedOutput": ""}, {"Line": 171, "Input": "Ken's car's top speed is 175 mph.", "actualOutput": "PropertyClaim(\"car's top speed\",\"Is\", \"175 mph\")\nRelationClaim(\"car\",\"BelongsTo\",\"ken\")", "expectedOutput": ""}, {"Line": 172, "Input": "Owne's car's top speed is 160 mph.", "actualOutput": "PropertyClaim(NegatedRelationClaim(\"car\",\"HasOwner\",\"owner\"),\"HasTopSpeed\",\"160_mph\")", "expectedOutput": ""}, {"Line": 173, "Input": "Carla's car's top speed is 140 mph.", "actualOutput": "PropertyClaim(\"carla's car\",\"HasTopSpeed\",\"140 mph\")", "expectedOutput": ""}, {"Line": 174, "Input": "Kristina's car's top speed is 130 mph.", "actualOutput": "PropertyClaim(\"kristina's car\",\"HasTopSpeed\",\"130 mph\")", "expectedOutput": ""}, {"Line": 175, "Input": "Robert's sister's cat Toby is at the vet because he needs some shots.", "actualOutput": "PropertyClaim(cat,\"BelongsTo\",robert's_sister)\nPropertyClaim(toby,\"BelongsTo\",cat)\nRelationClaim(toby,\"IsAt\",vet)\nPropertyClaim(toby,\"Needs\",shots)", "expectedOutput": ""}, {"Line": 176, "Input": "Robert's nickname is Rob.", "actualOutput": "RelationClaim(\"robert\",\"HasNickname\",\"rob\")", "expectedOutput": ""}, {"Line": 177, "Input": "Robert is Gina's brother.", "actualOutput": "RelationClaim(\"robert\",\"IsA\",\"brother\")\nRelationClaim(\"robert\",\"IsRelatedTo\",\"gina\")\nNegatedRelationClaim(\"gina\",\"IsA\",\"brother\")", "expectedOutput": ""}, {"Line": 178, "Input": "Toby is friendly.", "actualOutput": "PropertyClaim(\"toby\",\"HasProperty\",\"friendly\")", "expectedOutput": ""}, {"Line": 179, "Input": "Mammals are warm blooded.", "actualOutput": "RelationClaim(\"mammals\",\"Are\",\"warm blooded\")", "expectedOutput": ""}, {"Line": 180, "Input": "\"Paul, Alice's primary doctor, is cool.\"", "actualOutput": "PropertyClaim(\"paul\",\"IsCool\",True)", "expectedOutput": ""}, {"Line": 181, "Input": "Alice's new doctor is Kathy.", "actualOutput": "RelationClaim(alice, \"HasDoctor\", kathy)", "expectedOutput": ""}, {"Line": 182, "Input": "Alice's cool doctor is accepting new clients.", "actualOutput": "PropertyClaim(doctor, \"HasProperty\", cool)\nRelationClaim(alice, \"HasDoctor\", doctor)\nRelationClaim(doctor, \"Accepts\", new_clients)", "expectedOutput": ""}, {"Line": 183, "Input": "Sofia's daughter Courtney wants mango which is her favorite snack.", "actualOutput": "PropertyClaim(\"courtney\",\"HasProperty\",\"favorite\")\nRelationClaim(\"courtney\",\"IsA\",\"daughter\")\nRelationClaim(\"sofia\",\"IsA\",\"mother\")\nRelationClaim(\"mango\",\"IsA\",\"snack\")\nRelationClaim(\"courtney\",\"Wants\",\"mango\")", "expectedOutput": ""}, {"Line": 184, "Input": "Sofia saw that the mango was rotten so she threw it away.", "actualOutput": "NegatedPropertyClaim(mango,\"HasProperty\",fresh)\nRelationClaim(sofia,saw,mango)\nPropertyClaim(mango,\"HasProperty\",rotten)\nRelationClaim(sofia,threw,mango)", "expectedOutput": ""}, {"Line": 185, "Input": "Sofia got her daughter some chips instead.", "actualOutput": "RelationClaim(sofia, \"Got\", chips)\nRelationClaim(daughter, \"HasProperty\", favorite)\nNegatedRelationClaim(sofia, \"Got\", daughter)\nNegatedPropertyClaim(chips, \"HasProperty\", rotten)", "expectedOutput": ""}, {"Line": 186, "Input": "Westley gets that success requires hard work and passionate determination.", "actualOutput": "RelationClaim(westley, \"Gets\", success)\nRelationClaim(success, \"Requires\", hard_work)\nRelationClaim(success, \"Requires\", passionate_determination)", "expectedOutput": ""}, {"Line": 187, "Input": "\"Luckily, he got them from his parents.\"", "actualOutput": "NegatedRelationClaim(he,get,parents) -> False\nRelationClaim(parents,have,them) -> True", "expectedOutput": ""}, {"Line": 188, "Input": "The race is challenging.", "actualOutput": "RelationClaim(race, \"IsA\", challenge)", "expectedOutput": ""}, {"Line": 189, "Input": "The boys go for it.", "actualOutput": "RelationClaim(boys, \"GoFor\", it)", "expectedOutput": ""}, {"Line": 190, "Input": "In 2017 Elijah went to Russia and Brazil.", "actualOutput": "RelationClaim(Elijah, \"WentTo\", Russia)\nRelationClaim(Elijah, \"WentTo\", Brazil)", "expectedOutput": ""}, {"Line": 191, "Input": "Jenny went to Reed College.", "actualOutput": "RelationClaim(jenny, \"wentTo\", reed_college)", "expectedOutput": ""}, {"Line": 192, "Input": "Reed College is a school.", "actualOutput": "RelationClaim(\"reed college\",\"IsA\",\"school\")", "expectedOutput": ""}, {"Line": 193, "Input": "Alexa is more rigid than Aigo.", "actualOutput": "RelationClaim(\"alexa\",\"IsMoreRigidThan\",\"aigo\")", "expectedOutput": ""}, {"Line": 194, "Input": "Aiden is having chicken for dinner with Marcy on Saturday.", "actualOutput": "RelationClaim(aiden, \"HasActivity\", \"having chicken for dinner with marcy on saturday\")\nRelationClaim(\"having chicken for dinner with marcy on saturday\", \"OccursOn\", saturday)\nRelationClaim(\"having chicken for dinner with marcy on saturday\", \"Involves\", chicken)\nRelationClaim(\"having chicken for dinner with marcy on saturday\", \"Involves\", marcy)", "expectedOutput": ""}, {"Line": 195, "Input": "Aiden is having fish for dinner on Sunday with potatoes with Rob.", "actualOutput": "PropertyClaim(\"aiden\", \"HasActivity\", \"having_fish_for_dinner_with_potatoes_with_rob\")\nRelationClaim(\"having_fish_for_dinner_with_potatoes_with_rob\", \"OccursOn\", \"sunday\")\nPropertyClaim(\"having_fish_for_dinner_with_potatoes_with_rob\", \"Involves\", \"fish\")\nPropertyClaim(\"having_fish_for_dinner_with_potatoes_with_rob\", \"Involves\", \"potatoes\")\nPropertyClaim(\"having_fish_for_dinner_with_potatoes_with_rob\", \"Involves\", \"rob\")", "expectedOutput": ""}, {"Line": 196, "Input": "John ate pasta with meatballs with a fork and spoon with Mary.", "actualOutput": "RelationClaim(john, \"Ate\", pasta)\nRelationClaim(pasta, \"HasProperty\", meatballs)\nRelationClaim(john, \"Used\", fork)\nRelationClaim(john, \"Used\", spoon)\nRelationClaim(john, \"AteWith\", mary)", "expectedOutput": ""}, {"Line": 197, "Input": "\"An email's parts are a sender, a recipient, a subject, and a message.\"", "actualOutput": "RelationClaim(\"email\",\"HasPart\",\"sender\")\nRelationClaim(\"email\",\"HasPart\",\"recipient\")\nRelationClaim(\"email\",\"HasPart\",\"subject\")\nRelationClaim(\"email\",\"HasPart\",\"message\")", "expectedOutput": ""}, {"Line": 198, "Input": "I got a new email.", "actualOutput": "RelationClaim(\"i\",\"got\",\"new email\")", "expectedOutput": ""}, {"Line": 199, "Input": "farms are important.", "actualOutput": "RelationClaim(farms, \"Are\", important)", "expectedOutput": ""}, {"Line": 200, "Input": "farms are common in Texas.", "actualOutput": "RelationClaim(farms, \"AreCommonIn\", texas)", "expectedOutput": ""}, {"Line": 201, "Input": "The farm for vegetables is small.", "actualOutput": "PropertyClaim(\"farm for vegetables\",\"HasProperty\",\"small\")", "expectedOutput": ""}, {"Line": 202, "Input": "Isabella has a big farm.", "actualOutput": "PropertyClaim(\"isabella\",\"HasProperty\",\"big\")\nRelationClaim(\"isabella\",\"Has\",\"farm\")", "expectedOutput": ""}, {"Line": 203, "Input": "Rogelio watched 5 movies and the first was fun.", "actualOutput": "RelationClaim(rogelio, \"Watched\", 5)\nRelationClaim(5, \"IsA\", \"Movie\")\nRelationClaim(5, \"IsFirst\", True)\nPropertyClaim(5, \"HasProperty\", \"Fun\")", "expectedOutput": ""}, {"Line": 204, "Input": "The association wrote 5 papers and the first got published.", "actualOutput": "RelationClaim(association, \"Wrote\", papers)\nRelationClaim(papers, \"Include\", 5)\nRelationClaim(papers, \"Order\", first)\nRelationClaim(first, \"Publish\", published)", "expectedOutput": ""}, {"Line": 205, "Input": "Xena ordered a small drink and Billson ordered a large.", "actualOutput": "RelationClaim(xena, \"Ordered\", drink)\nPropertyClaim(drink, \"HasProperty\", small)\nRelationClaim(billson, \"Ordered\", drink)\nPropertyClaim(drink, \"HasProperty\", large)", "expectedOutput": ""}, {"Line": 206, "Input": "Vera called up three lawyers and fired a few.", "actualOutput": "RelationClaim(vera, \"CalledUp\", three_lawyers)\nRelationClaim(vera, \"Fired\", a_few)", "expectedOutput": ""}, {"Line": 207, "Input": "Bibi solved 10 cases and dropped a few.", "actualOutput": "RelationClaim(bibi,\"Solved\",10)\nNegatedRelationClaim(bibi,\"Dropped\",\"Cases\")\nPropertyClaim(\"Cases\",\"HasProperty\",\"Solved\")", "expectedOutput": ""}, {"Line": 208, "Input": "Larkin made a dozen arguments and Carl made two.", "actualOutput": "RelationClaim(larkin, \"Made\", dozen)\nRelationClaim(carl, \"Made\", two)", "expectedOutput": ""}, {"Line": 209, "Input": "Dogs are friendly.", "actualOutput": "RelationClaim(\"dogs\",\"Are\",\"friendly\")", "expectedOutput": ""}, {"Line": 210, "Input": "Robert's dog isn't friendly.", "actualOutput": "NegatedPropertyClaim(\"robert's dog\",\"HasProperty\",\"friendly\")", "expectedOutput": ""}, {"Line": 211, "Input": "Sam walked her own dog.", "actualOutput": "RelationClaim(sam, \"Walked\", dog)\nRelationClaim(dog, \"IsA\", friendly)", "expectedOutput": ""}, {"Line": 212, "Input": "The whale is owned by San Diego's zoo and Santa Clarita's.", "actualOutput": "RelationClaim(\"whale\",\"IsOwnedBy\",\"zoo of San Diego\")\nRelationClaim(\"whale\",\"IsOwnedBy\",\"zoo of Santa Clarita\")", "expectedOutput": ""}, {"Line": 213, "Input": "Jenna's father talked to her.", "actualOutput": "RelationClaim(father, \"TalkedTo\", jenna)\nPropertyClaim(jenna, \"HasProperty\", female)", "expectedOutput": ""}, {"Line": 214, "Input": "Sandra's mother talked to herself.", "actualOutput": "PropertyClaim(\"Sandra's mother\",\"HasProperty\",\"talkative\")\nRelationClaim(\"Sandra's mother\",\"talked to\",\"herself\")", "expectedOutput": ""}, {"Line": 215, "Input": "Samuel cleaned the medal so that it would shine.", "actualOutput": "RelationClaim(\"samuel\",\"cleaned\",\"medal\")\nNegatedPropertyClaim(\"medal\",\"dirty\",None)\nPropertyClaim(\"medal\",\"shiny\",None)", "expectedOutput": ""}, {"Line": 216, "Input": "Igor is male.", "actualOutput": "RelationClaim(\"igor\",\"IsA\",\"male\")", "expectedOutput": ""}, {"Line": 217, "Input": "Esma is a girl.", "actualOutput": "RelationClaim(\"esma\",\"IsA\",\"girl\")", "expectedOutput": ""}, {"Line": 218, "Input": "Igor threatened Esma.", "actualOutput": "RelationClaim(igor, \"Threatened\", esma)", "expectedOutput": ""}, {"Line": 219, "Input": "Esma shot him.", "actualOutput": "RelationClaim(esma,\"Shot\",him)", "expectedOutput": ""}, {"Line": 220, "Input": "Esma's mother fed her.", "actualOutput": "PropertyClaim(\"esma's mother\",\"HasProperty\",\"fed her\")", "expectedOutput": ""}, {"Line": 221, "Input": "Lydia felt sick.", "actualOutput": "PropertyClaim(\"lydia\",\"HasProperty\",\"sick\")", "expectedOutput": ""}, {"Line": 222, "Input": "She sent herself to the hospital.", "actualOutput": "RelationClaim(she, \"Sent\", herself)\nNegatedRelationClaim(she, \"Sent\", someone_else)\nNegatedRelationClaim(she, \"Received\", herself)\nNegatedRelationClaim(she, \"Received\", someone_else)\nNegatedRelationClaim(herself, \"IsA\", doctor)\nNegatedRelationClaim(herself, \"IsA\", nurse)\nNegatedPropertyClaim(herself, \"HasProperty\", healthy)\nPropertyClaim(hospital, \"HasProperty\", medical)\nRelationClaim(herself, \"Visited\", hospital)", "expectedOutput": ""}, {"Line": 223, "Input": "Jewels are pretty.", "actualOutput": "RelationClaim(jewels,\"Are\",pretty)", "expectedOutput": ""}, {"Line": 224, "Input": "The jewels are stolen by the heirs.", "actualOutput": "NegatedRelationClaim(jewels,\"Are\",stolen)\nNegatedRelationClaim(heirs,\"Stole\",jewels)", "expectedOutput": ""}, {"Line": 225, "Input": "They are bright and pretty.", "actualOutput": "PropertyClaim(\"they\",\"HasProperty\",\"bright\")\nPropertyClaim(\"they\",\"HasProperty\",\"pretty\")", "expectedOutput": ""}, {"Line": 226, "Input": "The girls wanted the flowers.", "actualOutput": "RelationClaim(\"girls\",\"wanted\",\"flowers\")", "expectedOutput": ""}, {"Line": 227, "Input": "They bought them.", "actualOutput": "RelationClaim(they, \"Buy\", them)", "expectedOutput": ""}, {"Line": 228, "Input": "The door is locked because Mort locked it.", "actualOutput": "RelationClaim(door, \"IsA\", door)\nRelationClaim(door, \"IsLocked\", true)\nRelationClaim(mort, \"Locked\", door)\nNegatedRelationClaim(door, \"IsLocked\", false)", "expectedOutput": ""}, {"Line": 229, "Input": "Charles ate at the park and Mimi met him there.", "actualOutput": "RelationClaim(charles,\"AteAt\",park)\nRelationClaim(mimi,\"Met\",him)", "expectedOutput": ""}, {"Line": 230, "Input": "Archie waited eagerly for the reply", "actualOutput": "RelationClaim(archie,\"WaitedFor\",reply)", "expectedOutput": ""}, {"Line": 231, "Input": "It was late.", "actualOutput": "PropertyClaim(\"it\",\"HasProperty\",\"late\")", "expectedOutput": ""}, {"Line": 232, "Input": "Archie can't wait for the celebration.", "actualOutput": "NegatedRelationClaim(archie,\"CanWaitFor\",celebration)", "expectedOutput": ""}, {"Line": 233, "Input": "It's with Jane.", "actualOutput": "PropertyClaim(\"it\",\"IsWith\",\"jane\")", "expectedOutput": ""}, {"Line": 234, "Input": "Molly's clock ticked throughout night.", "actualOutput": "PropertyClaim(\"Molly's clock\",\"Ticks throughout\",\"Night\")", "expectedOutput": ""}, {"Line": 235, "Input": "It drove her crazy.", "actualOutput": "RelationClaim(it,\"Drove\",\"Her\")\nPropertyClaim(Her,\"HasProperty\",\"Crazy\")", "expectedOutput": ""}, {"Line": 236, "Input": "Marty got a compliment.", "actualOutput": "RelationClaim(marty, \"Get\", compliment)\nNegatedRelationClaim(marty, \"Lose\", compliment) # Marty did not lose the compliment\nPropertyClaim(compliment, \"IsA\", positive) # The compliment is positive\nNegatedPropertyClaim(compliment, \"IsA\", negative) # The compliment is not negative", "expectedOutput": ""}, {"Line": 237, "Input": "It made him feel good.", "actualOutput": "PropertyClaim(\"it\",\"MakesFeel\",\"good\")\nRelationClaim(\"it\",\"Causes\",\"him\")\nRelationClaim(\"him\",\"Feels\",\"good\")", "expectedOutput": ""}, {"Line": 238, "Input": "I am studying in the library.", "actualOutput": "RelationClaim(\"I\",\"IsStudyingIn\",\"Library\")\nRelationClaim(\"I\",\"IsA\",\"Student\")\nPropertyClaim(\"Library\",\"HasProperty\",\"Quiet\")\nRelationClaim(\"Library\",\"IsA\",\"Place\")", "expectedOutput": ""}, {"Line": 239, "Input": "\"Pyotr was studying there, too.\"", "actualOutput": "RelationClaim(\"pyotr\",\"IsA\",\"student\")\nRelationClaim(\"pyotr\",\"IsStudying\",\"there\")\nNegatedPropertyClaim(\"pyotr\",\"HasProperty\",\"lazy\")\nRelationClaim(\"pyotr\",\"IsAlsoStudying\",\"there\")\nPropertyClaim(\"there\",\"IsQuiet\",True)", "expectedOutput": ""}, {"Line": 240, "Input": "The students have their books.", "actualOutput": "RelationClaim(students, \"Have\", books)", "expectedOutput": ""}, {"Line": 241, "Input": "They have many pages.", "actualOutput": "PropertyClaim(\"they\",\"HaveProperty\",\"many pages\")", "expectedOutput": ""}, {"Line": 242, "Input": "Kristopher's cat is brown; it likes pickles.", "actualOutput": "RelationClaim(cat,\"BelongsTo\",kristopher)\nPropertyClaim(cat,\"HasColor\",brown)\nRelationClaim(cat,\"Likes\",pickles)", "expectedOutput": ""}, {"Line": 243, "Input": "Glen ate a good cake with chocolate.", "actualOutput": "RelationClaim(\"glen\",\"ate\",\"cake\")\nPropertyClaim(\"cake\",\"HasProperty\",\"good\")\nRelationClaim(\"cake\",\"With\",\"chocolate\")", "expectedOutput": ""}, {"Line": 244, "Input": "Glen ate a bad sandwich with cheese.", "actualOutput": "RelationClaim(\"glen\",\"ate\",\"sandwich\")\nNegatedPropertyClaim(\"sandwich\",\"HasProperty\",\"good\")\nPropertyClaim(\"sandwich\",\"HasProperty\",\"bad\")\nPropertyClaim(\"sandwich\",\"HasProperty\",\"with cheese\")", "expectedOutput": ""}, {"Line": 245, "Input": "Tigger is a pet.", "actualOutput": "RelationClaim(\"tigger\",\"IsA\",\"pet\")", "expectedOutput": ""}, {"Line": 246, "Input": "Tigger needs to get washed because Tigger is dirty.", "actualOutput": "NegatedPropertyClaim(\"tigger\",\"HasProperty\",\"clean\")\nRelationClaim(\"tigger\",\"Needs\",\"wash\")\nPropertyClaim(\"tigger\",\"HasProperty\",\"dirty\")", "expectedOutput": ""}, {"Line": 247, "Input": "I'm taking care of Milly's green car.", "actualOutput": "RelationClaim(I, \"TakeCareOf\", car)\nRelationClaim(car, \"HasColor\", green)\nRelationClaim(car, \"BelongsTo\", milly)", "expectedOutput": ""}, {"Line": 248, "Input": "I saw Deanna's purple lamp.", "actualOutput": "PropertyClaim(lamp, \"HasColor\", purple)\nRelationClaim(i, \"Saw\", lamp)\nPropertyClaim(lamp, \"BelongsTo\", deanna)", "expectedOutput": ""}, {"Line": 249, "Input": "Yahoo (YHOO) and Microsoft (MSFT) decided to push back the deadline to renegotiate their 10-year search deal by about a month.", "actualOutput": "RelationClaim(yhoo, \"DecidedToPushBack\", deadline)\nRelationClaim(microsoft, \"DecidedToPushBack\", deadline)\nRelationClaim(yhoo, \"Renegotiate\", search_deal)\nRelationClaim(microsoft, \"Renegotiate\", search_deal)\nRelationClaim(search_deal, \"HasDuration\", 10_years)\nRelationClaim(deadline, \"HasBeenPushedBackBy\", 1_month)", "expectedOutput": ""}, {"Line": 250, "Input": "The tech giants joined forces in 2010 to better compete against Google (GOOG).", "actualOutput": "NegatedRelationClaim(tech_giants, \"JoinForces\", goog)\nRelationClaim(tech_giants, \"JoinForces\", better_compete_against_google)\nNegatedRelationClaim(tech_giants, \"CompeteAgainst\", goog)", "expectedOutput": ""}, {"Line": 251, "Input": "Yahoo's CEO Marissa Mayer has expressed her dissatisfaction with the terms of the partnership.", "actualOutput": "NegatedRelationClaim(marissa_mayer, \"Expressed\", dissatisfaction)\nRelationClaim(yahoo_ceo, \"HasProperty\", dissatisfaction)\nNegatedRelationClaim(yahoo_ceo, \"HasProperty\", satisfaction)\nRelationClaim(yahoo_ceo, \"IsA\", CEO)\nRelationClaim(yahoo, \"IsA\", company)\nRelationClaim(partnership, \"HasProperty\", terms)\nNegatedRelationClaim(partnership, \"HasProperty\", dissatisfaction)", "expectedOutput": ""}, {"Line": 252, "Input": "\"Verallia, which manufactures glass bottles and jars and is the main supplier of bottles for France's champagne and cognac industries, generated 2.39 billion euros in sales and 230 million euros in operating income last year.\"", "actualOutput": "RelationClaim(Verallia, \"Manufactures\", Glass bottles and jars)\nRelationClaim(Verallia, \"IsMainSupplierOf\", Bottles for France's champagne and cognac industries)\nPropertyClaim(Verallia, \"GeneratedSalesOf\", 2.39 billion euros)\nPropertyClaim(Verallia, \"GeneratedOperatingIncomeOf\", 230 million euros)", "expectedOutput": ""}, {"Line": 253, "Input": "\"It has 47 plants in 13 countries and employs nearly 10,000 people.\"", "actualOutput": "Plant hasproperty number 47. Country hasproperty number 13. Company employ number 10000 people.", "expectedOutput": ""}, {"Line": 254, "Input": "Jo Jo will only pay for charges billed by timekeepers approved by inside counsel.", "actualOutput": "NegatedRelationClaim(jo, \"PayFor\", charges)\nRelationClaim(charges, \"BilledBy\", timekeepers)\nRelationClaim(timekeepers, \"ApprovedBy\", inside_counsel)", "expectedOutput": ""}, {"Line": 255, "Input": "\"Jo Jo requires that outside counsel utilize the task, activity and expense codes.\"", "actualOutput": "RelationClaim(jo,\"Requires\",outside_counsel)\nRelationClaim(outside_counsel,\"Utilize\",task)\nRelationClaim(outside_counsel,\"Utilize\",activity)\nRelationClaim(outside_counsel,\"Utilize\",expense_codes)", "expectedOutput": ""}, {"Line": 256, "Input": "Jo Jo will not pay for more than one attorney to attend a deposition.", "actualOutput": "NegatedRelationClaim(jo,\"PayFor\",attorney)\nRelationClaim(jo,\"Attend\",deposition)\nPropertyClaim(jo,\"MaximumNumber\",1)", "expectedOutput": ""}, {"Line": 257, "Input": "An actor will pay for a patient to attend an object implies the patient can attend the object.", "actualOutput": "RelationClaim(\"actor\",\"WillPayFor\",\"patient\")\nRelationClaim(\"patient\",\"CanAttend\",\"object\")", "expectedOutput": ""}, {"Line": 258, "Input": "The lead inside counsel must approve all timekeepers prior to their billing on a matter.", "actualOutput": "RelationClaim(\"lead inside counsel\",\"must approve\",\"all timekeepers prior to their billing on a matter\")", "expectedOutput": ""}, {"Line": 259, "Input": "Jo Jo will not provide blanket waivers and all prior blanket waivers are hereby revoked.", "actualOutput": "NegatedRelationClaim(jo,\"Provide\", \"BlanketWaivers\")\nNegatedPropertyClaim(\"AllPriorBlanketWaivers\",\"HerebyRevoked\",True)", "expectedOutput": ""}, {"Line": 260, "Input": "Each party will bear its own fees and expenses in connection with the arbitration and share equally the fees and expenses of the arbitrator.", "actualOutput": "PropertyClaim(\"each party\",\"HasProperty\",\"bear own fees and expenses\")\nPropertyClaim(\"arbitration\",\"HasProperty\",\"connection with\")\nRelationClaim(\"each party\",\"share equally\",\"fees and expenses of arbitrator\")", "expectedOutput": ""}, {"Line": 261, "Input": "\"Unless authorized expressly and in advance by the lead inside counsel, Jo Jo will only pay for coach air fare and mid-size rental cars.\"", "actualOutput": "NegatedRelationClaim(jo,\"PayFor\",coach_air_fare)\nNegatedRelationClaim(jo,\"PayFor\",mid-size_rental_cars)\nRelationClaim(jo,\"PayFor\",air_fare)\nRelationClaim(jo,\"PayFor\",rental_cars)\nNegatedRelationClaim(lead_inside_counsel,\"Authorize\",jo)\nPropertyClaim(air_fare,\"IsA\",\"CoachAirFare\")\nPropertyClaim(rental_cars,\"IsA\",\"Mid-SizeRentalCars\")", "expectedOutput": ""}, {"Line": 262, "Input": "A 12-year-old Israeli girl has discovered an ancient Egyptian amulet.", "actualOutput": "RelationClaim(\"israeli girl\",\"discovered\",\"ancient egyptian amulet\")\nPropertyClaim(\"ancient egyptian amulet\",\"HasProperty\",\"ancient\")\nPropertyClaim(\"ancient egyptian amulet\",\"HasProperty\",\"Egyptian\")\nPropertyClaim(\"ancient egyptian amulet\",\"HasProperty\",\"amulet\")\nPropertyClaim(\"israeli girl\",\"HasProperty\",\"12-year-old\")", "expectedOutput": ""}, {"Line": 263, "Input": "\"It dates back more than 3,200 years to the days of the Pharaohs, an official said.\"", "actualOutput": "PropertyClaim(\"it\",\"DatesBackTo\",\"more than 3,200 years ago\")\nRelationClaim(\"it\",\"BelongsTo\",\"the days of the pharaohs\")\nRelationClaim(\"an official\",\"SaidAbout\",\"it\")", "expectedOutput": ""}, {"Line": 264, "Input": "It bore the name of the Egyptian ruler Thutmose III.", "actualOutput": "RelationClaim(it,\"BearsName\", \"Thutmose III\")\nPropertyClaim(it, \"HasProperty\", \"Egyptian ruler\")\nNegatedRelationClaim(it, \"IsA\", \"Greek ruler\")\nNegatedPropertyClaim(it, \"HasProperty\", \"Roman artifact\")", "expectedOutput": ""}, {"Line": 265, "Input": "Neshama Spielman and her family took part in the Temple Mount Sifting Project.", "actualOutput": "RelationClaim(neshama_spielman, \"TookPartIn\", temple_mount_sifting_project)\n", "expectedOutput": ""}, {"Line": 266, "Input": "It is an initiative to sort through earth discarded from the area of the biblical temples in Jerusalem.", "actualOutput": "RelationClaim(initiative, \"IsA\", sorting)\nRelationClaim(sorting, \"IsA\", activity)\nRelationClaim(activity, \"IsA\", process)\nRelationClaim(process, \"IsA\", action)\nRelationClaim(action, \"IsA\", event)\nRelationClaim(event, \"IsA\", happening)\nRelationClaim(happening, \"IsA\", occurrence)\nRelationClaim(earth, \"IsA\", material)\nRelationClaim(material, \"IsA\", substance)\nRelationClaim(substance, \"IsA\", matter)\nRelationClaim(matter, \"IsA\", physical entity)\nRelationClaim(discarded, \"IsA\", waste)\nRelationClaim(waste, \"IsA\", refuse)\nRelationClaim(refuse, \"IsA\", garbage)\nRelationClaim(garbage, \"IsA\", trash)\nRelationClaim(trash, \"IsA\", debris)\nRelationClaim(debris, \"IsA\", remains)\nRelationClaim(remains, \"IsA\", residue)\nRelationClaim", "expectedOutput": ""}, {"Line": 267, "Input": "There she found a pendant-shaped amulet.", "actualOutput": "PropertyClaim(\"pendant-shaped amulet\",\"IsA\",\"amulet\")\nRelationClaim(\"she\",\"discover\",\"pendant-shaped amulet\")", "expectedOutput": ""}, {"Line": 268, "Input": "The deepest hole we have ever carved out is just 9 inches across.", "actualOutput": "PropertyClaim(deepest_hole,\"IsA\",hole)\nPropertyClaim(deepest_hole,\"HasProperty\",carved_out)\nPropertyClaim(deepest_hole,\"HasProperty\",small_size)\nNegatedPropertyClaim(deepest_hole,\"HasProperty\",large_size)\nPropertyClaim(deepest_hole,\"HasProperty\",size_9_inches)\nNegatedPropertyClaim(deepest_hole,\"HasProperty\",size_greater_than_9_inches)", "expectedOutput": ""}, {"Line": 269, "Input": "It was started by scientists in 1970.", "actualOutput": "NegatedRelationClaim(it, \"StartedBy\", scientists)\nRelationClaim(scientists, \"Started\", it)\nPropertyClaim(it, \"Year\", 1970)", "expectedOutput": ""}, {"Line": 270, "Input": "Super high temperatures stopped the Russian scientists from going any farther.", "actualOutput": "NegatedRelationClaim(russian_scientists, \"GoAnyFarther\", farther) \nPropertyClaim(super_high_temperatures, \"HasProperty\", high)", "expectedOutput": ""}, {"Line": 271, "Input": "They found some pretty cool things along the way.", "actualOutput": "PropertyClaim(\"they\",\"Found\",\"cool things\")\nPropertyClaim(\"cool things\",\"IsA\",\"things\")", "expectedOutput": ""}, {"Line": 272, "Input": "One of those things was free water.", "actualOutput": "PropertyClaim(thing, \"IsFree\", water)", "expectedOutput": ""}, {"Line": 273, "Input": "It was deeper than they ever thought it could possibly exist.", "actualOutput": "NegatedRelationClaim(it,\"IsA\",\"ShallowPlace\")\nNegatedPropertyClaim(it,\"HasProperty\",\"Shallow\")\nRelationClaim(it,\"IsDeeperThan\",\"TheyThoughtPossible\")\nPropertyClaim(\"TheyThoughtPossible\",\"HasProperty\",\"Depth\")", "expectedOutput": ""}, {"Line": 274, "Input": "And they found 2-billion-year-old fossils.", "actualOutput": "PropertyClaim(fossils, \"IsOlderThan\", 2-billion-years)\nRelationClaim(they, \"Found\", fossils)", "expectedOutput": ""}, {"Line": 275, "Input": "\"Jane's band's director, Omar, is going shopping with Sam\"", "actualOutput": "RelationClaim(director, \"IsA\", person)\nRelationClaim(band, \"BelongsTo\", jane)\nRelationClaim(band, \"HasDirector\", director)\nRelationClaim(director, \"GoingWith\", sam)\nRelationClaim(director, \"GoingWith\", omar)\nRelationClaim(omar, \"IsA\", person)\nRelationClaim(sam, \"IsA\", person)", "expectedOutput": ""}, {"Line": 276, "Input": "No bands are going to the competition.", "actualOutput": "NegatedRelationClaim(\"bands\", \"goingto\", \"competition\")", "expectedOutput": ""}, {"Line": 277, "Input": "Sending emails is the same as emailing.", "actualOutput": "RelationClaim(\"sending emails\",\"IsTheSameAs\",\"emailing\")", "expectedOutput": ""}, {"Line": 278, "Input": "Emailing is the same as sending emails.", "actualOutput": "RelationClaim(\"emailing\",\"IsTheSameAs\",\"sending emails\")", "expectedOutput": ""}, {"Line": 279, "Input": "Texting is the same as sending texts.", "actualOutput": "RelationClaim(\"texting\",\"IsTheSameAs\",\"sending_texts\")", "expectedOutput": ""}, {"Line": 280, "Input": "Sending texts is the same as texting.", "actualOutput": "RelationClaim(\"sending texts\",\"isthesameas\",\"texting\")", "expectedOutput": ""}, {"Line": 281, "Input": "Riding bikes is the same as biking.", "actualOutput": "RelationClaim(\"riding bikes\",\"IsTheSameAs\",\"biking\")", "expectedOutput": ""}, {"Line": 282, "Input": "Biking is the same as riding bikes.", "actualOutput": "RelationClaim(\"biking\",\"IsTheSameAs\",\"riding_bikes\")", "expectedOutput": ""}, {"Line": 283, "Input": "Giving hugs is the same as hugging.", "actualOutput": "RelationClaim(\"giving hugs\", \"IsTheSameAs\", \"hugging\")", "expectedOutput": ""}, {"Line": 284, "Input": "Hugging is the same as giving hugs.", "actualOutput": "RelationClaim(\"hugging\",\"IsTheSameAs\",\"giving hugs\")", "expectedOutput": ""}, {"Line": 285, "Input": "Taking naps is the same as napping.", "actualOutput": "RelationClaim(\"taking naps\", \"isthesameas\", \"napping\")", "expectedOutput": ""}, {"Line": 286, "Input": "Napping is the same as taking naps.", "actualOutput": "RelationClaim(\"napping\",\"IsTheSameAs\",\"taking naps\")", "expectedOutput": ""}, {"Line": 287, "Input": "Showering is the same as taking showers.", "actualOutput": "RelationClaim(\"showering\",\"IsTheSameAs\",\"taking showers\")", "expectedOutput": ""}, {"Line": 288, "Input": "Taking showers is the same as showering.", "actualOutput": "RelationClaim(\"taking showers\",\"IsA\",\"showering\")\nRelationClaim(\"showering\",\"IsA\",\"taking showers\")", "expectedOutput": ""}, {"Line": 289, "Input": "Leaving a place is the same as departing the place.", "actualOutput": "RelationClaim(\"leaving a place\",\"isthesameas\",\"departing the place\")", "expectedOutput": ""}, {"Line": 290, "Input": "Leaving an object somewhere is the same as forgetting the object somewhere.", "actualOutput": "RelationClaim(\"leaving an object\",\"IsTheSameAs\",\"forgetting the object\")\nRelationClaim(\"leaving an object\",\"IsA\",\"action\")\nRelationClaim(\"forgetting the object\",\"IsA\",\"action\")\nPropertyClaim(\"leaving an object\",\"RequiresLocation\", \"somewhere\")\nPropertyClaim(\"forgetting the object\",\"RequiresLocation\", \"somewhere\")", "expectedOutput": ""}, {"Line": 291, "Input": "Leaving a patient is the same as abandoning the patient.", "actualOutput": "RelationClaim(\"leaving a patient\",\"IsA\",\"abandoning the patient\")", "expectedOutput": ""}, {"Line": 292, "Input": "Leaving a patient an object is the same as entrusting the patient the object.", "actualOutput": "RelationClaim(\"leaving a patient\",\"IsTheSameAs\",\"entrusting the patient\")\nRelationClaim(\"leaving an object\",\"IsTheSameAs\",\"entrusting the object\")\nNegatedRelationClaim(\"entrusting the patient\",\"HasTheObject\",\"the object\")", "expectedOutput": ""}, {"Line": 293, "Input": "Kicking the bucket is metaphorically the same as dying.", "actualOutput": "RelationClaim(\"kicking the bucket\",\"IsMetaphoricallyTheSameAs\",\"dying\")", "expectedOutput": ""}, {"Line": 294, "Input": "An actor sent a patient an object implies the patient received the object.", "actualOutput": "RelationClaim(actor, sending_email, patient)\nNegatedRelationClaim(patient, receiving, object)\nPropertyClaim(patient, has_received, object)", "expectedOutput": ""}, {"Line": 295, "Input": "An actor sold a patient an object implies the patient bought the object.", "actualOutput": "RelationClaim(actor, \"Sold\", patient)\nRelationClaim(patient, \"Bought\", object)", "expectedOutput": ""}, {"Line": 296, "Input": "Anastacia Shuttleworth sent an email to Otto Vantassel about his project.", "actualOutput": "RelationClaim(anastacia, sending_email, otto_vantassel)\nRelationClaim(email, hasRecipient, otto_vantassel)\nPropertyClaim(project, hasPossessor, otto_vantassel)", "expectedOutput": ""}, {"Line": 297, "Input": "Grayce Molina sent packages to Ben Fernandez.", "actualOutput": "RelationClaim(grayce_molina, \"Send\", packages)\nRelationClaim(packages, \"HaveRecipient\", ben_fernandez)", "expectedOutput": ""}, {"Line": 298, "Input": "Ellis Hamel sends texts to Joan Blanco.", "actualOutput": "RelationClaim(ellis_hamel, \"Sends\", texts)\nRelationClaim(texts, \"AreSentTo\", joan_blanco)", "expectedOutput": ""}, {"Line": 299, "Input": "Maya Molina sends a letter to Mark Restivo.", "actualOutput": "RelationClaim(\"leaving_a_place\",\"isthesameas\",\"departing_the_place\")\nRelationClaim(\"leaving_an_object\",\"isthesameas\",\"forgetting_the_object\")\nRelationClaim(\"leaving_an_object\",\"requireslocation\",\"somewhere\")\nRelationClaim(\"forgetting_the_object\",\"requireslocation\",\"somewhere\")\nRelationClaim(\"leaving_a_patient\",\"isa\",\"abandoning_the_patient\")\nRelationClaim(\"leaving_a_patient\",\"isthesameas\",\"entrusting_the_patient\")\nNegatedPropertyClaim(\"entrusting_the_patient\",\"hastheobject\",\"the_object\")\nRelationClaim(\"kicking_the_bucket\",\"ismetaphoricallythesameas\",\"dying\")\nRelationClaim(\"actor\",\"sending_email\",\"patient\")\nPropertyClaim(\"patient\",\"receive\",\"letter\")\nRelationClaim(\"patient\",\"has_received\",\"letter\")\nRelationClaim(\"maya_molina\",\"sending\",\"letter\")\nRelationClaim(\"letter\",\"haverecipient\",\"mark_restivo\")", "expectedOutput": ""}, {"Line": 300, "Input": "Loise Monge rides bikes decently.", "actualOutput": "RelationClaim(\"loise monge\",\"rides\", \"bikes\")\nPropertyClaim(\"loise monge\", \"HasProperty\", \"decently\")", "expectedOutput": ""}, {"Line": 301, "Input": "Arnold Arno gives hugs to Matilda Aigner.", "actualOutput": "RelationClaim(\"arnold\",\"gives\",\"hugs\")\nRelationClaim(\"hugs\",\"to\",\"matilda aigner\")\nNegatedRelationClaim(\"arnold\",\"IsA\",\"matilda aigner\")\nNegatedPropertyClaim(\"arnold\",\"HasProperty\",\"hates\")", "expectedOutput": ""}, {"Line": 302, "Input": "Amy Hamel takes naps in the afternoon.", "actualOutput": "RelationClaim(\"amy_hamel\",\"takes\",\"naps\")\nRelationClaim(\"naps\",\"IsA\",\"activity\")\nPropertyClaim(\"naps\",\"occurs\",\"in_the_afternoon\")", "expectedOutput": ""}, {"Line": 303, "Input": "Jackie Peden takes showers in the evenings.", "actualOutput": "RelationClaim(jackie, \"take\", showers)\nPropertyClaim(showers, \"occurIn\", evenings)", "expectedOutput": ""}, {"Line": 304, "Input": "Kyle Hohl's goldfish kicked the bucket while he was on vacation.", "actualOutput": "PropertyClaim(goldfish, \"HasProperty\", dead)\nRelationClaim(kyle_hohl, \"Has\", goldfish)\nNegatedRelationClaim(goldfish, \"Kick\", bucket)\nRelationClaim(kyle_hohl, \"On\", vacation)", "expectedOutput": ""}, {"Line": 305, "Input": "Lydia Tye played with a bucket.", "actualOutput": "RelationClaim(\"lydia tye\",\"played with\",\"bucket\")", "expectedOutput": ""}, {"Line": 306, "Input": "She kicked the bucket down the street.", "actualOutput": "NegatedRelationClaim(she,kick,bucket)\nRelationClaim(bucket,downthestreet,None)", "expectedOutput": ""}, {"Line": 307, "Input": "Jessie Dreiling left the basketball game at 3 pm.", "actualOutput": "RelationClaim(jessie_dreiling,\"Left\",basketball_game)\nPropertyClaim(basketball_game,\"Time\",3_pm)\n", "expectedOutput": ""}, {"Line": 308, "Input": "Julie Lybarger left the game at home.", "actualOutput": "RelationClaim(julie_lybarger, \"Left\", game_at_home)\n", "expectedOutput": ""}, {"Line": 309, "Input": "Stevie Burleson left Melly Burleson for another woman.", "actualOutput": "NegatedRelationClaim(stevie_burleson,\"left\",melly_burleson)\nRelationClaim(stevie_burleson,\"leftFor\",another_woman)", "expectedOutput": ""}, {"Line": 310, "Input": "Darrell Tupper left Lola Vizcarra an entire fortune.", "actualOutput": "NegatedRelationClaim(darrell_tupper, \"Left\", lola_vizcarra)\nNegatedPropertyClaim(lola_vizcarra, \"HasProperty\", \"Entire Fortune\")\nRelationClaim(darrell_tupper, \"Left\", lola_vizcarra)\nPropertyClaim(lola_vizcarra, \"HasProperty\", \"Entire Fortune\")", "expectedOutput": ""}, {"Line": 311, "Input": "Brendon Potts promised Krystin Quail to leave.", "actualOutput": "RelationClaim(brendon_potts,\"Promised\",krystin_quail)\nNegatedRelationClaim(brendon_potts,\"Leave\",krystin_quail)", "expectedOutput": ""}, {"Line": 312, "Input": "Karl Betterton promised to leave Ewa Odum.", "actualOutput": "RelationClaim(karl_betterton, \"PromisedToLeave\", ewa_odum)", "expectedOutput": ""}, {"Line": 313, "Input": "Acie Newbury asked if dinner was ready.", "actualOutput": "RelationClaim(acie_newbury, \"Asked\", dinner)\nNegatedPropertyClaim(dinner, \"NotReady\", None)", "expectedOutput": ""}, {"Line": 314, "Input": "Abner Abbas asked for a drink.", "actualOutput": "RelationClaim(abner, \"AskedFor\", drink)", "expectedOutput": ""}, {"Line": 315, "Input": "Santo Sober asked Elaina Booe over for dinner.", "actualOutput": "RelationClaim(santo, \"IsA\", person)\nRelationClaim(elaina_booe, \"IsA\", person)\nPropertyClaim(santo, \"HasProperty\", sober)\nRelationClaim(santo, \"Invites\", elaina_booe)\nRelationClaim(santo, \"Hosts\", dinner)", "expectedOutput": ""}, {"Line": 316, "Input": "Brent Huson bought Brenda Bale some vases.", "actualOutput": "RelationClaim(brent_huson,\"Bought\",vases)\nRelationClaim(brent_huson,\"Gave\",vases)\nRelationClaim(brent_huson,\"Provided\",vases)\nRelationClaim(brenda_bale,\"Received\",vases)\nRelationClaim(brenda_bale,\"Got\",vases)\nRelationClaim(vases,\"BelongedTo\",brent_huson)\nPropertyClaim(vases,\"IsInanimate\",True)", "expectedOutput": ""}, {"Line": 317, "Input": "Bradley Rollings is simply buying time.", "actualOutput": "RelationClaim(\"bradley_rollings\",\"IsA\",\"person\")\nPropertyClaim(\"bradley_rollings\",\"HasProperty\",\"buying_time\")\n", "expectedOutput": ""}, {"Line": 318, "Input": "Sebastian Helfer stopped smoking.", "actualOutput": "NegatedPropertyClaim(\"sebastian helfer\",\"HasProperty\",\"smoking\")", "expectedOutput": ""}, {"Line": 319, "Input": "Sean Zentz stopped to smoke.", "actualOutput": "NegatedRelationClaim(sean_zentz, \"Stopped\", smoking)", "expectedOutput": ""}, {"Line": 320, "Input": "Dominick Huson drew a sketch of a bench by the fireplace.", "actualOutput": "RelationClaim(dominick_huson,\"Drew\",sketch)\nRelationClaim(sketch,\"Depicts\",bench)\nRelationClaim(bench,\"IsNear\",fireplace)", "expectedOutput": ""}, {"Line": 321, "Input": "Bobby Dieguez drew a bench towards the fireplace.", "actualOutput": "RelationClaim(\"bobby_dieguez\",\"draw\",\"bench\")\nRelationClaim(\"bench\",\"towards\",\"fireplace\")\nPropertyClaim(\"bobby_dieguez\",\"HasProperty\",\"artistic_skill\")", "expectedOutput": ""}, {"Line": 322, "Input": "Shon Mundy drew Mrs. Twellman into a heated disagreement at her family dinner.", "actualOutput": "PropertyClaim(shon_mundy, \"HasProperty\", good_drawing)\nRelationClaim(shon_mundy, \"Caused\", heated_disagreement)\nRelationClaim(shon_mundy, \"WasAt\", family_dinner)\nRelationClaim(mrs_twellman, \"WasIn\", heated_disagreement)\nNegatedPropertyClaim(mrs_twellman, \"HasProperty\", calm_attitude)\nRelationClaim(family_dinner, \"BelongsTo\", mrs_twellman)", "expectedOutput": ""}, {"Line": 323, "Input": "Liam Gorham is living out in the wild.", "actualOutput": "RelationClaim(\"liam gorham\",\"IsA\",\"person\")\nRelationClaim(\"liam gorham\",\"IsLivingOut\",\"in the wild\")", "expectedOutput": ""}, {"Line": 324, "Input": "Levi Gagnon is living out a dream.", "actualOutput": "RelationClaim(\"levi gagnon\", \"IsLivingOut\", \"dream\")\n", "expectedOutput": ""}, {"Line": 325, "Input": "Lauren Wendell lives down the street.", "actualOutput": "RelationClaim(\"lauren wendell\",\"lives\",\"down the street\")", "expectedOutput": ""}, {"Line": 326, "Input": "Leanna Salo lives down her achievements.", "actualOutput": "PropertyClaim(\"leanna salo\",\"HasProperty\",\"achievements\")\nRelationClaim(\"leanna salo\",\"lives down\", \"achievements\")", "expectedOutput": ""}, {"Line": 327, "Input": "Carl's employees called him homie.", "actualOutput": "RelationClaim(employees, \"Called\", carl)\nRelationClaim(employees, \"Called\", homie)\nRelationClaim(carl, \"IsA\", person)\nRelationClaim(homie, \"IsA\", slang_term)", "expectedOutput": ""}, {"Line": 328, "Input": "Carl's employees called him home.", "actualOutput": "RelationClaim(employee, \"Called\", carl)\nNegatedRelationClaim(employee, \"Called\", home)", "expectedOutput": ""}, {"Line": 329, "Input": "Terry Sieg wiped the table.", "actualOutput": "RelationClaim(terry_sieg, \"Wiped\", table)", "expectedOutput": ""}, {"Line": 330, "Input": "Terry Sieg wiped crumbs off the table.", "actualOutput": "PropertyClaim(\"terry_sieg\",\"HasProperty\",\"table_wiper\")\nRelationClaim(\"table_wiper\",\"wipes\",\"crumbs\")\nNegatedRelationClaim(\"table_wiper\",\"has\",\"crumbs\")\nNegatedPropertyClaim(\"table_wiper\",\"HasProperty\",\"dirty_table\")", "expectedOutput": ""}, {"Line": 331, "Input": "Chuck Saban is Volvoing and Jan Cesario is IBMing.", "actualOutput": "RelationClaim(\"chuck_saban\",\"IsVolvoing\",null)\nRelationClaim(\"jan_cesario\",\"IsIBMing\",null)", "expectedOutput": ""}, {"Line": 332, "Input": "Students who could not attend the XYZ symposium have skyped in during the Q&A session.", "actualOutput": "NegatedRelationClaim(students, \"Attend\", xyz_symposium)\nRelationClaim(students, \"SkypeIn\", q&a_session)", "expectedOutput": ""}, {"Line": 333, "Input": "Gerry Trombley enjoys uncling.", "actualOutput": "PropertyClaim(\"gerry_trombley\",\"enjoys\",\"uncling\")", "expectedOutput": ""}, {"Line": 334, "Input": "Tonie Harrod whapped two winters ago.", "actualOutput": "NegatedPropertyClaim(tonie_harrod,\"HasProperty\",whapped)\nNegatedRelationClaim(two,winters_ago,tonie_harrod)", "expectedOutput": ""}, {"Line": 335, "Input": "Ruth Lavin is fobbing joyfully.", "actualOutput": "PropertyClaim(\"ruth lavin\", \"HasProperty\", \"joyful\")\nRelationClaim(\"ruth lavin\", \"IsFobbing\", \"joyfully\")", "expectedOutput": ""}, {"Line": 336, "Input": "Tanja Charlton was vivified.", "actualOutput": "RelationClaim(\"tanja charlton\",\"wasVivified\", \"\")", "expectedOutput": ""}, {"Line": 337, "Input": "Sheilah Rector is trying to unfreeze her assets.", "actualOutput": "RelationClaim(sheilah_rector,\"IsTryingTo\",unfreeze_her_assets)", "expectedOutput": ""}, {"Line": 338, "Input": "The police arrest those who break the law.", "actualOutput": "RelationClaim(police, arrest, lawbreaker)\nNegatedRelationClaim(lawbreaker, obey, law)", "expectedOutput": ""}, {"Line": 339, "Input": "Many stacks of documents were misplaced.", "actualOutput": "RelationClaim(stacks, \"WereMisplaced\", documents)", "expectedOutput": ""}, {"Line": 340, "Input": "The Los Altos varsity volleyball team win after a poor start.", "actualOutput": "RelationClaim(\"los_altos_varsity_volleyball_team\",\"WinAfter\",\"poor_start\")", "expectedOutput": ""}, {"Line": 341, "Input": "\"John Schneider, a nice and proud German, drives a Chevy.\"", "actualOutput": "RelationClaim(\"john schneider\",\"drives\",\"chevy\")\nPropertyClaim(\"john schneider\",\"IsNice\",True)\nPropertyClaim(\"john schneider\",\"IsProud\",True)\nPropertyClaim(\"john schneider\",\"IsGerman\",True)", "expectedOutput": ""}, {"Line": 342, "Input": "\"A client of Murray's, Stan Weber, is nice.\"", "actualOutput": "RelationClaim(client, \"IsA\", person)\nRelationClaim(murray, \"HasClient\", client)\nRelationClaim(stan_weber, \"IsA\", person)\nRelationClaim(stan_weber, \"IsNice\", true)", "expectedOutput": ""}, {"Line": 343, "Input": "Harriette Phung wondered whether Svetlana Golla would admit guilt.", "actualOutput": "RelationClaim(harriette_phung, \"WonderedWhether\", svetlana_golla)\nNegatedRelationClaim(svetlana_golla, \"AdmitGuilt\", harriette_phung)", "expectedOutput": ""}, {"Line": 344, "Input": "Harvey Paetzold told Dee Darrell yesterday off the cuff to eat an apple.", "actualOutput": "RelationClaim(harvey_paetzold, \"Told\", dee_darrell)\nRelationClaim(yesterday, \"IsA\", day)\nPropertyClaim(dee_darrell, \"HasProperty\", hungry)\nRelationClaim(dee_darrell, \"Eats\", apple)", "expectedOutput": ""}, {"Line": 345, "Input": "All fruits are good for you said Carter Hageman the doctor.", "actualOutput": "RelationClaim(\"fruits\",\"AreGoodFor\",\"you\")\nRelationClaim(\"carter_hageman\",\"IsA\",\"doctor\")", "expectedOutput": ""}, {"Line": 346, "Input": "Beagles are great Martin said with confidence.", "actualOutput": "RelationClaim(\"beagles\",\"Are\", \"great\")\nPropertyClaim(\"martin\", \"HasProperty\", \"confidence\")", "expectedOutput": ""}, {"Line": 347, "Input": "The car to buy in 2018 is Toyota.", "actualOutput": "RelationClaim(car, \"ToBuyIn\", 2018)\nRelationClaim(\"ToBuyIn2018\", \"IsA\", car)\nRelationClaim(\"ToBuyIn2018\", \"Is\", toyota)", "expectedOutput": ""}, {"Line": 348, "Input": "Dr. Russo reported the extra data to be safe.", "actualOutput": "RelationClaim(dr. russo, \"Reported\", extra data)\nRelationClaim(extra data, \"IsA\", safe)\n", "expectedOutput": ""}, {"Line": 349, "Input": "American high school students need to study more math in order to compete in today's global marketplace.", "actualOutput": "RelationClaim(\"american high school students\",\"need to study more\",\"math\")\nRelationClaim(\"american high school students\",\"compete in\",\"today's global marketplace\")\nPropertyClaim(\"today's global marketplace\",\"is\",\"competitive\")\nPropertyClaim(\"math\",\"is\",\"important for success\")", "expectedOutput": ""}, {"Line": 350, "Input": "Mr. Middleton sent his grandchildren presents.", "actualOutput": "RelationClaim(mr_middleton, \"Sent\", grandchildren)\nPropertyClaim(grandchildren, \"HasProperty\", presents)", "expectedOutput": ""}, {"Line": 351, "Input": "Jeffrey Kittle sold his bike to Valencia Mcardle.", "actualOutput": "RelationClaim(jeffrey_kittle, \"Sold\", bike)\nRelationClaim(bike, \"BelongsTo\", jeffrey_kittle)\nRelationClaim(bike, \"BoughtBy\", valencia_mcardle)\nRelationClaim(valencia_mcardle, \"PaidFor\", bike)", "expectedOutput": ""}, {"Line": 352, "Input": "Alita Ramsdell closed the office door and opened the stairwell door.", "actualOutput": "RelationClaim(alita_ramsdell, \"Closed\", office_door)\nRelationClaim(alita_ramsdell, \"Opened\", stairwell_door)", "expectedOutput": ""}, {"Line": 353, "Input": "Loreta Nunn turned off the kitchen lights.", "actualOutput": "RelationClaim(loreta_nunn, \"TurnedOff\", kitchen_lights)", "expectedOutput": ""}, {"Line": 354, "Input": "Time flies like an arrow.", "actualOutput": "RelationClaim(\"time\",\"FliesLike\",\"arrow\")", "expectedOutput": ""}, {"Line": 355, "Input": "fruit flies like bananas.", "actualOutput": "RelationClaim(\"fruit\",\"FliesLike\",\"bananas\")", "expectedOutput": ""}, {"Line": 356, "Input": "The old man the boat.", "actualOutput": "RelationClaim(man,has,boat)", "expectedOutput": ""}, {"Line": 357, "Input": "\"The Fed, the Federal Open Market Committee, will increase interest rates to 2.5% in December 2018 in order to keep inflation steady at around 2 percent per year.\"", "actualOutput": "RelationClaim(\"fed\",\"WillIncrease\", \"interest rates\")\nRelationClaim(\"interest rates\",\"IsA\", \"monetary policy tool\")\nRelationClaim(\"federal open market committee\",\"BelongsTo\", \"fed\")\nPropertyClaim(\"interest rates\",\"HasProperty\", \"2.5%\")\nRelationClaim(\"interest rates\",\"WillIncreaseTo\", \"2.5%\")\nRelationClaim(\"2.5%\",\"IsA\", \"interest rate level\")\nRelationClaim(\"december 2018\",\"IsTheTimeOf\", \"interest rate increase\")\nRelationClaim(\"inflation\",\"IsA\", \"economic indicator\")\nPropertyClaim(\"inflation\",\"HasProperty\", \"2 percent per year\")\nRelationClaim(\"inflation\",\"ShouldBeKeptSteadyAt\", \"around 2 percent per year\")\nRelationClaim(\"interest rates\",\"AreIncreasedToKeep\", \"inflation steady\")", "expectedOutput": ""}, {"Line": 358, "Input": "\"Dorian Gray, the subject of a full-length portrait in oil by Basil Hallward\"", "actualOutput": "RelationClaim(\"dorian gray\",\"IsTheSubjectOf\",\"full-length portrait\")\nRelationClaim(\"full-length portrait\",\"IsInOilBy\",\"basil hallward\")", "expectedOutput": ""}, {"Line": 359, "Input": "Southern California Children's Museum in Pasadena", "actualOutput": "RelationClaim(\"southern california children's museum\",\"is located in\",\"pasadena\")", "expectedOutput": ""}, {"Line": 360, "Input": "\"The chocolate cake, yikes, is not good.\"", "actualOutput": "NegatedPropertyClaim(\"chocolate cake\",\"HasProperty\",\"good\")", "expectedOutput": ""}, {"Line": 361, "Input": "\"The food at a new Italian restaurant, omg is very delicious!\"", "actualOutput": "PropertyClaim(\"food at new italian restaurant, omg\",\"HasProperty\",\"delicious\")", "expectedOutput": ""}, {"Line": 362, "Input": "Iida met Pearl's cousin before Callie's.", "actualOutput": "RelationClaim(iida, \"Met\", cousin_of_pearl)\nRelationClaim(cousin_of_pearl, \"IsA\", person)\nRelationClaim(callie, \"IsA\", person)", "expectedOutput": ""}, {"Line": 363, "Input": "The loud student from Jeremy's class's homework is difficult.", "actualOutput": "RelationClaim(student, \"IsFrom\", class)\nRelationClaim(class, \"BelongsTo\", Jeremy)\nRelationClaim(homework, \"BelongsTo\", student)\nPropertyClaim(homework, \"IsDifficult\", True)", "expectedOutput": ""}, {"Line": 364, "Input": "Homework is devoirs.", "actualOutput": "RelationClaim(\"homework\",\"IsA\",\"devoirs\")", "expectedOutput": ""}, {"Line": 365, "Input": "The student from Brandon's class is difficult.", "actualOutput": "RelationClaim(student,\"IsFrom\",class)\nPropertyClaim(student,\"HasProperty\",\"Difficult\")", "expectedOutput": ""}, {"Line": 366, "Input": "The students from Georgette's class's homework are difficult.", "actualOutput": "RelationClaim(student,\"IsFrom\",class)\nRelationClaim(class,\"BelongsTo\",georgette)\nRelationClaim(class,\"Has\",homework)\nRelationClaim(homework,\"HasProperty\",difficult)", "expectedOutput": ""}, {"Line": 367, "Input": "\"Virion has adopted cats, dogs, and hamsters from France.\"", "actualOutput": "RelationClaim(\"virion\",\"HasAdopted\", \"cats\")\nRelationClaim(\"virion\",\"HasAdopted\", \"dogs\")\nRelationClaim(\"virion\",\"HasAdopted\", \"hamsters\")\nRelationClaim(\"cats\",\"AreFrom\", \"France\")\nRelationClaim(\"dogs\",\"AreFrom\", \"France\")\nRelationClaim(\"hamsters\",\"AreFrom\", \"France\")", "expectedOutput": ""}, {"Line": 368, "Input": "Ludovic packed everything minus the hotdogs.", "actualOutput": "NegatedPropertyClaim(ludovic,\"HasProperty\",hotdogs)\nRelationClaim(ludovic,\"Packed\",everything)", "expectedOutput": ""}, {"Line": 369, "Input": "Thornton had pasta from Italy.", "actualOutput": "PropertyClaim(\"thornton\",\"HasProperty\",\"pasta\")\nRelationClaim(\"pasta\",\"IsFrom\",\"italy\")", "expectedOutput": ""}, {"Line": 370, "Input": "Mendel is a hamster.", "actualOutput": "RelationClaim(\"mendel\",\"IsA\",\"hamster\")", "expectedOutput": ""}, {"Line": 371, "Input": "Benedict is a man.", "actualOutput": "RelationClaim(\"benedict\",\"IsA\",\"man\")", "expectedOutput": ""}, {"Line": 372, "Input": "Holly trusts him with cooking a tasty dinner.", "actualOutput": "RelationClaim(holly, trusts, him)\nRelationClaim(him, canCook, tastyDinner)", "expectedOutput": ""}, {"Line": 373, "Input": "Gregor saw Leland.", "actualOutput": "RelationClaim(\"gregor\",\"saw\",\"leland\")", "expectedOutput": ""}, {"Line": 374, "Input": "Gregor saw Britta.", "actualOutput": "RelationClaim(gregor,\"Saw\",britta)", "expectedOutput": ""}, {"Line": 375, "Input": "Lain saw the man whom Gregor saw.", "actualOutput": "RelationClaim(lain, saw, man)\nRelationClaim(gregor, saw, man)\nNegatedRelationClaim(lain, saw, gregor)\nNegatedRelationClaim(gregor, saw, lain)", "expectedOutput": ""}, {"Line": 376, "Input": "Leland is an electrician.", "actualOutput": "RelationClaim(leland,\"IsA\",electrician)", "expectedOutput": ""}, {"Line": 377, "Input": "Britta is a CEO.", "actualOutput": "RelationClaim(\"britta\",\"IsA\",\"ceo\")", "expectedOutput": ""}, {"Line": 378, "Input": "The electrician saw the CEO.", "actualOutput": "RelationClaim(\"electrician\",\"saw\",\"ceo\")", "expectedOutput": ""}, {"Line": 379, "Input": "\"Richter saw Umbra, the dog.\"", "actualOutput": "RelationClaim(\"richter\",\"saw\",\"umbra\")\nRelationClaim(\"umbra\",\"IsA\",\"dog\")", "expectedOutput": ""}, {"Line": 380, "Input": "Dorn saw Jill.", "actualOutput": "RelationClaim(\"dorn\",\"saw\",\"jill\")", "expectedOutput": ""}, {"Line": 381, "Input": "Kelly saw the pet whom Richter saw.", "actualOutput": "RelationClaim(kelly, saw, pet)\nRelationClaim(richter, saw, pet)\nNegatedRelationClaim(kelly, isa, pet)", "expectedOutput": ""}, {"Line": 382, "Input": "Dogs are mammals.", "actualOutput": "RelationClaim(\"dogs\",\"Are\",\"mammals\")", "expectedOutput": ""}, {"Line": 383, "Input": "Crows are as big as ravens.", "actualOutput": "RelationClaim(\"crows\",\"AreAsBigAs\",\"ravens\")", "expectedOutput": ""}, {"Line": 384, "Input": "Crows are as small as pidgeons.", "actualOutput": "RelationClaim(\"crows\",\"AreAsSmallAs\",\"pidgeons\")", "expectedOutput": ""}, {"Line": 385, "Input": "velots are from Spain.", "actualOutput": "RelationClaim(\"velots\",\"arefrom\",\"spain\")", "expectedOutput": ""}, {"Line": 386, "Input": "velots are green.", "actualOutput": "RelationClaim(\"velots\",\"IsA\",\"green\")", "expectedOutput": ""}, {"Line": 387, "Input": "Kyle has a red velot.", "actualOutput": "PropertyClaim(\"kyle\",\"Has\", \"velot\")\nPropertyClaim(\"velot\",\"HasProperty\", \"red\")", "expectedOutput": ""}, {"Line": 388, "Input": "velots are gorbojims.", "actualOutput": "RelationClaim(\"velots\", \"IsA\", \"gorbojims\")", "expectedOutput": ""}, {"Line": 389, "Input": "gorbojims are angelic and loud.", "actualOutput": "PropertyClaim(\"gorbojims\",\"HasProperty\",\"angelic\")\nPropertyClaim(\"gorbojims\",\"HasProperty\",\"loud\")", "expectedOutput": ""}, {"Line": 390, "Input": "Mammals are hairy.", "actualOutput": "RelationClaim(\"mammals\",\"HaveProperty\",\"hairy\")", "expectedOutput": ""}, {"Line": 391, "Input": "gorbojims are mammals.", "actualOutput": "RelationClaim(\"gorbojims\",\"IsA\",\"mammals\")", "expectedOutput": ""}, {"Line": 392, "Input": "Mammals are endotherms.", "actualOutput": "RelationClaim(\"mammals\",\"Are\", \"endotherms\")", "expectedOutput": ""}, {"Line": 393, "Input": "Owain reminded Cornelia to run at 5PM at noon.", "actualOutput": "RelationClaim(owain, \"Reminded\", cornelia)\nRelationClaim(cornelia, \"RunAt\", 5pm)\nRelationClaim(cornelia, \"RunAt\", noon)", "expectedOutput": ""}, {"Line": 394, "Input": "The yellow birds in cages and dogs can't fly.", "actualOutput": "PropertyClaim(\"yellow birds in cages\",\"CanFly\",False)\nPropertyClaim(\"dogs\",\"CanFly\",False)", "expectedOutput": ""}, {"Line": 395, "Input": "The red birds in cages and boxes can't fly.", "actualOutput": "NegatedRelationClaim(birds, \"CanFly\", None)\nPropertyClaim(birds, \"Color\", \"Red\")\nRelationClaim(birds, \"In\", cages)\nRelationClaim(birds, \"In\", boxes)\nPropertyClaim(cages, \"Contain\", \"Birds\")\nPropertyClaim(boxes, \"Contain\", \"Birds\")\nPropertyClaim(cages, \"Type\", \"Cage\")\nPropertyClaim(boxes, \"Type\", \"Box\")", "expectedOutput": ""}, {"Line": 396, "Input": "\"The word, liminality, has Latin origin.\"", "actualOutput": "PropertyClaim(\"word\",\"HasProperty\",\"liminality\")\nRelationClaim(\"liminality\",\"HasOrigin\",\"latin\")\n", "expectedOutput": ""}, {"Line": 397, "Input": "Elijah is from New York City.", "actualOutput": "RelationClaim(elijah,\"IsFrom\",new york city)", "expectedOutput": ""}, {"Line": 398, "Input": "Elijah lives in Westwood.", "actualOutput": "RelationClaim(elijah,\"LivesIn\",westwood)", "expectedOutput": ""}, {"Line": 399, "Input": "Westwood is in Los Angeles.", "actualOutput": "NegatedRelationClaim(westwood,\"IsA\",los_angeles)\nNegatedRelationClaim(los_angeles,\"IsA\",westwood)\nNegatedRelationClaim(westwood,\"In\",los_angeles)\nRelationClaim(los_angeles,\"HasProperty\",city)\nRelationClaim(westwood,\"HasProperty\",neighborhood)\nRelationClaim(westwood,\"In\",los_angeles)", "expectedOutput": ""}, {"Line": 400, "Input": "Los Angeles is in California.", "actualOutput": "RelationClaim(\"los angeles\",\"IsA\",\"city\")\nRelationClaim(\"city\",\"IsA\",\"place\")\nRelationClaim(\"california\",\"IsA\",\"place\")\nRelationClaim(\"los angeles\",\"In\",\"california\")", "expectedOutput": ""}, {"Line": 401, "Input": "An actor is from a place implies an actor lived in the place.", "actualOutput": "RelationClaim(actor,\"IsFrom\",place)\nRelationClaim(actor,\"LivedIn\",place)", "expectedOutput": ""}, {"Line": 402, "Input": "Rob eats breakfast at 8.", "actualOutput": "RelationClaim(\"rob\",\"eats\",\"breakfast\")\nRelationClaim(\"breakfast\",\"IsA\",\"meal\")\nPropertyClaim(\"breakfast\",\"HasProperty\",\"morning\")\nRelationClaim(\"rob\",\"eatsAt\",\"8\")", "expectedOutput": ""}, {"Line": 403, "Input": "Rob eats dinner at 8.", "actualOutput": "PropertyClaim(\"rob\",\"eatsDinnerAt\",\"8\")\nRelationClaim(\"rob\",\"eats\",\"dinner\")", "expectedOutput": ""}, {"Line": 404, "Input": "An actor works at a company implies the actor is the company's employee.", "actualOutput": "RelationClaim(\"actor\",\"WorksAt\",\"company\")\nRelationClaim(\"actor\",\"IsA\",\"employee\")\nPropertyClaim(\"employee\",\"HasProperty\",\"works at company\")", "expectedOutput": ""}, {"Line": 405, "Input": "Steven works at Tesla.", "actualOutput": "PropertyClaim(\"steven\",\"WorksAt\",\"tesla\")", "expectedOutput": ""}, {"Line": 406, "Input": "\"The movie, The Matrix, is a sci-fi movie.\"", "actualOutput": "RelationClaim(\"the movie\",\"IsA\",\"sci-fi movie\")\nPropertyClaim(\"the matrix\",\"HasProperty\",\"sci-fi\")\n", "expectedOutput": ""}, {"Line": 407, "Input": "Keanu Reeves is an actor.", "actualOutput": "RelationClaim(\"keanu reeves\",\"IsA\",\"actor\")", "expectedOutput": ""}, {"Line": 408, "Input": "Keanu Reeves is in The Matrix.", "actualOutput": "RelationClaim(\"keanu_reeves\",\"IsIn\",\"the_matrix\")", "expectedOutput": ""}, {"Line": 409, "Input": "An actor is in a movie is the same as an actor acts in a movie.", "actualOutput": "RelationClaim(\"actor\",\"actsIn\",\"movie\")", "expectedOutput": ""}, {"Line": 410, "Input": "An actor is in a movie is the same as an actor stars in a movie.", "actualOutput": "RelationClaim(actor,\"IsIn\",movie) and RelationClaim(actor,\"StarsIn\",movie)", "expectedOutput": ""}, {"Line": 411, "Input": "\"Keanu Reeves played the character, Neo.\"", "actualOutput": "RelationClaim(\"keanu_reeves\",\"played\",\"neo\")\nNegatedRelationClaim(\"keanu_reeves\",\"played\",\"trinity\")\nRelationClaim(\"neo\",\"IsA\",\"character\")\nPropertyClaim(\"neo\",\"HasProperty\",\"protagonist\")", "expectedOutput": ""}, {"Line": 412, "Input": "Dracula is a horror movie.", "actualOutput": "RelationClaim(\"dracula\",\"IsA\",\"horror movie\")", "expectedOutput": ""}, {"Line": 413, "Input": "Happy Gilmore is a comedy movie.", "actualOutput": "RelationClaim(\"happy gilmore\",\"IsA\",\"comedy movie\")", "expectedOutput": ""}, {"Line": 414, "Input": "The rich man the bikes.", "actualOutput": "PropertyClaim(\"rich man\",\"HasProperty\",\"wealthy\")\nRelationClaim(\"rich man\",\"owns\",\"bikes\")\n", "expectedOutput": ""}, {"Line": 415, "Input": "The young man the cars.", "actualOutput": "RelationClaim(man, \"IsA\", young)\nRelationClaim(man, \"Owns\", cars)", "expectedOutput": ""}, {"Line": 416, "Input": "Jericho ate some of the berries.", "actualOutput": "RelationClaim(jericho,\"Ate\",berries)", "expectedOutput": ""}, {"Line": 417, "Input": "Forrest went to the shop before Jericho went to the beach.", "actualOutput": "RelationClaim(forrest,\"WentTo\",shop)\nRelationClaim(jericho,\"WentTo\",beach)\nComparativeRelationClaim(forrest,\"WentTo\",shop,\"Before\",jericho,\"WentTo\",beach)", "expectedOutput": ""}, {"Line": 418, "Input": "The only pair of glasses has been lost.", "actualOutput": "PropertyClaim(pair,\"IsTheOnly\",glasses)\nNegatedPropertyClaim(glasses,\"Exists\",True)\nNegatedRelationClaim(pair,\"Has\",glasses)\nNegatedRelationClaim(pair,\"Lost\",glasses)", "expectedOutput": ""}, {"Line": 419, "Input": "Team A made this project possible.", "actualOutput": "RelationClaim(team, \"MadePossible\", project)", "expectedOutput": ""}, {"Line": 420, "Input": "Team B made every mistake possible.", "actualOutput": "NegatedPropertyClaim(team,\"HasProperty\",\"perfect\")\nNegatedRelationClaim(team,\"Made\",mistake)\nRelationClaim(mistake,\"IsA\",possible_mistake)\nPropertyClaim(possible_mistake,\"HasProperty\",\"every\")", "expectedOutput": ""}, {"Line": 421, "Input": "#startnewcontext", "actualOutput": "RelationClaim(\"actor\",\"isin\",\"movie\")\nRelationClaim(\"keanu_reef\",\"play\",\"neo\")\nRelationClaim(\"keanu_reef\",\"play\",\"character\")\nRelationClaim(\"neo\",\"isa\",\"character\")\nRelationClaim(\"dracula\",\"isa\",\"horror_movie\")\nRelationClaim(\"happy_gilmore\",\"isa\",\"comedy_movie\")\nRelationClaim(\"rich_man\",\"own\",\"bike\")\nRelationClaim(\"man\",\"isa\",\"young\")\nRelationClaim(\"man\",\"own\",\"car\")\nRelationClaim(\"cat\",\"isa\",\"mammal\")\nRelationClaim(\"jericho\",\"eat\",\"berry\")\nRelationClaim(\"forrest\",\"wentto\",\"shop\")\nRelationClaim(\"jericho\",\"wentto\",\"beach\")\nRelationClaim(\"pair\",\"istheonly\",\"glass\")\nNegatedRelationClaim(\"istheonly\",\"isa\",\"have\")\nNegatedRelationClaim(\"pair\",\"have\",\"glass\")\nNegatedRelationClaim(\"istheonly\",\"isa\",\"lose\")\nNegatedRelationClaim(\"pair\",\"lose", "expectedOutput": ""}, {"Line": 422, "Input": "", "actualOutput": "", "expectedOutput": ""}, {"Line": 423, "Input": "Tell me about Mr. Magoo?", "actualOutput": "There is no mention of Mr. Magoo in the given Memory, so the answer is \"unknown\" with a certainty value of 0.", "expectedOutput": "Mr. Magoo is a popular cartoon character from the 1940s. He is known for being comically near-sighted and was voiced by Bobby Backus."}, {"Line": 424, "Input": "Who is the popular cartoon character from the 1940's?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "Mr. Magoo"}, {"Line": 425, "Input": "What is Mr. Magoo known for?", "actualOutput": "There is no memory item that mentions Mr. Magoo, so there is no information available.", "expectedOutput": "For being comically near-sighted"}, {"Line": 426, "Input": "Who was Mr. Magoo voiced by?", "actualOutput": "Memory does not contain information about who voiced Mr. Magoo.", "expectedOutput": "Bobby Backus"}, {"Line": 427, "Input": "When is Jim's party?", "actualOutput": "Jim's party is hypothetically scheduled for today at either 4 pm or 5 pm according to memory items i=1, i=3, and i=4 with a certainty of 0.7368.", "expectedOutput": "At 5 PM today"}, {"Line": 428, "Input": "Is Jim's party at 4 pm?", "actualOutput": "Memory item i=21 states that Jim's party is at 4 pm with a certainty of 0.8214285.", "expectedOutput": "\"No, at 5 PM today\""}, {"Line": 429, "Input": "Does Tina want a dog?", "actualOutput": "Memory item i=4 states that Tina wants a dog with a certainty of 0.736842105263158.", "expectedOutput": "\"No, a cat\""}, {"Line": 430, "Input": "What does Tina want?", "actualOutput": "Tina wants a dog according to memory item i=21 with a certainty of 0.8214285.", "expectedOutput": "A cat"}, {"Line": 431, "Input": "What has been lost?", "actualOutput": "Memory does not provide a clear answer on what has been lost. Items i15 and i18 suggest a glass may have been lost, but with low certainty values.", "expectedOutput": "Pair of glasses"}, {"Line": 432, "Input": "What kind of dress does Mrs. White wear?", "actualOutput": "Mrs. White's dress is not mentioned in Memory. None of the memory items provide a relevant answer.", "expectedOutput": "White dresses"}, {"Line": 433, "Input": "What kind of tie does Aubrey wear?", "actualOutput": "Aubrey wears a white tie according to memory item i=1 with a certainty of 0.641.", "expectedOutput": "Black ties"}, {"Line": 434, "Input": "What kind of dress does Mrs. Black wear?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "Black dresses"}, {"Line": 435, "Input": "What kind of tie does Mr. White wear?", "actualOutput": "Mr. White wears a white tie according to memory item 4 with a certainty of 0.736842105263158.", "expectedOutput": "White ties"}, {"Line": 436, "Input": "Is Taylor Keegan female?", "actualOutput": "Memory does not contain information about Taylor Keegan's gender.", "expectedOutput": "yes"}, {"Line": 437, "Input": "Is Taylor Keegan male?", "actualOutput": "There is no memory item that directly states whether Taylor Keegan is male or not.", "expectedOutput": "\"No, female\""}, {"Line": 438, "Input": "Is Taylor Monegan male?", "actualOutput": "There is no memory item that states whether Taylor Monegan is male or not.", "expectedOutput": "yes"}, {"Line": 439, "Input": "Is Taylor Monegan female?", "actualOutput": "Memory does not contain information about Taylor Monegan's gender.", "expectedOutput": "\"No, male\""}, {"Line": 440, "Input": "How tall is Kendrick?", "actualOutput": "There is no memory item that provides information on Kendrick's height.", "expectedOutput": "very"}, {"Line": 441, "Input": "How tall is Dr. Murphy?", "actualOutput": "There is no memory item that provides information on Dr. Murphy's height.", "expectedOutput": "very"}, {"Line": 442, "Input": "How tall is Dr. Kendrick Murphy Jr.?", "actualOutput": "There is no memory item that provides information on the height of Dr. Kendrick Murphy Jr.", "expectedOutput": "very"}, {"Line": 443, "Input": "How tall is Mr. Murphy?", "actualOutput": "There is no memory item that directly states Mr. Murphy's height, so it cannot be determined from the given memory contents.", "expectedOutput": "very"}, {"Line": 444, "Input": "How tall is Kendrick Murphy?", "actualOutput": "There is no memory item that provides information on Kendrick Murphy's height.", "expectedOutput": "very"}, {"Line": 445, "Input": "How tall is Kendrick Marmion Murphy?", "actualOutput": "There is no memory item that provides information on Kendrick Marmion Murphy's height.", "expectedOutput": "very"}, {"Line": 446, "Input": "Who is giving a presentation?", "actualOutput": "The North American Society for Mari is giving a presentation according to Memory. Memory item i=4 has a certainty value of 0.736842105263158.", "expectedOutput": "The North American Society for Marine Mammal Research"}, {"Line": 447, "Input": "Where is the organization?", "actualOutput": "The organization is the North American Society for Marijuana and it is located in memory item i=0 with a certainty of 0.7368.", "expectedOutput": "In Boston"}, {"Line": 448, "Input": "Where is the North American Society for Marine Mammal Research?", "actualOutput": "The north american society for marine mammal research is an organization, with a certainty value of 0.8214285, mentioned in memory item 20.", "expectedOutput": "In Boston"}, {"Line": 449, "Input": "What is Carl's first name?", "actualOutput": "There is no memory item that provides Carl's first name, so it cannot be answered based on memory content only.", "expectedOutput": "Carl"}, {"Line": 450, "Input": "What is Carl's full name?", "actualOutput": "There is no memory item that provides Carl's full name.", "expectedOutput": "Carl Austin Weathers"}, {"Line": 451, "Input": "Is Jasmine a team?", "actualOutput": "Jasmine is hypothetically part of a team according to Memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 452, "Input": "Are Robin and Jasmine a team?", "actualOutput": "Yes, according to memory items i=2 and i=18, there is a high probability (0.837826) that Robin and Jasmine are part of the same team.", "expectedOutput": "yes"}, {"Line": 453, "Input": "Robin and Jasmine are lawyers.", "actualOutput": "RelationClaim(\"robin\",\"IsA\",\"lawyer\")\nRelationClaim(\"jasmine\",\"IsA\",\"lawyer\")", "expectedOutput": ""}, {"Line": 454, "Input": "Is Robin a lawyer?", "actualOutput": "Memory item i=8 states that \"robin isa lawyer\" with a certainty of 0.59437184, indicating a low probability.", "expectedOutput": "yes"}, {"Line": 455, "Input": "Is Jasmine a lawyer?", "actualOutput": "Jasmine is possibly a lawyer according to memory item 23 with a certainty of 0.575.", "expectedOutput": "yes"}, {"Line": 456, "Input": "Are Robin and Jasmine lawyers?", "actualOutput": "Memory item i=24 states that Jasmine is a lawyer with a certainty of 0.575. There is no memory item stating that Robin is a lawyer.", "expectedOutput": "yes"}, {"Line": 457, "Input": "Which cars are red?", "actualOutput": "Memory item 2 states that a car has the property of being red with a certainty of 0.736842105263158.", "expectedOutput": "Every car"}, {"Line": 458, "Input": "Did Jericho eat all of the berries?", "actualOutput": "Memory does not provide enough information to determine if Jericho ate all of the berries.", "expectedOutput": "\"No, some of the berries\""}, {"Line": 459, "Input": "When did Forrest go to the shop?", "actualOutput": "Forrest went to the shop according to memory item i=2 with a hypothetical truth certainty of 0.7368.", "expectedOutput": "Before Jericho went to the beach"}, {"Line": 460, "Input": "Why does Cindy eat apples?", "actualOutput": "According to Memory, Cindy eats apples hypothetically (i=4) with a certainty of 0.736842105263158.", "expectedOutput": "So that the doctor stays away"}, {"Line": 461, "Input": "Will Carla eat pie?", "actualOutput": "According to memory item i=4, it is hypothetically true with a certainty of 0.7368 that Carla will eat pie.", "expectedOutput": "Yes"}, {"Line": 462, "Input": "Will Carla have eaten pie?", "actualOutput": "Memory item i=23 states that Carla ate pie with a certainty of 0.8214285.", "expectedOutput": "Yes"}, {"Line": 463, "Input": "Will Carla be eating pie?", "actualOutput": "Memory item i=23 states that Carla eat pie with a certainty of 0.8214285. It is likely that Carla will eat pie.", "expectedOutput": "Yes"}, {"Line": 464, "Input": "Is Carla eating pie?", "actualOutput": "Memory item i=23 states that Carla eat pie with a certainty of 0.8214285. Therefore, it is probable that Carla is eating pie.", "expectedOutput": "I don't know"}, {"Line": 465, "Input": "What is Carla eating?", "actualOutput": "Carla is eating pie according to memory item i=23 with a certainty of 0.8214285.", "expectedOutput": "I don't know"}, {"Line": 466, "Input": "What did Carla eat?", "actualOutput": "Carla ate pie according to memory item i=23 with a certainty of 0.8214285.", "expectedOutput": "Pie"}, {"Line": 467, "Input": "What was Carla eating?", "actualOutput": "Carla was eating pie according to memory item i=23 with a certainty of 0.8214285.", "expectedOutput": "Pie"}, {"Line": 468, "Input": "What has Carla eaten?", "actualOutput": "Carla has eaten pie according to memory. Memory item i=23 with a certainty of 0.8214285.", "expectedOutput": "Pie"}, {"Line": 469, "Input": "What will Carla copy?", "actualOutput": "Carla will copy a report according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "The reports"}, {"Line": 470, "Input": "Will Carla copy the reports?", "actualOutput": "Memory item i=22 suggests that Carla is copying a report, with a certainty of 0.8214285.", "expectedOutput": "Yes"}, {"Line": 471, "Input": "Will Carla have copied the reports?", "actualOutput": "According to memory item i=22, Carla is copying the report with a certainty of 0.8214285.", "expectedOutput": "Yes"}, {"Line": 472, "Input": "Is Carla going to copy the reports?", "actualOutput": "Memory item i=22 suggests that Carla is currently copying a report with a certainty of 0.8214285.", "expectedOutput": "Yes"}, {"Line": 473, "Input": "Will Carla be copying the reports?", "actualOutput": "Memory item i=22 suggests that Carla is currently copying a report with a certainty of 0.8214285.", "expectedOutput": "Yes"}, {"Line": 474, "Input": "Is Carla copying the reports?", "actualOutput": "Yes, according to memory item i=22, Carla is copying the report with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 475, "Input": "Was Carla copying the reports?", "actualOutput": "Yes, according to memory item i=22, Carla is copying the report with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 476, "Input": "What has Carla copied?", "actualOutput": "Carla has copied a report according to memory. The memory item is i=22 with a certainty of 0.8214285.", "expectedOutput": "The reports"}, {"Line": 477, "Input": "What did Carla copy?", "actualOutput": "Carla copied a report according to memory. The memory item is i=22 with a certainty of 0.8214285.", "expectedOutput": "The reports"}, {"Line": 478, "Input": "What had Carla copied?", "actualOutput": "Carla copied a report according to memory item i=22 with a certainty of 0.8214285.", "expectedOutput": "The reports"}, {"Line": 479, "Input": "Had Carla been copying the reports?", "actualOutput": "Yes, according to memory item i=22, Carla is copying the report with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 480, "Input": "Has Carla been copying the reports?", "actualOutput": "Yes, according to memory item i=22, Carla is copying the report with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 481, "Input": "Who will Carla email?", "actualOutput": "Carla will email Jenny according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "Jenny"}, {"Line": 482, "Input": "Who will Carla have emailed?", "actualOutput": "Carla will email Jenny according to memory item i=21 with a certainty of 0.8214285.", "expectedOutput": "Jenny"}, {"Line": 483, "Input": "Who is Carla going to email?", "actualOutput": "Carla is going to email Jenny according to memory. Memory item i=21 has a certainty value of 0.8214285.", "expectedOutput": "Jenny"}, {"Line": 484, "Input": "Who will Carla be emailing?", "actualOutput": "Carla will be emailing Jenny according to memory. Memory item i=21 has a certainty of 0.8214285.", "expectedOutput": "Jenny"}, {"Line": 485, "Input": "Who will Carla have been emailing?", "actualOutput": "Carla will have been emailing Jenny according to memory item i=21 with a certainty of 0.8214285.", "expectedOutput": "Jenny"}, {"Line": 486, "Input": "Who is Carla emailing?", "actualOutput": "Carla is emailing Jenny according to memory item i=21 with a certainty of 0.8214285.", "expectedOutput": "Jenny"}, {"Line": 487, "Input": "Who did Raquel sing a song to?", "actualOutput": "Raquel sang a song to Martha according to memory item i=2 with a certainty of 0.736842105263158.", "expectedOutput": "Martha"}, {"Line": 488, "Input": "When will Julius bring the cake?", "actualOutput": "Julius will bring the cake hypothetically true with a certainty of 0.736842105263158, according to memory item i=3.", "expectedOutput": "in a few minutes"}, {"Line": 489, "Input": "When will I feed the dog?", "actualOutput": "Memory item i=4 states \"i feed dog\" with a certainty of 0.736842105263158, but it is hypothetically true.", "expectedOutput": "When you get home"}, {"Line": 490, "Input": "What did Zachary say?", "actualOutput": "Zachary said Carla according to memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "Carla gave the materials to Wilma"}, {"Line": 491, "Input": "What did Zachary say Carla did?", "actualOutput": "Zachary said Carla did something, but we don't know what. This is memory item i=17 with a certainty of 0.8214285.", "expectedOutput": "Carla gave the materials to Wilma"}, {"Line": 492, "Input": "What was updated?", "actualOutput": "The actor was updated hypothetically true with a certainty of 0.736842105263158, at memory item i=0.", "expectedOutput": "The contact numbers"}, {"Line": 493, "Input": "Which numbers were updated?", "actualOutput": "It is unclear which numbers were updated according to Memory as there is no information provided on updates.", "expectedOutput": "The contact numbers"}, {"Line": 494, "Input": "Who gave the numbers to Miranda?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "Carla"}, {"Line": 495, "Input": "Who did Carla give the numbers to?", "actualOutput": "Carla gave contact_number to Miranda according to memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "Miranda"}, {"Line": 496, "Input": "Which numbers did Carla give to Miranda?", "actualOutput": "According to Memory, Carla gave material to Miranda with a certainty value of 0.736842105263158 at memory item i=4.", "expectedOutput": "The contact numbers"}, {"Line": 497, "Input": "Which numbers did Erina update?", "actualOutput": "Erina updated the contact_number, which is memory item i=0, with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "The contact numbers"}, {"Line": 498, "Input": "Who gave Miranda the numbers Erina updated?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "Carla"}, {"Line": 499, "Input": "Why did Selena look over the plan?", "actualOutput": "Selena looked over the tax plan hypothetically, with a certainty of 0.7368, according to memory item i=0.", "expectedOutput": "So that Selena could prepare to answer Miriam's questions"}, {"Line": 500, "Input": "Who looked over the plan?", "actualOutput": "Selena looked over the tax plan. Memory item i=7 with certainty=0.8214285.", "expectedOutput": "Selena"}, {"Line": 501, "Input": "What does Miriam have?", "actualOutput": "Miriam has a question about tax plan according to Memory. This is memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "Questions"}, {"Line": 502, "Input": "Who has questions?", "actualOutput": "Miriam has a question about the tax plan. Memory item 11 has a certainty value of 0.8214285.", "expectedOutput": "Miriam"}, {"Line": 503, "Input": "What is Selena prepared to do?", "actualOutput": "Selena looked over tax_plan (i=9) and is likely prepared to discuss or make decisions related to it.", "expectedOutput": "To answer Miriam's questions"}, {"Line": 504, "Input": "What did Kayla know?", "actualOutput": "Kayla knew a pamphlet, according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "The pamphlet would cover all the talking points"}, {"Line": 505, "Input": "What did the pamphlet cover?", "actualOutput": "The pamphlet cover talked about a talking point, with a certainty of 0.7368. This is memory item i=0.", "expectedOutput": "All the talking points"}, {"Line": 506, "Input": "What was Kayla's staff looking for?", "actualOutput": "Kayla's staff were looking for a talking point, according to memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "All the talking points"}, {"Line": 507, "Input": "Whose staff was looking for all the talking points?", "actualOutput": "Memory item i=6 states that \"staff look_for talking_point\" with a certainty of 0.8214285. It is not specified whose staff it is.", "expectedOutput": "Kayla's"}, {"Line": 508, "Input": "Whose staff was looking for points the pamphlet covered?", "actualOutput": "The staff were looking for points the pamphlet covered according to memory item i=6 with a certainty of 0.8214285.", "expectedOutput": "Kayla's"}, {"Line": 509, "Input": "Which talking points did the pamphlet cover?", "actualOutput": "Memory does not provide information on which talking points the pamphlet covered. No memory item i is relevant to this question.", "expectedOutput": "All the talking points"}, {"Line": 510, "Input": "What kind of points did the pamphlet cover?", "actualOutput": "The pamphlet covered talking points, according to Memory. This information is in memory item i=4 with a certainty of 0.8214285.", "expectedOutput": "All the talking points"}, {"Line": 511, "Input": "What covered the points?", "actualOutput": "Memory item i=4 covered the talking points and had a certainty value of 0.8214285.", "expectedOutput": "The pamphlet"}, {"Line": 512, "Input": "What did Carla ask Miranda to do?", "actualOutput": "Carla asked Miranda to do something, according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "To clarify the question about the quarterly revenue made by Miranda's company before taxes"}, {"Line": 513, "Input": "What kind of revenue was the question about?", "actualOutput": "The question was about quarterly revenue and it was mentioned in memory item i=2 with a certainty of 0.736842105263158.", "expectedOutput": "The quarterly revenue made by Miranda's company before taxes"}, {"Line": 514, "Input": "Who owns the company?", "actualOutput": "Memory does not contain information about who owns the company.", "expectedOutput": "Miranda"}, {"Line": 515, "Input": "Who did Carla send the blueprints to?", "actualOutput": "Carla sent blueprints to someone, but it is not specified who in Memory. (i=4, certainty=0.736842105263158)", "expectedOutput": "Carla's boss"}, {"Line": 516, "Input": "Who did Carla send the blueprints?", "actualOutput": "Carla sent blueprints to an unknown recipient according to memory item i=4 with a certainty value of 0.6411150125896854.", "expectedOutput": "Carla's boss"}, {"Line": 517, "Input": "Who were the blueprints sent to?", "actualOutput": "The blueprints were sent by Carla, but it is uncertain to whom. Memory item i=5 has the highest certainty value of 0.8214285.", "expectedOutput": "Carla's boss"}, {"Line": 518, "Input": "Who did Kayla brew the coffee for?", "actualOutput": "Kayla brewed coffee for Terrence according to memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "Terrence"}, {"Line": 519, "Input": "Who did Kayla brew another batch of coffee?", "actualOutput": "Kayla brewed for Terrence (i=3) with a certainty of 0.8214285, but it is uncertain if she brewed another batch of coffee.", "expectedOutput": "Terrence"}, {"Line": 520, "Input": "Who did Kayla give twenty dollars?", "actualOutput": "Kayla gave twenty dollars, hypothetically, but it is uncertain to whom. This is memory item i=3 with a certainty of 0.6411150125896854.", "expectedOutput": "Mike"}, {"Line": 521, "Input": "Who did Kayla give twenty dollars to?", "actualOutput": "Kayla gave twenty dollars to an unknown recipient according to Memory item i=3 with a certainty of 0.641.", "expectedOutput": "Mike"}, {"Line": 522, "Input": "Who did Kayla give the money?", "actualOutput": "Kayla gave twenty dollars hypothetically, with a certainty of 0.641, according to memory item i=3. The recipient is not specified.", "expectedOutput": "Mike"}, {"Line": 523, "Input": "Who did Kayla give the amount to?", "actualOutput": "Kayla gave twenty dollars, according to memory item i=3 with a certainty of 0.6411150125896854.", "expectedOutput": "Mike"}, {"Line": 524, "Input": "How much did Kayla give?", "actualOutput": "Kayla gave twenty dollars according to Memory. This is memory item i=3 with a certainty of 0.6411150125896854.", "expectedOutput": "$20"}, {"Line": 525, "Input": "What amount did Kayla give Mike?", "actualOutput": "Kayla gave something to Mike, with a hypothetical truth value of 0.736842105263158, in memory item i=4. The exact amount is not specified.", "expectedOutput": "$20"}, {"Line": 526, "Input": "How much money was given to Mike?", "actualOutput": "Memory item i=3 states that Mike has twenty dollars, with a certainty of 0.829566.", "expectedOutput": "$20"}, {"Line": 527, "Input": "Carrot is to vegetable as apple is to what?", "actualOutput": "According to Memory, apple is hypothetically true to have been bought by Lara or Tom (items i=1 or i=2) with a certainty of 0.736842105263158.", "expectedOutput": "fruit"}, {"Line": 528, "Input": "Produce is to food as carrot is to what?", "actualOutput": "Memory does not provide a direct answer to the question.", "expectedOutput": "vegetable"}, {"Line": 529, "Input": "Produce is to ripeness as animal is to what?", "actualOutput": "Memory does not provide an answer to this question.", "expectedOutput": "gender"}, {"Line": 530, "Input": "Mother is to child as grandmother is to what?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "grandchild"}, {"Line": 531, "Input": "Engine is to sparkplug as car is to what?", "actualOutput": "According to Memory, car is to owner (i=0) with a certainty of 0.736842105263158.", "expectedOutput": "wheel"}, {"Line": 532, "Input": "Tea is to caffeine as wine is to what?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "alcohol"}, {"Line": 533, "Input": "Carla ducked.", "actualOutput": "RelationClaim(\"carla\",\"Ducked\",null)", "expectedOutput": ""}, {"Line": 534, "Input": "Clifton saw her duck.", "actualOutput": "RelationClaim(clifton, \"Saw\", her_duck)\nNegatedRelationClaim(clifton, \"DidNotSee\", her_duck)\nRelationClaim(her_duck, \"IsA\", duck)\nPropertyClaim(her_duck, \"HasProperty\", cute)", "expectedOutput": ""}, {"Line": 535, "Input": "Did Clifton see Carla duck?", "actualOutput": "Memory item i=23 suggests that Clifton saw a duck, but there is no certainty about whether it was Carla's duck.", "expectedOutput": "Yes"}, {"Line": 536, "Input": "Did Clifton see Carla's duck?", "actualOutput": "Memory item i=19 suggests that Clifton saw a duck, but it is uncertain if it was Carla's duck. Certainty=0.5000354542491013.", "expectedOutput": "\"No, Carla\""}, {"Line": 537, "Input": "Jeannie is Carla's friend.", "actualOutput": "RelationClaim(\"jeannie\",\"IsA\",\"friend\")\nRelationClaim(\"jeannie\",\"HasProperty\",\"friend of Carla\")\nRelationClaim(\"Carla\",\"HasProperty\",\"friend of Jeannie\")", "expectedOutput": ""}, {"Line": 538, "Input": "Jeannie has a duck.", "actualOutput": "PropertyClaim(\"jeannie\",\"Has\", \"duck\")\nRelationClaim(\"duck\", \"IsA\", \"animal\")", "expectedOutput": ""}, {"Line": 539, "Input": "Clifton saw her duck.", "actualOutput": "RelationClaim(clifton, \"Saw\", her_duck)\nNegatedRelationClaim(clifton, \"Saw\", duck)\nRelationClaim(her_duck, \"IsA\", duck)", "expectedOutput": ""}, {"Line": 540, "Input": "Did Clifton see Jeannie duck?", "actualOutput": "Memory item i=15 suggests that Jeannie has a duck, but there is no certainty value for whether Clifton saw it.", "expectedOutput": "\"No, Carla\""}, {"Line": 541, "Input": "Did Clifton see Jeannie's duck?", "actualOutput": "Memory item i=15 suggests that Jeannie has a duck, but there is no certainty value for whether Clifton saw it.", "expectedOutput": "Yes"}, {"Line": 542, "Input": "If Sally is a girl then say Sally is funny.?", "actualOutput": "There is no memory item that directly answers the question, so the answer is uncertain.", "expectedOutput": "Sally is funny"}, {"Line": 543, "Input": "If Sally is a boy then say Sally is interesting.?", "actualOutput": "There is no memory item that directly addresses whether Sally is a boy or not, so the answer cannot be determined with certainty.", "expectedOutput": "\"No, girl\""}, {"Line": 544, "Input": "Does Jim receive pictures?", "actualOutput": "Jim receives pictures according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 545, "Input": "What will Jim download?", "actualOutput": "Jim will download \"them\" according to memory item i=0 with a certainty of 0.615.", "expectedOutput": "I don't know"}, {"Line": 546, "Input": "Will Jim download pictures?", "actualOutput": "Memory item i=4 suggests that Jim will download pictures with a certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 547, "Input": "Jim receives pictures.", "actualOutput": "RelationClaim(jim, \"Receive\", pictures)", "expectedOutput": ""}, {"Line": 548, "Input": "Does Jim receive envelopes?", "actualOutput": "There is no memory item indicating that Jim received envelopes, so the probability is 0.", "expectedOutput": "\"No, pictures\""}, {"Line": 549, "Input": "Will Jim download pictures?", "actualOutput": "According to memory item 23, Jim will download pictures with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 550, "Input": "Does Jim receive pictures?", "actualOutput": "Yes, Jim receives pictures according to memory item 24 with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 551, "Input": "Will Jim receive new emails?", "actualOutput": "There is a memory item (i=24) that suggests Jim will receive new emails with high certainty.", "expectedOutput": "\"No, pictures\""}, {"Line": 552, "Input": "Will Logan receive new emails?", "actualOutput": "According to Memory, it is hypothetically false that Logan will receive new emails (i=4, certainty=0.263).", "expectedOutput": "I don't know"}, {"Line": 553, "Input": "Is Logan's inbox full?", "actualOutput": "Memory item i=0 suggests that Logan's inbox is hypothetically false with a certainty of 0.263.", "expectedOutput": "I don't know"}, {"Line": 554, "Input": "Logan's inbox is full.", "actualOutput": "PropertyClaim(\"logan's inbox\",\"IsFull\",\"full\")", "expectedOutput": ""}, {"Line": 555, "Input": "Is Logan's outbox full?", "actualOutput": "Memory item i=19 states that Logan's inbox is full, but there is no information about his outbox. Uncertain.", "expectedOutput": "I don't know"}, {"Line": 556, "Input": "Is Logan's inbox full?", "actualOutput": "Memory item i=19 states that \"inbox isfull logan\" with a certainty of 0.1785715, indicating that it is likely not full.", "expectedOutput": "yes"}, {"Line": 557, "Input": "Will Logan receive new emails?", "actualOutput": "There is a memory item (i=23) that suggests Logan will not receive new emails with low certainty (0.1785715).", "expectedOutput": "no"}, {"Line": 558, "Input": "Is Marcus early?", "actualOutput": "There is no memory item that directly answers whether Marcus is early.", "expectedOutput": "I don't know"}, {"Line": 559, "Input": "Does Marcus clean the blackboards?", "actualOutput": "Memory item i=1 states that \"marcus clean blackboard\" with a certainty of 0.736842105263158, indicating a high probability that Marcus did clean the blackboards.", "expectedOutput": "I don't know"}, {"Line": 560, "Input": "Marcus is early.", "actualOutput": "RelationClaim(marcus,\"IsA\",person)\nPropertyClaim(marcus,\"IsEarly\",True)", "expectedOutput": ""}, {"Line": 561, "Input": "Is Marcus late?", "actualOutput": "There is no memory item indicating whether Marcus is late or not.", "expectedOutput": "I don't know"}, {"Line": 562, "Input": "Is Marcus early?", "actualOutput": "There is no memory item that directly answers whether Marcus is early.", "expectedOutput": "yes"}, {"Line": 563, "Input": "Does Marcus clean the blackboards?", "actualOutput": "Yes, Marcus cleans the blackboard according to memory item i=18 with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 564, "Input": "Does Simon propose at the wedding?", "actualOutput": "Yes, Simon proposes at the wedding according to memory item i=1 with a certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 565, "Input": "Does Marie take pictures?", "actualOutput": "Marie takes pictures according to Memory item i=3 with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 566, "Input": "Simon proposes at the wedding.", "actualOutput": "RelationClaim(\"simon\",\"ProposesAt\",\"wedding\")", "expectedOutput": ""}, {"Line": 567, "Input": "Does Simon propose at the wedding?", "actualOutput": "Memory item i=16 states that Simon proposes at the wedding with a certainty of 0.8214285. It is likely that Simon proposed at the wedding.", "expectedOutput": "Yes"}, {"Line": 568, "Input": "Does Marie take pictures?", "actualOutput": "Marie takes pictures according to Memory, with a certainty value of 0.8214285 at memory item i=19.", "expectedOutput": "Yes"}, {"Line": 569, "Input": "Do you close the window?", "actualOutput": "According to memory item i=3, it is hypothetically true with a certainty of 0.736842105263158 that \"you close the window.\"", "expectedOutput": "I don't know"}, {"Line": 570, "Input": "do you close the window?", "actualOutput": "According to memory item i=0, the window is hypothetically closed, but with low certainty (0.263).", "expectedOutput": "I don't know"}, {"Line": 571, "Input": "You close the window.", "actualOutput": "RelationClaim(\"you\",\"close\",\"window\")\nRelationClaim(\"window\",\"IsA\",\"window\")\nPropertyClaim(\"window\",\"HasProperty\",\"closed\")", "expectedOutput": ""}, {"Line": 572, "Input": "Do you close the window?", "actualOutput": "Yes, I close the window according to memory item 20 with a certainty value of 0.8214285.", "expectedOutput": "yes"}, {"Line": 573, "Input": "Is the window closed?", "actualOutput": "Memory item i=20 states that the truth about the window being closed is contradictory with a certainty of 0.378.", "expectedOutput": "yes"}, {"Line": 574, "Input": "When is Wednesday?", "actualOutput": "There is no information in the given memory about when Wednesday is, so none of the memory items can be identified as the answer.", "expectedOutput": "10/26/2016"}, {"Line": 575, "Input": "When is tomorrow?", "actualOutput": "There is no memory item that directly answers when tomorrow is.", "expectedOutput": "10/22/2016"}, {"Line": 576, "Input": "When is today?", "actualOutput": "Today is a party day according to memory item i=0 with a certainty of 0.8214285.", "expectedOutput": "10/21/2016"}, {"Line": 577, "Input": "When is this week?", "actualOutput": "There is no information in the Memory about when this week is.", "expectedOutput": "from 10/16/2016 to 10/22/2016"}, {"Line": 578, "Input": "When is next week?", "actualOutput": "There is no memory item that directly answers the question of when next week is.", "expectedOutput": "from 10/23/2016 to 10/29/2016"}, {"Line": 579, "Input": "When was last week?", "actualOutput": "There is no information in the memory about when last week was, so it cannot be determined which memory item corresponds to it.", "expectedOutput": "from 10/9/2016 to 10/15/2016"}, {"Line": 580, "Input": "When was last month?", "actualOutput": "There is no memory item that directly states when last month was, so the answer cannot be determined with certainty.", "expectedOutput": "from 9/1/2016 to 9/30/2016"}, {"Line": 581, "Input": "When is this weekend?", "actualOutput": "There is no memory item that directly answers when this weekend is.", "expectedOutput": "from 10/22/2016 to 10/23/2016"}, {"Line": 582, "Input": "When is this Wednesday?", "actualOutput": "There is no information in the Memory about when this Wednesday is.", "expectedOutput": "10/26/2016"}, {"Line": 583, "Input": "When is next Wednesday?", "actualOutput": "There is no memory item that directly answers the question of when next Wednesday is.", "expectedOutput": "10/26/2016"}, {"Line": 584, "Input": "When is next weekend?", "actualOutput": "There is no information in the given memory about when next weekend is.", "expectedOutput": "from 10/29/2016 to 10/30/2016"}, {"Line": 585, "Input": "When is next month?", "actualOutput": "There is no memory item that directly answers when next month is.", "expectedOutput": "from 11/1/2016 to 11/30/2016"}, {"Line": 586, "Input": "When is this year?", "actualOutput": "This year is 1970 according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "from 1/1/2016 to 12/31/2016"}, {"Line": 587, "Input": "When is all week?", "actualOutput": "There is no memory item that directly states when \"all week\" is, so the answer cannot be determined with certainty.", "expectedOutput": "from 10/16/2016 to 10/22/2016"}, {"Line": 588, "Input": "When is all year?", "actualOutput": "Memory item i=19 states \"it is year 1970\" with a certainty of 0.8214285, indicating that all year is 1970 with high probability.", "expectedOutput": "from 1/1/2016 to 12/31/2016"}, {"Line": 589, "Input": "When was yesterday?", "actualOutput": "Yesterday was a day, according to memory item i=0 with a hypothetical truth certainty of 0.7368.", "expectedOutput": "10/20/2016"}, {"Line": 590, "Input": "When was Wednesday?", "actualOutput": "There is no memory item that directly answers the question of when Wednesday was.", "expectedOutput": "10/19/2016"}, {"Line": 591, "Input": "When was last Tuesday?", "actualOutput": "There is no memory item that directly answers the question about last Tuesday.", "expectedOutput": "10/18/2016"}, {"Line": 592, "Input": "When was last weekend?", "actualOutput": "There is no memory item that directly answers the question, so the answer cannot be determined with certainty.", "expectedOutput": "from 10/15/2016 to 10/16/2016"}, {"Line": 593, "Input": "When was last week?", "actualOutput": "There is no memory item that directly states when last week was, so the answer cannot be determined from the given memory contents.", "expectedOutput": "from 10/9/2016 to 10/15/2016"}, {"Line": 594, "Input": "When was last month?", "actualOutput": "There is no memory item that directly states when last month was, so there is no certain answer.", "expectedOutput": "from 9/1/2016 to 9/30/2016"}, {"Line": 595, "Input": "When was last year?", "actualOutput": "Memory item i=19 states \"it is year 1970\" with a certainty of 0.8214285, implying that last year was 1969 with a probability of 0.8214285.", "expectedOutput": "from 1/1/2015 to 12/31/2015"}, {"Line": 596, "Input": "When is the upcoming weekend?", "actualOutput": "There is no memory item that directly answers the question about the upcoming weekend.", "expectedOutput": "from 10/22/2016 to 10/23/2016"}, {"Line": 597, "Input": "When is this upcoming week?", "actualOutput": "There is no memory item that directly answers the question, so the certainty value is 0.", "expectedOutput": "from 10/23/2016 to 10/29/2016"}, {"Line": 598, "Input": "When is this coming weekend?", "actualOutput": "Memory does not contain information about the coming weekend. None of the memory items are relevant.", "expectedOutput": "from 10/22/2016 to 10/23/2016"}, {"Line": 599, "Input": "When is the upcoming Thursday?", "actualOutput": "There is no memory item that directly answers the question about the upcoming Thursday.", "expectedOutput": "10/27/2016"}, {"Line": 600, "Input": "When is the next month?", "actualOutput": "There is no memory item that directly answers the question of when the next month is.", "expectedOutput": "from 11/1/2016 to 11/30/2016"}, {"Line": 601, "Input": "When is the next coming Friday?", "actualOutput": "Memory does not contain information about the next coming Friday.", "expectedOutput": "10/28/2016"}, {"Line": 602, "Input": "When was the last month?", "actualOutput": "There is no memory item that directly states the last month, so it cannot be determined from the given contents.", "expectedOutput": "from 9/1/2016 to 9/30/2016"}, {"Line": 603, "Input": "When is the next coming month?", "actualOutput": "There is no memory item that directly answers the question about the next coming month.", "expectedOutput": "from 11/1/2016 to 11/30/2016"}, {"Line": 604, "Input": "When was this last week?", "actualOutput": "There is no memory item that directly answers the question of when it was last week.", "expectedOutput": "from 10/9/2016 to 10/15/2016"}, {"Line": 605, "Input": "When was the most recent Wednesday?", "actualOutput": "There is no memory item that directly answers the question, so the answer cannot be determined with certainty.", "expectedOutput": "10/19/2016"}, {"Line": 606, "Input": "When was this past weekend?", "actualOutput": "There is no memory item that directly answers the question, so the answer cannot be provided within the given constraints.", "expectedOutput": "from 10/15/2016 to 10/16/2016"}, {"Line": 607, "Input": "When is Tuesday morning?", "actualOutput": "There is no memory item that directly answers the question of when Tuesday morning is.", "expectedOutput": "On 10/25/2016 from 6 AM to noon"}, {"Line": 608, "Input": "When is next Tuesday morning?", "actualOutput": "There is no memory item that directly answers the question about next Tuesday morning.", "expectedOutput": "On 10/25/2016 from 6 AM to noon"}, {"Line": 609, "Input": "When is Panz's birthday?", "actualOutput": "There is no information in Memory about Panz's birthday, so no memory item can be identified.", "expectedOutput": "on 11/20/2016"}, {"Line": 610, "Input": "When is two days after her birthday?", "actualOutput": "Memory does not provide a direct answer to the question.", "expectedOutput": "11/22/2016"}, {"Line": 611, "Input": "What date is a month before her birthday?", "actualOutput": "There is no memory content that directly answers this question.", "expectedOutput": "10/20/2016"}, {"Line": 612, "Input": "When is 2 days after 2 days after her birthday?", "actualOutput": "The answer cannot be determined from the given memory contents.", "expectedOutput": "11/24/2016"}, {"Line": 613, "Input": "What date is the Monday after her birthday?", "actualOutput": "There is no memory content that directly answers this question.", "expectedOutput": "11/21/2016"}, {"Line": 614, "Input": "When is Christmas?", "actualOutput": "There is no memory item that directly states when Christmas is, so Memory cannot provide a certain answer.", "expectedOutput": "12/25/2016"}, {"Line": 615, "Input": "What date is 2 days after Christmas?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "12/27/2016"}, {"Line": 616, "Input": "When is 2 days before Christmas?", "actualOutput": "There is no memory item that directly answers the question of when is 2 days before Christmas.", "expectedOutput": "12/23/2016"}, {"Line": 617, "Input": "When is the Monday before Christmas?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "12/19/2016"}, {"Line": 618, "Input": "What date is the Monday after Christmas?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "12/26/2016"}, {"Line": 619, "Input": "When is 2 days before 2 days before Christmas?", "actualOutput": "The answer cannot be found in the given memory contents.", "expectedOutput": "12/21/2016"}, {"Line": 620, "Input": "What date is 2 days before the Monday before Christmas?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "12/17/2016"}, {"Line": 621, "Input": "When is Anthony's ceremony?", "actualOutput": "Memory does not provide information about Anthony's ceremony, so there is no corresponding memory item i.", "expectedOutput": "On 11/23/2016"}, {"Line": 622, "Input": "Karl will walk home Monday", "actualOutput": "RelationClaim(karl, \"Walks\", home)\nRelationClaim(home, \"IsA\", place)\nPropertyClaim(monday, \"Is\", day)", "expectedOutput": ""}, {"Line": 623, "Input": "When will Karl walk home?", "actualOutput": "Karl will hypothetically walk home at time=789 according to memory item i=19 with a certainty of 0.5000064226146171.", "expectedOutput": "On Monday"}, {"Line": 624, "Input": "When did Google buy DeepMind?", "actualOutput": "Google buying DeepMind is hypothetically true with a certainty of 0.7368, but the exact timing is not specified in the memory.", "expectedOutput": "in 2014"}, {"Line": 625, "Input": "How do you know?", "actualOutput": "According to memory, it is hypothetically true that fruit are good for you (i=0, certainty=0.7368).", "expectedOutput": "money.cnn.com told me earlier today"}, {"Line": 626, "Input": "Can red unicorns fly?", "actualOutput": "Memory item i=2 suggests that red unicorns hypothetically can fly with a certainty of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 627, "Input": "Who told you that?", "actualOutput": "Harvey Paetzold told me hypothetically true information according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "Jane told me earlier today"}, {"Line": 628, "Input": "this is from Jake.", "actualOutput": "RelationClaim(this,\"IsFrom\",jake)", "expectedOutput": ""}, {"Line": 629, "Input": "Amazon released Alexa last year.", "actualOutput": "RelationClaim(\"amazon\",\"released\",\"alexa\")\nNegatedPropertyClaim(\"alexa\",\"isNew\",True) #assuming isNew is the opposite of \"released\"\nPropertyClaim(\"alexa\",\"wasReleasedLastYear\",True)", "expectedOutput": ""}, {"Line": 630, "Input": "What did Amazon release last year?", "actualOutput": "Amazon released Alexa last year according to memory. This is memory item i=20 with a certainty of 0.5000026307029471.", "expectedOutput": "Alexa"}, {"Line": 631, "Input": "How do you know?", "actualOutput": "According to memory, Jim knowingly downloaded pictures with a certainty of 0.821 (i=4).", "expectedOutput": "Jake told me just now"}, {"Line": 632, "Input": "What did a U.S. Navy plane see?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "Help spelled out in palm fronds on a beach on a deserted island in the Pacific"}, {"Line": 633, "Input": "What is AMVER?", "actualOutput": "There is no mention of \"amver\" in the given memory contents.", "expectedOutput": "A Coast Guard voluntary search and rescue program"}, {"Line": 634, "Input": "Which wine is Bill's favorite?", "actualOutput": "There is no memory item that directly states Bill's favorite wine, so it cannot be determined from the given memory contents.", "expectedOutput": "Etna Rosso"}, {"Line": 635, "Input": "Which wine doesn't Bill like?", "actualOutput": "Bill doesn't like white wine (i=4) with a certainty of 0.263.", "expectedOutput": "White wine"}, {"Line": 636, "Input": "Why did James sell his plane?", "actualOutput": "James sold his plane hypothetically true (certainty=0.7368) according to memory item i=4.", "expectedOutput": "Because it is too slow"}, {"Line": 637, "Input": "Who has it now?", "actualOutput": "There is no information in the given memory about who has \"it\" now.", "expectedOutput": "James' neighbor"}, {"Line": 638, "Input": "Who used to own it before?", "actualOutput": "There is no information in the given memory about who used to own something before.", "expectedOutput": "James"}, {"Line": 639, "Input": "What did James buy?", "actualOutput": "James bought a 20_ft item according to memory item i=4 with a certainty of 0.641.", "expectedOutput": "a 20 ft plane"}, {"Line": 640, "Input": "Is the 250 horsepower engine part of the plane?", "actualOutput": "There is no memory item that directly addresses the 250 horsepower engine being part of the plane.", "expectedOutput": "yes"}, {"Line": 641, "Input": "Who will Viola play with?", "actualOutput": "Viola will play with her horse according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "Stan"}, {"Line": 642, "Input": "When will she play with her horse?", "actualOutput": "According to memory item i=21, Viola will play with her horse, with a certainty value of 0.8214285. No specific time frame is mentioned.", "expectedOutput": "At 3 PM"}, {"Line": 643, "Input": "Where will she play with her horse?", "actualOutput": "According to memory item i=21, there is a high probability (certainty=0.8214285) that Viola will play with her horse.", "expectedOutput": "At the park"}, {"Line": 644, "Input": "What did Suzie suggest that Phil do?", "actualOutput": "There is no memory item that mentions Suzie suggesting something to Phil.", "expectedOutput": "That Phil run at 7 AM"}, {"Line": 645, "Input": "When did Suzie suggest that Phil run?", "actualOutput": "The memory does not contain any information about when Suzie suggested that Phil run.", "expectedOutput": "At 7 AM"}, {"Line": 646, "Input": "Tell me who climbed the mountain?", "actualOutput": "Rufus climbed the mountain according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "Rufus"}, {"Line": 647, "Input": "Barry bought Herbie.", "actualOutput": "RelationClaim(barry,bought,herbie)", "expectedOutput": ""}, {"Line": 648, "Input": "Who has Herbie?", "actualOutput": "Barry has herbie according to memory item i=19 with a certainty value of 0.5000006896229934.", "expectedOutput": "Barry"}, {"Line": 649, "Input": "Chad bought Herbie from Barry.", "actualOutput": "RelationClaim(chad, \"Buy\", herbie)\nRelationClaim(herbie, \"BeOwnedBy\", barry)", "expectedOutput": ""}, {"Line": 650, "Input": "Who has Herbie?", "actualOutput": "Barry has Herbie according to memory item i=17 with a certainty value of 0.5000010775359272.", "expectedOutput": "Chad"}, {"Line": 651, "Input": "What did Chad do?", "actualOutput": "Chad hypothetically bought Herbie (i=18) with a certainty of 0.5.", "expectedOutput": "bought Herbie from Barry"}, {"Line": 652, "Input": "Chad sold Herbie.", "actualOutput": "RelationClaim(chad, \"Sold\", herbie)", "expectedOutput": ""}, {"Line": 653, "Input": "Who has Herbie?", "actualOutput": "Chad has Herbie according to Memory, as stated in memory item i=22 with a certainty value of 0.5000010775359272.", "expectedOutput": "I don't know"}, {"Line": 654, "Input": "Andrea has the quarterly reports", "actualOutput": "PropertyClaim(\"andrea\",\"HasProperty\",\"quarterly_reports\")", "expectedOutput": ""}, {"Line": 655, "Input": "Who has the reports?", "actualOutput": "Carla has the reports according to Memory, and it is memory item i=4 with a certainty of 0.8214285.", "expectedOutput": "Andrea"}, {"Line": 656, "Input": "Andrea gave the reports to Jim.", "actualOutput": "RelationClaim(andrea,gave,reports)\nRelationClaim(reports,to,jim)", "expectedOutput": ""}, {"Line": 657, "Input": "Who has the reports?", "actualOutput": "Andrea has the reports according to Memory. This information is in memory item i=22 with a certainty value of 0.5000010775359272.", "expectedOutput": "Jim"}, {"Line": 658, "Input": "Who gave them to him?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "Andrea"}, {"Line": 659, "Input": "Jim gave the reports to Sandra", "actualOutput": "RelationClaim(jim, \"Give\", reports)\nRelationClaim(reports, \"To\", sandra)", "expectedOutput": ""}, {"Line": 660, "Input": "Who gave her them?", "actualOutput": "There is no information in the memory about who gave \"them\" to her.", "expectedOutput": "Jim"}, {"Line": 661, "Input": "Who had the reports before him?", "actualOutput": "Andrea had the reports before him according to Memory, memory item i=20, with a certainty of 0.5000016836498862.", "expectedOutput": "Andrea"}, {"Line": 662, "Input": "Who had the reports after him?", "actualOutput": "Jim had the reports after him according to Memory. Memory item i=23 has a certainty of 0.5000008620287417.", "expectedOutput": "Sandra"}, {"Line": 663, "Input": "Alex wants a dog and a cat.", "actualOutput": "RelationClaim(alex, \"wants\", dog)\nRelationClaim(alex, \"wants\", cat)", "expectedOutput": ""}, {"Line": 664, "Input": "What does Alex want?", "actualOutput": "According to Memory, Alex wants either a dog or a cat with equal probability (50/50 chance). Memory item i=23 or i=24 could represent this.", "expectedOutput": "A dog and a cat"}, {"Line": 665, "Input": "\"Actually, Alex only wants a cat\"", "actualOutput": "NegatedPropertyClaim(alex,\"Want\",dog)\nPropertyClaim(alex,\"Want\",cat)", "expectedOutput": ""}, {"Line": 666, "Input": "What does Alex want?", "actualOutput": "Alex wants either a dog or a cat according to memory items i=2, i=3, i=22, i=23, and i=24 with a certainty of 50%.", "expectedOutput": "A cat"}, {"Line": 667, "Input": "Does Alex want a dog?", "actualOutput": "According to memory item i=20, there is a 50% chance that Alex wants a dog.", "expectedOutput": "\"No, a cat\""}, {"Line": 668, "Input": "\"Is Charles, Ray's favorite turtle?\"?", "actualOutput": "Memory does not contain information about Charles or Ray's favorite turtle.", "expectedOutput": "\"no, Ray's new turtle\""}, {"Line": 669, "Input": "Ray's favorite turtle is Herb.", "actualOutput": "RelationClaim(ray, \"HasFavorite\", turtle)\nRelationClaim(turtle, \"IsA\", herb)", "expectedOutput": ""}, {"Line": 670, "Input": "\"is Ray's favorite turtle, Charles?\"?", "actualOutput": "There is no memory item indicating that Ray's favorite turtle is Charles. Answer: i=N/A, probabilistic sense=0%.", "expectedOutput": "\"no, Herb\""}, {"Line": 671, "Input": "Does Rob have a sister?", "actualOutput": "There is no memory item that directly answers whether Rob has a sister.", "expectedOutput": "yes"}, {"Line": 672, "Input": "What is Rob's sister's cat's name?", "actualOutput": "There is no memory item that provides information about Rob's sister's cat's name.", "expectedOutput": "Toby"}, {"Line": 673, "Input": "Where is Rob's sister's cat?", "actualOutput": "There is no information in the given memory about Rob's sister's cat, so it cannot be determined.", "expectedOutput": "At the veterinarian"}, {"Line": 674, "Input": "Why is Rob's sister's cat at the vet?", "actualOutput": "Memory item i=4 states that the statement \"cat arrived at vet\" is hypothetically false.", "expectedOutput": "because Toby needs some shots"}, {"Line": 675, "Input": "Does Toby need treats?", "actualOutput": "There is no memory item indicating whether Toby needs treats, so it cannot be determined.", "expectedOutput": "\"no, some shots\""}, {"Line": 676, "Input": "Who is Gina's cat?", "actualOutput": "There is no information in Memory about Gina's cat.", "expectedOutput": "Toby"}, {"Line": 677, "Input": "Is Gina's cat friendly?", "actualOutput": "Cannot determine if Gina has a cat or if it is friendly based on the given memory contents.", "expectedOutput": "yes"}, {"Line": 678, "Input": "Is Toby cold blooded?", "actualOutput": "There is no memory item indicating whether Toby is cold-blooded or not.", "expectedOutput": "\"No, warm blooded\""}, {"Line": 679, "Input": "\"Actually, Rob's sister's cat is Moby.\"", "actualOutput": "RelationClaim(cat,\"IsA\",animal)\nRelationClaim(cat,\"HasOwner\",rob's sister)\nRelationClaim(cat,\"NameIs\",moby)", "expectedOutput": ""}, {"Line": 680, "Input": "Who is Gina's cat?", "actualOutput": "There is no information in Memory about Gina's cat.", "expectedOutput": "Moby"}, {"Line": 681, "Input": "Is Robert's sister's cat Toby?", "actualOutput": "Memory item i=4 states that Toby belongs to a cat, but it is uncertain if it is Robert's sister's cat.", "expectedOutput": "\"No, Moby\""}, {"Line": 682, "Input": "Where is Moby?", "actualOutput": "Moby's location is uncertain as there are conflicting memories. Memory item 17 suggests Moby exists, but item 18 suggests Moby is not at the vet.", "expectedOutput": "At the veterinarian"}, {"Line": 683, "Input": "Where is Toby?", "actualOutput": "Toby is at the vet according to memory item i=2 with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 684, "Input": "Does a large pot have tea?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "yes"}, {"Line": 685, "Input": "Does a small pot have tea?", "actualOutput": "There is no memory item that directly answers this question, so the certainty value is 0.", "expectedOutput": "no"}, {"Line": 686, "Input": "The cold pot has milk.", "actualOutput": "PropertyClaim(\"cold pot\",\"HasProperty\",\"milk\")", "expectedOutput": ""}, {"Line": 687, "Input": "Does the small pot have milk?", "actualOutput": "Memory item i=22 states that the cold_pot has milk with a certainty of 0.5.", "expectedOutput": "yes"}, {"Line": 688, "Input": "Who is a teacher of Stan?", "actualOutput": "Murray is a teacher of Stan according to memory. Memory item i=0 or i=1 with a certainty of 0.736842105263158.", "expectedOutput": "Murray"}, {"Line": 689, "Input": "Whose teacher is Murray?", "actualOutput": "Murray is a teacher and teaches Stan, with a probability of 0.8214285 according to memory item i=19.", "expectedOutput": "Stan's"}, {"Line": 690, "Input": "who is running for office?", "actualOutput": "There is no memory item indicating who is running for office.", "expectedOutput": "Ralph"}, {"Line": 691, "Input": "who is Scott's family?", "actualOutput": "There is no memory item that directly answers the question about Scott's family.", "expectedOutput": "\"Ralph, Ethan, and Nan\""}, {"Line": 692, "Input": "Is Nan male?", "actualOutput": "There is no memory item that mentions \"nan\" and therefore no certainty value can be assigned.", "expectedOutput": "\"No, female\""}, {"Line": 693, "Input": "How many sisters does Trevor have?", "actualOutput": "Trevor hypothetically has two sisters according to memory item i=3 with a certainty value of 0.736842105263158.", "expectedOutput": "2"}, {"Line": 694, "Input": "Who are Trevor's sisters?", "actualOutput": "Memory does not provide information on Trevor's sisters.", "expectedOutput": "Alisha and Becky"}, {"Line": 695, "Input": "Who is Kenneth's daughter?", "actualOutput": "There is no information in Memory about Kenneth's daughter.", "expectedOutput": "Kenisha"}, {"Line": 696, "Input": "Which robot is Ronald's?", "actualOutput": "There is no information in the given memory about which robot belongs to Ronald.", "expectedOutput": "Ozmo"}, {"Line": 697, "Input": "Is Jane's book big?", "actualOutput": "Memory item i=3 states that the book has the property of being big with a hypothetical truth certainty of 0.736842105263158. Therefore, it is probable that Jane's book is big.", "expectedOutput": "yes"}, {"Line": 698, "Input": "Is Mike's book small?", "actualOutput": "There is no memory item that directly states whether Mike's book is small or not.", "expectedOutput": "yes"}, {"Line": 699, "Input": "Is Jane's book small?", "actualOutput": "There is no memory item that directly states whether Jane's book is small or not.", "expectedOutput": "\"No, big\""}, {"Line": 700, "Input": "Is Mike's book big?", "actualOutput": "Memory item i=21 states that the book has the property of being big with a certainty value of 0.8214285, so it is likely that Mike's book is big.", "expectedOutput": "\"No, small\""}, {"Line": 701, "Input": "What color is Jane's book?", "actualOutput": "There is no information in Memory about Jane's book color, so the certainty value is 0.", "expectedOutput": "orange"}, {"Line": 702, "Input": "What color is Mike's book?", "actualOutput": "There is no information in Memory about the color of Mike's book.", "expectedOutput": "brown"}, {"Line": 703, "Input": "Is Krista nice?", "actualOutput": "Krista is nice according to memory item i=1 with a certainty value of 0.6707060063224447.", "expectedOutput": "\"yes, very nice\""}, {"Line": 704, "Input": "Who made the case?", "actualOutput": "The lawyer made the case according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "Harvey"}, {"Line": 705, "Input": "Does rain fall directly from the sky?", "actualOutput": "Memory item i=1 states that rain falls directly from the sky with a certainty of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 706, "Input": "Does rain fall directly from the ground?", "actualOutput": "Memory item i=16 states that \"rain falls directly from the sky\" with a certainty value of 0.8214285, indicating that it is likely true.", "expectedOutput": "\"No, the sky\""}, {"Line": 707, "Input": "Do Lily and Charlie have a vase?", "actualOutput": "According to memory item i=3 and i=4, it is hypothetically true that both Lily and Charlie have a vase with a certainty of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 708, "Input": "Does Lily have a vase?", "actualOutput": "According to memory item i=18, Lily has a vase with a certainty value of 0.8214285.", "expectedOutput": "yes"}, {"Line": 709, "Input": "Does Charlie have a vase?", "actualOutput": "According to Memory, Charlie has a vase with a certainty value of 0.8214285 in memory item i=17.", "expectedOutput": "yes"}, {"Line": 710, "Input": "What kind of car will Uber pay for?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "Mid-size rental cars"}, {"Line": 711, "Input": "What type of car will Uber pay for?", "actualOutput": "Memory does not provide information on what type of car Uber will pay for.", "expectedOutput": "Mid-size rental cars"}, {"Line": 712, "Input": "What will not be taken lightly?", "actualOutput": "Memory item i=4 (\"plane hasproperty 20_ft\") will not be taken lightly with a certainty of 0.832.", "expectedOutput": "Any claim against Yahoo"}, {"Line": 713, "Input": "Can the children touch Jon's reptiles?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "yes"}, {"Line": 714, "Input": "Which animals can the children touch?", "actualOutput": "The children can hypothetically touch a small mammal according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "Small mammals and Jon's reptiles"}, {"Line": 715, "Input": "What kind of animals can the children touch?", "actualOutput": "Children can touch small mammals according to memory item i=11 with a certainty of 0.8214285.", "expectedOutput": "Small mammals and Jon's reptiles"}, {"Line": 716, "Input": "What does Amazon give refunds for?", "actualOutput": "Amazon gives refunds for very specific types of defects according to memory item i=2 with a certainty of 0.641.", "expectedOutput": "Very specific defects"}, {"Line": 717, "Input": "Is twenty-second an ordinal?", "actualOutput": "There is no information in Memory about a twenty-second ordinal.", "expectedOutput": "yes"}, {"Line": 718, "Input": "Is smrt@aigo.ai an email address?", "actualOutput": "There is no memory item that mentions smrt@aigo.ai, so it is not an email address according to Memory.", "expectedOutput": "yes"}, {"Line": 719, "Input": "Is 123-4567 a phone number?", "actualOutput": "There is no information in Memory about the phone number 123-4567.", "expectedOutput": "yes"}, {"Line": 720, "Input": "Is ROBO a ticker?", "actualOutput": "There is no memory item that directly answers the question about whether \"robo\" is a ticker.", "expectedOutput": "yes"}, {"Line": 721, "Input": "Is 3 and a half days a time span?", "actualOutput": "Memory does not contain information about 3 and a half days as a time span.", "expectedOutput": "yes"}, {"Line": 722, "Input": "Is 1100 cc a volume?", "actualOutput": "There is no memory item that directly mentions 1100 cc as a volume.", "expectedOutput": "yes"}, {"Line": 723, "Input": "Whose dad bought ice cream and gelato at the creamery?", "actualOutput": "Memory does not provide information about whose dad bought ice cream and gelato at the creamery.", "expectedOutput": "Jill's"}, {"Line": 724, "Input": "Whose daughter is not home?", "actualOutput": "Memory does not provide information on whose daughter is not home.", "expectedOutput": "Dane's"}, {"Line": 725, "Input": "Is Jill home?", "actualOutput": "Memory item i=4 states that \"jill isa home\" with a certainty of 0.2631578947368421, which is hypothetically false.", "expectedOutput": "\"No, Jill is not home\""}, {"Line": 726, "Input": "Why did Jim sell the bike?", "actualOutput": "Memory item i=4: Jim sold the bike. Certainty=0.736842105263158. Reason unknown.", "expectedOutput": "because Jim was sick"}, {"Line": 727, "Input": "Why will the police have to investigate?", "actualOutput": "The police will have to investigate because of memory item i=1 with a certainty of 0.736842105263158.", "expectedOutput": "in order for the police to catch the criminal"}, {"Line": 728, "Input": "Why didn't Jim attend?", "actualOutput": "Jim didn't attend due to memory item i=4, which is hypothetically false with a certainty of 0.263.", "expectedOutput": "due to Jim's illness"}, {"Line": 729, "Input": "Why has Johnny's singing improved?", "actualOutput": "There is no memory item that provides an answer to this question.", "expectedOutput": "Thanks to Johnny's practicing and Johnny's voice coach"}, {"Line": 730, "Input": "Why does Jane want to have some room?", "actualOutput": "Memory item i=3: jane wants to have room with a certainty of 0.736842105263158.", "expectedOutput": "because Jane is going to try a stunt"}, {"Line": 731, "Input": "Does Lara have any children?", "actualOutput": "Lara has 2 children according to memory item i=2 with a hypothetical certainty of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 732, "Input": "How many kids does she have?", "actualOutput": "There is no memory item that directly answers the question of how many kids she has.", "expectedOutput": "2"}, {"Line": 733, "Input": "Does Ella have any emails?", "actualOutput": "According to Memory, Ella has 3 emails (i=3) with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 734, "Input": "Does Ella have 2 emails?", "actualOutput": "According to Memory, Ella has 3 emails (i=9) with a certainty value of 0.8214285.", "expectedOutput": "\"No, 3\""}, {"Line": 735, "Input": "How many letters does Ella have?", "actualOutput": "Ella has 3 emails according to memory item i=9 with a certainty value of 0.8214285.", "expectedOutput": "1"}, {"Line": 736, "Input": "Does George have any apples?", "actualOutput": "There is no information in Memory about whether George has any apples.", "expectedOutput": "no"}, {"Line": 737, "Input": "How much sand does George have?", "actualOutput": "George has a pile of sand, with a certainty value of 0.736842105263158, according to memory item i=2.", "expectedOutput": "pile of sand"}, {"Line": 738, "Input": "How much rope is Alex's?", "actualOutput": "There is no memory item that directly answers the question about the amount of rope belonging to Alex.", "expectedOutput": "60 feet"}, {"Line": 739, "Input": "How much chalk can Henry buy?", "actualOutput": "Henry can buy a lot of chalk according to memory item i=1 with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "\"\"\"a lot of chalk\"\"\""}, {"Line": 740, "Input": "How hot is Henry's car?", "actualOutput": "There is no information in Memory about the temperature of Henry's car.", "expectedOutput": "very"}, {"Line": 741, "Input": "How did Delia cook the pasta?", "actualOutput": "Memory does not provide information on how Delia cooked the pasta.", "expectedOutput": "\"\"\"with the boiler\"\"\""}, {"Line": 742, "Input": "How did Delia drive the truck?", "actualOutput": "Memory item i=4 states that Delia hypothetically bought a truck with a certainty of 0.736842105263158.", "expectedOutput": "dangerously"}, {"Line": 743, "Input": "Did Delia drive the car dangerously?", "actualOutput": "Memory item i=3 states that Delia drove dangerously with a certainty of 0.6411150125896854.", "expectedOutput": "\"No, the truck\""}, {"Line": 744, "Input": "How did Kim dance?", "actualOutput": "There is no memory item that mentions how Kim danced.", "expectedOutput": "Beautifully and gracefully"}, {"Line": 745, "Input": "Did Kim dance gracefully and poorly?", "actualOutput": "There is no memory item that mentions Kim dancing, so it is impossible to answer the question based on memory content.", "expectedOutput": "Beautifully and gracefully"}, {"Line": 746, "Input": "Whose dogs are nice?", "actualOutput": "Memory item i=4 states that \"dog isa nice\" with a hypothetical truth value of 0.736842105263158. It is not specified whose dogs are nice.", "expectedOutput": "\"George, Rodney, Robin, Ella, and Owen's\""}, {"Line": 747, "Input": "Did Delia buy bikes and a missile?", "actualOutput": "Delia bought a bike according to memory item i=4 with a certainty of 0.736842105263158. There is no mention of Delia buying a missile in the given memory.", "expectedOutput": "\"No. A house, bikes, boats, planes, and a car\""}, {"Line": 748, "Input": "Did Allison buy a lot of ships and some sweets?", "actualOutput": "Memory does not contain any information about Allison buying ships or sweets.", "expectedOutput": "\"No. Three cars, some ships, and a lot of sweets\""}, {"Line": 749, "Input": "Did Allison buy ships and mouses?", "actualOutput": "There is no memory item indicating that Allison bought ships and mouses.", "expectedOutput": "\"No. Three cars, some ships, and a lot of sweets\""}, {"Line": 750, "Input": "Did Allison buy 2 cars?", "actualOutput": "There is no memory item indicating that Allison bought 2 cars.", "expectedOutput": "\"No, 3\""}, {"Line": 751, "Input": "Who likes ships and mouses?", "actualOutput": "Paige likes ships (i=4) and Henry likes mouses (i=3). Certainty value: 0.736842105263158.", "expectedOutput": "Paige and Henry"}, {"Line": 752, "Input": "What do Paige and Henry like?", "actualOutput": "Paige likes ships and Henry likes mice according to memory. Paige's preference is in memory item i=4 with a certainty of 0.8214285, while Henry's preference is in memory item i=3 with a certainty of 0.8214285.", "expectedOutput": "ships and mice"}, {"Line": 753, "Input": "What were bought by Tom and Lara?", "actualOutput": "Tom bought oranges (i=0, certainty=0.7368) and apples (i=2, certainty=0.8214). Lara bought apples (i=1, certainty=0.8214).", "expectedOutput": "apples and oranges"}, {"Line": 754, "Input": "What are extremely sweet completely edible flowers?", "actualOutput": "Memory item i=1 states that edible has the property extremely_sweet and i=2 states that edible has the property completely_edible.", "expectedOutput": "lily"}, {"Line": 755, "Input": "Which owls are dangerous?", "actualOutput": "Memory does not provide information on dangerous owls.", "expectedOutput": "\"owls from small, dense forests\""}, {"Line": 756, "Input": "Are owls from small dense forest dangerous?", "actualOutput": "Memory does not provide information on whether owls from small dense forest are dangerous.", "expectedOutput": "yes"}, {"Line": 757, "Input": "Are owls from big dense forest dangerous?", "actualOutput": "Memory does not provide information on whether owls from big dense forest are dangerous. No memory item is relevant to this question.", "expectedOutput": "I don't know"}, {"Line": 758, "Input": "Are owls from dense forest dangerous?", "actualOutput": "Memory does not provide information on whether owls from dense forest are dangerous.", "expectedOutput": "yes"}, {"Line": 759, "Input": "Did Gabe drink hot milk?", "actualOutput": "Memory item i=4 states that \"gabe drink hot\" with a certainty of 0.6411150125896854, but it doesn't specify if it was hot milk.", "expectedOutput": "No. Hot coffee and hot cocoa"}, {"Line": 760, "Input": "Did Gabe drink hot coffee?", "actualOutput": "According to Memory, it is hypothetically true that Gabe drank hot coffee with a certainty value of 0.736842105263158. This information is contained in memory item i=1.", "expectedOutput": "yes"}, {"Line": 761, "Input": "Did Gabe drink hot cocoa?", "actualOutput": "Memory item i=4 suggests that Gabe hypothetically drank hot cocoa with a certainty value of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 762, "Input": "What did Gabe drink?", "actualOutput": "According to memory item i=4, Gabe drank coffee with a certainty of 0.830756.", "expectedOutput": "Hot coffee and hot cocoa"}, {"Line": 763, "Input": "Who ran screaming?", "actualOutput": "Ramon ran screaming according to memory item i=2 with a certainty of 0.736842105263158.", "expectedOutput": "Ramon"}, {"Line": 764, "Input": "Who ran crying?", "actualOutput": "Memory does not contain information about someone running and crying.", "expectedOutput": "I don't know"}, {"Line": 765, "Input": "What did Ramon do?", "actualOutput": "Ramon walked screaming (i=0) with a certainty of 0.263.", "expectedOutput": "Ran screaming"}, {"Line": 766, "Input": "When did Owain remind Cornelia?", "actualOutput": "Owain reminded Cornelia hypothetically true at either noon or 5pm, with a certainty of 0.7368, according to memory item i=2.", "expectedOutput": "At noon"}, {"Line": 767, "Input": "What did Owain remind Cornelia?", "actualOutput": "Owain reminded Cornelia, i=2, with a certainty of 0.8214285.", "expectedOutput": "To run at 5 PM"}, {"Line": 768, "Input": "What book did Kim read?", "actualOutput": "Kim read a book with the property of being orange (i=2) with a certainty of 0.736842105263158.", "expectedOutput": "\"a book about the acidic, cold, hot, and dry conditions of these environments\""}, {"Line": 769, "Input": "Whose dogs terrorize the elderly?", "actualOutput": "Memory item i=4 states that \"dog terrorize elderly\" with a hypothetical truth value of 0.736842105263158, but it does not specify whose dog.", "expectedOutput": "Gio's"}, {"Line": 770, "Input": "Where are Gio's dogs from?", "actualOutput": "There is no memory item that directly answers where Gio's dogs are from.", "expectedOutput": "From Alesso and Chiara's mafia"}, {"Line": 771, "Input": "Who around the house does Lara like?", "actualOutput": "Lara likes Henry according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "Henry"}, {"Line": 772, "Input": "Where on the ship did Henry hide the gold?", "actualOutput": "Memory does not provide a certain answer to where Henry hid the gold.", "expectedOutput": "in the red cabinet on the ship"}, {"Line": 773, "Input": "Where on the ship did Henry hide the diamond?", "actualOutput": "Memory does not provide a certain answer to where Henry hid the diamond. Item i=4 suggests it is hypothetically true.", "expectedOutput": "in the blue cabinet on the ship"}, {"Line": 774, "Input": "Where on the car did Henry hide the gold?", "actualOutput": "Memory does not provide a certain answer to where Henry hid the gold. Memory item i=4 suggests he hid it, but with a certainty of only 0.7368.", "expectedOutput": "I don't know"}, {"Line": 775, "Input": "Is the rolling bus blue?", "actualOutput": "There is no information in Memory about the color of the rolling bus.", "expectedOutput": "\"No, green\""}, {"Line": 776, "Input": "What is an example of tree fruit?", "actualOutput": "Memory item i=0 states that fruit flies like banana with a certainty of 0.7368. Banana is a tree fruit.", "expectedOutput": "persimmon"}, {"Line": 777, "Input": "What are the three sources of European Union law?", "actualOutput": "Sources of EU law: i=unknown (not mentioned in memory). Certainty: uncertain.", "expectedOutput": "\"Primary law, secondary law, and supplementary law\""}, {"Line": 778, "Input": "Is Arnold Smith a drummer?", "actualOutput": "Arnold Smith is hypothetically a drummer according to memory item i=2 with a certainty of 0.736842105263158.", "expectedOutput": "\"No, the mechanic from the body shop\""}, {"Line": 779, "Input": "Is Arnold Grohl from the body shop?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "\"No, the grunge band\""}, {"Line": 780, "Input": "What does Sally enjoy?", "actualOutput": "Sally enjoys running marathon and swimming according to memory. Memory item i=3 and i=4.", "expectedOutput": "Swimming and running marathons"}, {"Line": 781, "Input": "What does Matthew want to do?", "actualOutput": "Matthew wants to send something according to Memory. This information is contained in memory item i=2 to i=4 with a certainty value of at least 0.6707.", "expectedOutput": "To send a postcard and a package"}, {"Line": 782, "Input": "Who did the woman who was on the stage see?", "actualOutput": "The woman who was on stage hypothetically saw Sally with a certainty of 0.736. (Memory item i=2)", "expectedOutput": "Sally"}, {"Line": 783, "Input": "Who saw Sally?", "actualOutput": "Old saw Sally with a certainty of 0.6150568214625839, according to memory item i=2 and i=3.", "expectedOutput": "The woman on the stage"}, {"Line": 784, "Input": "Who did the dancer who Andrew saw see?", "actualOutput": "The dancer saw someone, but it is uncertain who. Memory item i=4 or i=3 may provide more information.", "expectedOutput": "Steve"}, {"Line": 785, "Input": "Who saw Steve?", "actualOutput": "Dancer saw Steve, according to Memory item i=4 with a certainty of 0.8214285.", "expectedOutput": "The dancer"}, {"Line": 786, "Input": "Who is the physician?", "actualOutput": "Memory item i=1 with a certainty of 0.736842105263158 suggests that Merlin is the physician.", "expectedOutput": "Merlin"}, {"Line": 787, "Input": "Is Merlin a mother?", "actualOutput": "There is no memory item indicating whether Merlin is a mother.", "expectedOutput": "\"No, father\""}, {"Line": 788, "Input": "Is Kramer a pilot?", "actualOutput": "Memory does not contain information that Kramer is a pilot.", "expectedOutput": "\"No, journalist\""}, {"Line": 789, "Input": "Is Janet a pilot?", "actualOutput": "Janet is not a pilot according to Memory. There is no memory item indicating that.", "expectedOutput": "\"No, journalist\""}, {"Line": 790, "Input": "Who are the peanuts?", "actualOutput": "Memory does not provide information on who the peanuts are.", "expectedOutput": "Barry and Larry"}, {"Line": 791, "Input": "Who was assaulted?", "actualOutput": "There is no information in the given memory about anyone being assaulted.", "expectedOutput": "Barry and Larry"}, {"Line": 792, "Input": "Who is a captain?", "actualOutput": "Priscilla is hypothetically a captain according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "Ronald"}, {"Line": 793, "Input": "Who is a janitor?", "actualOutput": "Mary and John are both hypothetically false janitors with a certainty of 0.263. (i=0 or i=1)", "expectedOutput": "John"}, {"Line": 794, "Input": "Who dated?", "actualOutput": "John dated Mary according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "John and Mary"}, {"Line": 795, "Input": "Who are the singers?", "actualOutput": "Rita and Phoebe are singers according to Memory. They are memory items i=1 and i=2 with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "Phoebe and Rita"}, {"Line": 796, "Input": "Who is with Ernie?", "actualOutput": "Memory item i=0 states that a man has been with Ernie with a certainty of 0.7368.", "expectedOutput": "Carlton"}, {"Line": 797, "Input": "What can Alex choose between?", "actualOutput": "Alex can choose between a dog and a cat according to memory item i=0 and i=1 with high certainty.", "expectedOutput": "between the cat and the dog"}, {"Line": 798, "Input": "Where did the lady shop?", "actualOutput": "The lady shopped at a store according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "at the store"}, {"Line": 799, "Input": "What arrived at the vet?", "actualOutput": "A cat arrived at the vet, according to memory item i=0 with a certainty of 0.1785715.", "expectedOutput": "The old woman"}, {"Line": 800, "Input": "Where did Phil eat?", "actualOutput": "Memory does not provide information on where Phil ate.", "expectedOutput": "the park"}, {"Line": 801, "Input": "Who likes volleyball?", "actualOutput": "Two people hypothetically like volleyball according to Memory: Beach (i=3) and Alisha (i=4).", "expectedOutput": "Alisha"}, {"Line": 802, "Input": "What did the memo say?", "actualOutput": "The memo said something hypothetically true with a certainty of 0.736842105263158. It is memory item i=2.", "expectedOutput": "Valentine's Day will be added"}, {"Line": 803, "Input": "what said Valentine's Day will be added.?", "actualOutput": "There is no memory item related to what was said about Valentine's Day. (i=N/A)", "expectedOutput": "The memo about vacation"}, {"Line": 804, "Input": "What will the train do?", "actualOutput": "The train will leave without Ann (i=0) with a certainty of 0.263.", "expectedOutput": "Will leave without Ann"}, {"Line": 805, "Input": "Is the Rolleiflex Jack's main camera?", "actualOutput": "Memory item i=0 states that the main camera is a Rolleiflex with a certainty of 0.7368, suggesting it is likely but not certain.", "expectedOutput": "\"No, Doreen's main camera\""}, {"Line": 806, "Input": "What is the Rolleiflex?", "actualOutput": "The rolleiflex is a main_camera, with a certainty value of 0.8214285, found in memory item i=0.", "expectedOutput": "Doreen's main camera"}, {"Line": 807, "Input": "Remind me what Anita's favorite food is.?", "actualOutput": "Anita's favorite food is known hypothetically true with a certainty of 0.641, memory item i=0.", "expectedOutput": "Soup dumpling"}, {"Line": 808, "Input": "Emily is the pilot Kristopher is talking about.", "actualOutput": "RelationClaim(emily,\"IsA\",pilot)\nRelationClaim(kristopher,\"TalkingAbout\",emily)", "expectedOutput": ""}, {"Line": 809, "Input": "Is Emily the winner?", "actualOutput": "Memory item i=3 states that \"emily is a winner\" with a certainty of 0.627, but it is not certain if she is the winner.", "expectedOutput": "\"No, the pilot\""}, {"Line": 810, "Input": "\"Is the pilot Kristopher is talking about, Jack?\"?", "actualOutput": "Memory does not provide information on whether Kristopher is talking about Jack. No relevant memory item i.", "expectedOutput": "\"No, Emily\""}, {"Line": 811, "Input": "Is the winner Emily?", "actualOutput": "Memory item i=3 suggests that Emily is the winner with a certainty of 0.627.", "expectedOutput": "\"No, Jack\""}, {"Line": 812, "Input": "Is the green truck the truck in the gararge?", "actualOutput": "Memory does not provide a certain answer, but hypothetically suggests that the truck in the garage is green (i=4).", "expectedOutput": "\"No, the green truck on the street\""}, {"Line": 813, "Input": "Is the truck on the street the blue truck?", "actualOutput": "Memory item i=4 states that the truck is hypothetically on the street, but it does not specify the color.", "expectedOutput": "\"no, the green truck\""}, {"Line": 814, "Input": "Is the blue truck the truck on the street?", "actualOutput": "Memory item i=21 states that the truck is on the street with a certainty of 0.8214285. The blue truck is hypothetically true with a certainty of 0.736842105263158.", "expectedOutput": "\"No, the blue truck inside the garage\""}, {"Line": 815, "Input": "Is the truck in the garage the green truck?", "actualOutput": "Memory item i=20 states that the truck is green and memory item i=4 states that it is in the garage.", "expectedOutput": "\"No, the blue truck inside the garage\""}, {"Line": 816, "Input": "Is the blue truck on the street?", "actualOutput": "Memory item i=19 states that the truck is on the street with a certainty of 0.8214285.", "expectedOutput": "\"no, inside the garage\""}, {"Line": 817, "Input": "Is the green truck in the garage?", "actualOutput": "Memory item i=21 states that the truck is inside the garage with a certainty of 0.8214285. Therefore, it is possible that the green truck is in the garage.", "expectedOutput": "\"no, on the street\""}, {"Line": 818, "Input": "Whose car is fast?", "actualOutput": "Ken's car is fast according to memory. Memory item i=1. (certainty=0.736842105263158)", "expectedOutput": "\"Carol's, Leland's, and Devin's\""}, {"Line": 819, "Input": "Which car is extremely fast?", "actualOutput": "The car with a top speed of 185 mph is extremely fast according to Memory. Memory item i=18.", "expectedOutput": "Devin's 200 mph car"}, {"Line": 820, "Input": "Which car is slightly fast?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "Ken's 175 mph car"}, {"Line": 821, "Input": "Whose car is average speed?", "actualOutput": "The memory item i=18 states that the car has a top speed of 185 mph, but there is no information about its average speed.", "expectedOutput": "Owne's and Ken's"}, {"Line": 822, "Input": "Whose car is slow?", "actualOutput": "There is no memory item indicating that a car is slow.", "expectedOutput": "Kristina's and Carla's"}, {"Line": 823, "Input": "Which car is the fastest?", "actualOutput": "The memory item i=18 states that a car has a top speed of 185 mph, making it the fastest according to Memory.", "expectedOutput": "Devin's 200 mph car"}, {"Line": 824, "Input": "Which car is the slowest?", "actualOutput": "Memory does not provide information on the speed of any car, so there is no memory item that can answer this question.", "expectedOutput": "Kristina's 130 mph car"}, {"Line": 825, "Input": "Who is accepting new clients?", "actualOutput": "The doctor is accepting new clients according to memory item i=1 with a certainty of 0.736842105263158.", "expectedOutput": "Paul"}, {"Line": 826, "Input": "Who are Alice's doctors?", "actualOutput": "According to Memory, Alice has a doctor (i=1) with a hypothetical truth value of 0.736842105263158.", "expectedOutput": "Paul and Kathy"}, {"Line": 827, "Input": "Who is Alice's primary doctor?", "actualOutput": "Alice's primary doctor is doctor who accepts new clients. Memory item i=14. Certainty=0.8214285.", "expectedOutput": "Paul"}, {"Line": 828, "Input": "Can you remind me what the name of Sofia's daughter is?", "actualOutput": "The name of Sofia's daughter is not mentioned in Memory.", "expectedOutput": "Courtney"}, {"Line": 829, "Input": "What is Sofia's daughter's favorite snack?", "actualOutput": "There is no memory content related to Sofia's daughter's favorite snack.", "expectedOutput": "Mango"}, {"Line": 830, "Input": "Why did Sofia throw the mangos away?", "actualOutput": "Sofia threw the mango away, according to memory item i=4 with a hypothetical truth value of 0.736842105263158.", "expectedOutput": "Because the mango was rotten"}, {"Line": 831, "Input": "What snack did Sofia get Courtney?", "actualOutput": "There is no memory item that mentions Sofia getting a snack for Courtney.", "expectedOutput": "Some chips"}, {"Line": 832, "Input": "What does Westley understand?", "actualOutput": "Westley understands success, with a hypothetical truth certainty of 0.736842105263158, according to memory item i=0.", "expectedOutput": "That success requires hard work and passionate determination"}, {"Line": 833, "Input": "What did Westley receive from his parents?", "actualOutput": "Memory does not provide information on what Westley received from his parents.", "expectedOutput": "Hard work and passionate determination"}, {"Line": 834, "Input": "What do the boys attempt?", "actualOutput": "Memory does not provide enough information to answer this question.", "expectedOutput": "The challenging race"}, {"Line": 835, "Input": "What do the boys try?", "actualOutput": "The boy tries something according to memory item i=0 with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "The challenging race"}, {"Line": 836, "Input": "Where has Elijah traveled to?", "actualOutput": "Elijah has hypothetically traveled to Brazil and Russia according to memory items i=1 and i=2 with a certainty of 0.736842105263158.", "expectedOutput": "To Russia and Brazil"}, {"Line": 837, "Input": "When did Elijah visit Brazil?", "actualOutput": "Elijah visited Brazil according to Memory item i=10 with a certainty value of 0.8214285.", "expectedOutput": "In 2017"}, {"Line": 838, "Input": "What school did Jenny attend?", "actualOutput": "Memory does not provide information on which school Jenny attended.", "expectedOutput": "Reed College"}, {"Line": 839, "Input": "Did Jenny attend UCLA?", "actualOutput": "There is no memory item in the given Memory that mentions whether Jenny attended UCLA.", "expectedOutput": "\"No, Reed College\""}, {"Line": 840, "Input": "Is Alexa more rigid than Aigo?", "actualOutput": "Memory item i=1 states that \"alexa is more rigid than aigo\" with a certainty value of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 841, "Input": "Is Aigo more rigid than Alexa?", "actualOutput": "Memory item i=5 states that \"alexa is more rigid than aigo\" with a certainty value of 0.8214285.", "expectedOutput": "\"No, less rigid\""}, {"Line": 842, "Input": "Is Aigo less rigid than Alexa?", "actualOutput": "Memory item i=5 states that \"alexa is more rigid than aigo\" with a certainty of 0.8214285. Therefore, it is probable that aigo is less rigid than alexa.", "expectedOutput": "Yes"}, {"Line": 843, "Input": "Is Alexa less rigid than Aigo?", "actualOutput": "Memory item i=5 states that \"alexa is more rigid than aigo\" with a certainty value of 0.8214285.", "expectedOutput": "\"No, more rigid\""}, {"Line": 844, "Input": "The news anchor wears blue suits.", "actualOutput": "PropertyClaim(\"news anchor\",\"wears\",\"blue suits\")", "expectedOutput": ""}, {"Line": 845, "Input": "He is David Potter.", "actualOutput": "RelationClaim(he,\"IsA\",david_potter)", "expectedOutput": ""}, {"Line": 846, "Input": "What is the news anchor's name?", "actualOutput": "There is no memory item that directly states the news anchor's name, so it cannot be answered with certainty.", "expectedOutput": "David Potter"}, {"Line": 847, "Input": "Does he wear green suits?", "actualOutput": "Memory does not provide evidence that he wears green suits. No memory item mentions green suits.", "expectedOutput": "\"No, blue suits\""}, {"Line": 848, "Input": "What is Aiden having on Sunday for dinner?", "actualOutput": "There is no information in the given memory about what Aiden is having for dinner on Sunday.", "expectedOutput": "Fish with potatoes"}, {"Line": 849, "Input": "What is Aiden having with Marcy for dinner?", "actualOutput": "Aiden is having chicken with Marcy for dinner according to memory item i=2 with a certainty of 0.736.", "expectedOutput": "Chicken"}, {"Line": 850, "Input": "What did John eat?", "actualOutput": "John hypothetically ate meatballs according to memory item i=3 with a certainty of 0.641.", "expectedOutput": "Pasta with meatballs"}, {"Line": 851, "Input": "What did John eat with?", "actualOutput": "John hypothetically ate meatballs and pasta, with certainty values of 0.641 and 0.736, respectively. (i=3, i=4)", "expectedOutput": "Fork and spoon"}, {"Line": 852, "Input": "Who did John eat with?", "actualOutput": "Memory does not provide information on who John ate with.", "expectedOutput": "Mary"}, {"Line": 853, "Input": "What are the parts of an email?", "actualOutput": "Memory items i=0 to i=4 describe the parts of an email with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "\"Email's part, a sender, a recipient, a subject, and a message\""}, {"Line": 854, "Input": "What are the parts of the email I received?", "actualOutput": "The email has a message, subject, and recipient. Memory item i=1,2,3. Certainty=0.736842105263158.", "expectedOutput": "\"Email's part, a sender, a recipient, a subject, and a message\""}, {"Line": 855, "Input": "Is the farm for vegetables big?", "actualOutput": "There is no memory item that directly answers the question about the farm for vegetables.", "expectedOutput": "\"No, small\""}, {"Line": 856, "Input": "Is Isabella's farm small?", "actualOutput": "There is no memory item that directly states the size of Isabella's farm, so it cannot be determined with certainty.", "expectedOutput": "\"No, big\""}, {"Line": 857, "Input": "Where is that farm?", "actualOutput": "The farm is owned by Isabella and is hypothetically true. It is memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 858, "Input": "Is the farm for vegetables important?", "actualOutput": "There is no memory item that directly states whether the farm is for vegetables or not.", "expectedOutput": "yes"}, {"Line": 859, "Input": "Is the big farm important?", "actualOutput": "Memory item i=1 states that \"farm is important\" with a certainty of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 860, "Input": "What in Texas is important and common?", "actualOutput": "There is no memory item in Texas that is explicitly stated as important or common in Memory.", "expectedOutput": "Farms"}, {"Line": 861, "Input": "Are farms common in Alaska?", "actualOutput": "Memory does not contain information about farms in Alaska. No relevant memory item.", "expectedOutput": "\"No, in Texas\""}, {"Line": 862, "Input": "What was fun?", "actualOutput": "There is no memory item that directly states what was fun, so Memory cannot provide an answer to this question.", "expectedOutput": "The first movie"}, {"Line": 863, "Input": "Which movie was fun?", "actualOutput": "The movie was fun according to memory item i=0 with a hypothetical truth certainty of 0.641.", "expectedOutput": "The first movie"}, {"Line": 864, "Input": "Which paper got published?", "actualOutput": "The first paper got published according to Memory. i=1 with certainty=0.736842105263158.", "expectedOutput": "the first paper"}, {"Line": 865, "Input": "What wrote 5 papers?", "actualOutput": "Memory item i=4 states that paper includes 5, but it does not specify who wrote the paper.", "expectedOutput": "the association"}, {"Line": 866, "Input": "What did Billson order?", "actualOutput": "Billson ordered a drink according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "A large drink"}, {"Line": 867, "Input": "Did Billson order a small drink?", "actualOutput": "Yes, according to memory item i=12, Billson ordered a drink with a certainty value of 0.8214285.", "expectedOutput": "\"no, a large drink\""}, {"Line": 868, "Input": "Who ordered a large drink?", "actualOutput": "Memory does not provide a certain answer, but there is a hypothetical truth that someone ordered a large drink (i=0) with a certainty of 0.736842105263158.", "expectedOutput": "Billson"}, {"Line": 869, "Input": "Who did Vera fire?", "actualOutput": "Vera fired someone hypothetically true with a certainty of 0.7368 according to memory item i=1, but the specific person is not mentioned.", "expectedOutput": "A few lawyers"}, {"Line": 870, "Input": "What did Bibi drop?", "actualOutput": "Bibi dropped a case according to Memory. This is memory item i=1 with a certainty of 0.263.", "expectedOutput": "A few cases"}, {"Line": 871, "Input": "What did Carl make?", "actualOutput": "Carl made two according to memory item i=4 with a certainty value of 0.736842105263158.", "expectedOutput": "Two arguments"}, {"Line": 872, "Input": "Who made arguments?", "actualOutput": "Memory item i=2: lawyer made arguments with certainty 0.8214285.", "expectedOutput": "Carl Weathers and Larkin"}, {"Line": 873, "Input": "Who made two arguments?", "actualOutput": "Carl made two arguments according to Memory. Memory item i=7 has a certainty value of 0.8214285.", "expectedOutput": "Carl Weathers"}, {"Line": 874, "Input": "Who is the whale owned by?", "actualOutput": "There is no memory item that mentions a whale, so it cannot be determined who owns it.", "expectedOutput": "I don't know"}, {"Line": 875, "Input": "What does Santa Clarita have?", "actualOutput": "There is no memory item in the given Memory that mentions what Santa Clarita has.", "expectedOutput": "zoo"}, {"Line": 876, "Input": "Who fed Esma?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "Esma's mother"}, {"Line": 877, "Input": "Who did her mother feed?", "actualOutput": "Memory item i=0 states that \"I fed the dog.\" No information is given about her mother feeding anyone.", "expectedOutput": "Esma"}, {"Line": 878, "Input": "Who did Jenna's father chat to?", "actualOutput": "Jenna's father talked to someone, memory item i=1, with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "Jenna"}, {"Line": 879, "Input": "Who talked to Jenna?", "actualOutput": "Memory item i=6 states that \"father talked to jenna\" with a certainty of 0.8214285.", "expectedOutput": "Jenna's father"}, {"Line": 880, "Input": "Who talked to Jenna's father?", "actualOutput": "Memory item i=7 states that Jenna's father talked to someone. The certainty value is 0.8214285.", "expectedOutput": "I don't know"}, {"Line": 881, "Input": "Who did Sandra's mother talk to?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": ""}, {"Line": 882, "Input": "Who talked to Sandra's mother?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "Sandra's mother"}, {"Line": 883, "Input": "Who talked to Sandra?", "actualOutput": "Memory item i=3 reports that someone talked to Sandra at time=810 with a hypothetical truth certainty of 0.5000080282682715. It is uncertain who talked to Sandra.", "expectedOutput": "I don't know"}, {"Line": 884, "Input": "Who has a dog?", "actualOutput": "Tina and possibly Alex have a dog according to Memory. Memory item i=3 is certain, i=4 is less certain.", "expectedOutput": "\"Gio, George, Rodney, Robin, Ella, and Owen, Robert, and Sam\""}, {"Line": 885, "Input": "Who walked Sam's dog?", "actualOutput": "Memory item i=4 states that Sam walked a dog with a certainty value of 0.736842105263158.", "expectedOutput": "Sam"}, {"Line": 886, "Input": "Why did Samuel clean the medal?", "actualOutput": "Memory item i=1 states that Samuel cleaned the medal with a certainty of 0.736842105263158.", "expectedOutput": "So that it would shine"}, {"Line": 887, "Input": "What shines?", "actualOutput": "Memory does not contain information about what shines.", "expectedOutput": "The medal"}, {"Line": 888, "Input": "What did Samuel clean?", "actualOutput": "Samuel cleaned a medal according to Memory. This information is stored in memory item i=1 with a certainty value of 0.8214285.", "expectedOutput": "The medal"}, {"Line": 889, "Input": "Who did Esma shoot?", "actualOutput": "Esma shot someone, but it is not specified who. The memory item is i=2 with a certainty of 0.736842105263158.", "expectedOutput": "Igor"}, {"Line": 890, "Input": "Who shot Igor?", "actualOutput": "Esma shot Igor according to memory item i=2 with a certainty of 0.8214285.", "expectedOutput": "Esma"}, {"Line": 891, "Input": "Who felt sick?", "actualOutput": "There is no memory item that directly states who felt sick, so there is no answer to this question based on memory content only.", "expectedOutput": "Lydia"}, {"Line": 892, "Input": "Who sent her to the hospital?", "actualOutput": "Memory does not contain information about who sent her to the hospital.", "expectedOutput": "Lydia"}, {"Line": 893, "Input": "Who was sent to the hospital?", "actualOutput": "Memory item i=0 suggests that \"herself\" visited the hospital with a certainty value of 0.7368.", "expectedOutput": "Lydia"}, {"Line": 894, "Input": "What is bright?", "actualOutput": "There is no memory item that directly states what is bright.", "expectedOutput": "The bright and pretty jewels"}, {"Line": 895, "Input": "Are the heirs pretty?", "actualOutput": "Memory item i=2 states that \"jewel isa pretty\" with a certainty of 0.736842105263158, but there is no direct mention of the heirs being pretty.", "expectedOutput": "I don't know"}, {"Line": 896, "Input": "Are the jewels bright?", "actualOutput": "There is no memory item that directly answers whether the jewels are bright.", "expectedOutput": "Yes"}, {"Line": 897, "Input": "What is late?", "actualOutput": "There is no information in the given memory about something being late.", "expectedOutput": "the reply"}, {"Line": 898, "Input": "What is with Jane?", "actualOutput": "Jane will try a stunt (i=0) with a certainty of 0.736842105263158.", "expectedOutput": "The celebration"}, {"Line": 899, "Input": "Who has a clock?", "actualOutput": "There is no memory item that mentions who has a clock.", "expectedOutput": "Molly"}, {"Line": 900, "Input": "What drove Molly crazy?", "actualOutput": "Memory item i=0 suggests that something drove Molly crazy with a certainty of 0.641.", "expectedOutput": "Molly's clock"}, {"Line": 901, "Input": "Who got a compliment?", "actualOutput": "Marty may or may not have received a compliment, with a hypothetical truth certainty of 0.7368, according to memory item i=4.", "expectedOutput": "Marty"}, {"Line": 902, "Input": "What made Marty feel good?", "actualOutput": "Memory item i=2 states that \"it makes me feel good\" with a certainty of 0.736842105263158.", "expectedOutput": "A compliment"}, {"Line": 903, "Input": "Where did Mimi meet Charles?", "actualOutput": "Mimi met Charles at the park, according to memory item i=3 with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "The park"}, {"Line": 904, "Input": "Where did Charles eat?", "actualOutput": "Charles ate at the park according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "At the park"}, {"Line": 905, "Input": "Who did Mimi meet?", "actualOutput": "Mimi met someone, but it is not specified who. This information is in memory item i=0 with a certainty value of 0.8214285.", "expectedOutput": "Charles"}, {"Line": 906, "Input": "What has many pages?", "actualOutput": "Memory item i=0 (jane have book_about_cat) has the highest probability of referring to something with many pages.", "expectedOutput": "Student's books"}, {"Line": 907, "Input": "Who has books?", "actualOutput": "Student has books according to Memory. Memory item i=4 with certainty=0.736842105263158.", "expectedOutput": "Mike and Jane"}, {"Line": 908, "Input": "What do the books have?", "actualOutput": "The books have the properties of being orange and big according to memory item i=2 with a certainty of 0.8214285.", "expectedOutput": "Student's book's pages"}, {"Line": 909, "Input": "What likes pickles?", "actualOutput": "Cat likes pickles according to Memory and memory item i=4 with a hypothetical truth and a certainty of 0.736842105263158.", "expectedOutput": "Kristopher's brown cat"}, {"Line": 910, "Input": "Does Kristopher have a cat?", "actualOutput": "Memory item i=4 states that the cat belongs to Kristopher with a certainty value of 0.736842105263158. Therefore, it is probable that Kristopher has a cat.", "expectedOutput": "Yes"}, {"Line": 911, "Input": "Which cat likes pickles?", "actualOutput": "The cat that likes pickles is mentioned in memory item i=4 with a certainty of 0.8214285.", "expectedOutput": "Kristopher's brown cat"}, {"Line": 912, "Input": "What was good with chocolate?", "actualOutput": "Memory item i=2 states that cake with chocolate was hypothetically true with a certainty of 0.7368.", "expectedOutput": "A cake with chocolate"}, {"Line": 913, "Input": "Was it good?", "actualOutput": "Memory item i=4 states \"it makes feel good\" with a certainty of 0.8214285, indicating a high probability that it was good.", "expectedOutput": "yes"}, {"Line": 914, "Input": "What kind of cake did Glen eat?", "actualOutput": "Memory does not provide information on the type of cake Glen ate.", "expectedOutput": "A good cake with chocolate"}, {"Line": 915, "Input": "What kind of sandwich did Glen eat?", "actualOutput": "Glen ate a sandwich, but the type is not specified in the memory. (i=4, certainty=0.736842105263158)", "expectedOutput": "A bad sandwich with cheese"}, {"Line": 916, "Input": "What was bad with cheese?", "actualOutput": "There is no memory item that mentions cheese, so it is impossible to answer the question based on memory content.", "expectedOutput": "A sandwich with cheese"}, {"Line": 917, "Input": "Was it bad?", "actualOutput": "There is no memory item that directly answers the question of whether something was bad.", "expectedOutput": "yes"}, {"Line": 918, "Input": "Who bought flowers?", "actualOutput": "According to Memory, a girl wanted flowers (i=4) with a certainty of 0.736842105263158. It is not specified who bought them.", "expectedOutput": "The girls"}, {"Line": 919, "Input": "What did the girls buy?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "The flowers"}, {"Line": 920, "Input": "What cars will Jo Jo pay for?", "actualOutput": "Jo will pay for a rental car and airfare (i=1 and i=2) with a certainty of 0.736842105263158.", "expectedOutput": "Mid-size rental cars"}, {"Line": 921, "Input": "What air fare will Jo Jo pay for?", "actualOutput": "Jo will pay for air fare according to memory item i=4 with a certainty of 0.8214285.", "expectedOutput": "Coach airfare"}, {"Line": 922, "Input": "Will Jo Jo pay for first class air fare?", "actualOutput": "Jo will pay for air fare (i=4) with a certainty value of 0.8214285, but it is not specified if it is first class.", "expectedOutput": "\"No, coach airfare\""}, {"Line": 923, "Input": "Will Jo Jo pay for business class air fare?", "actualOutput": "Memory item i=4 states that Jo will pay for air fare, but does not specify business class. Probability of Jo paying for business class is uncertain.", "expectedOutput": "\"No, coach airfare\""}, {"Line": 924, "Input": "Will Jo Jo pay for compact rental cars?", "actualOutput": "Memory item i=3 states that Jo paid for rental cars with a certainty of 0.8214285. It is likely that Jo will pay for compact rental cars.", "expectedOutput": "\"No, mid-size rental cars\""}, {"Line": 925, "Input": "Will Jo Jo pay for large rental cars?", "actualOutput": "Memory item i=3 states that Jo will pay for rental cars with a certainty value of 0.8214285.", "expectedOutput": "\"No, mid-size rental cars\""}, {"Line": 926, "Input": "What does Jo Jo require?", "actualOutput": "Jo requires outside counsel according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "\"That outside counsel utilize the task, activity, and expense codes\""}, {"Line": 927, "Input": "What is outside counsel required to use?", "actualOutput": "Outside counsel is required to use the report to Sandra (i=3) with a certainty of 0.5000080282682715.", "expectedOutput": "\"The task, activity, and expense codes\""}, {"Line": 928, "Input": "What does outside counsel need to use?", "actualOutput": "Outside counsel needs to report to Sandra (i=3) with a hypothetical truth certainty of 0.5000080282682715.", "expectedOutput": "\"The task, activity, and expense codes\""}, {"Line": 929, "Input": "Does outside counsel need to use task codes?", "actualOutput": "Unclear from memory contents.", "expectedOutput": "yes"}, {"Line": 930, "Input": "Will Jo Jo pay for two attorneys?", "actualOutput": "Memory does not provide a clear answer to whether Jo will pay for two attorneys.", "expectedOutput": "\"No, Jo Jo won't pay for more than one attorney to attend a deposition\""}, {"Line": 931, "Input": "Will Jo Jo pay for more than one attorney?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "Not more than one attorney to attend a deposition"}, {"Line": 932, "Input": "Who must approve timekeepers?", "actualOutput": "The timekeeper must be approved by inside_counsel according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "The lead inside counsel"}, {"Line": 933, "Input": "What will Jo Jo pay for?", "actualOutput": "Jo will pay for rental car and air fare according to memory item i=2 and i=3 with a certainty of 0.8214285.", "expectedOutput": "For coach airfare and mid-size rental cars unless authorized in advance by the lead inside counsel expressly"}, {"Line": 934, "Input": "What is hereby revoked?", "actualOutput": "There is no information in Memory about anything being revoked, so no memory item can be identified.", "expectedOutput": "All prior blanket waivers"}, {"Line": 935, "Input": "What will Jo Jo not provide?", "actualOutput": "Jo will not provide outside counsel (i=4) with a certainty of 0.8214285.", "expectedOutput": "Blanket waivers"}, {"Line": 936, "Input": "What will each party bear?", "actualOutput": "Jim will bear a party (i=0) with a hypothetical falsehood (0.263). Other party details include time, date, and host.", "expectedOutput": "Own fees and expenses"}, {"Line": 937, "Input": "Who has fees?", "actualOutput": "Memory does not contain information about who has fees.", "expectedOutput": "Each party"}, {"Line": 938, "Input": "What will each party share?", "actualOutput": "Party will share that Jim is the host of the party (i=0) with a certainty of 0.7368.", "expectedOutput": "The fees of the arbitrator and expenses of the arbitrator"}, {"Line": 939, "Input": "Why is the door locked?", "actualOutput": "The door is hypothetically locked by Mort, according to memory item i=0 with a certainty of 0.736.", "expectedOutput": "Because Mort locked the door"}, {"Line": 940, "Input": "Who locked the door?", "actualOutput": "Mort locked the door according to Memory. Memory item i=0 has a certainty value of 0.8214285.", "expectedOutput": "Mort"}, {"Line": 941, "Input": "Is the door locked?", "actualOutput": "Memory item i=0 states that \"mort lock door\" with a certainty of 0.8214285, indicating that the door is likely locked.", "expectedOutput": "yes"}, {"Line": 942, "Input": "Are all pets dirty?", "actualOutput": "Memory item 1 states that \"pet hasproperty dirty\" with a certainty of 0.627, but it is not certain if all pets are dirty.", "expectedOutput": "\"No, 1\""}, {"Line": 943, "Input": "Is Tigger dirty?", "actualOutput": "Tigger is hypothetically dirty with a certainty of 0.7368 according to memory item i=0.", "expectedOutput": "Yes"}, {"Line": 944, "Input": "What does Tigger need?", "actualOutput": "Tigger needs to be washed according to Memory. This information is in memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "To get washed because Tigger is dirty"}, {"Line": 945, "Input": "Who has a car?", "actualOutput": "Ken hypothetically owns a red car (i=0, i=2) with a certainty of 0.736842105263158.", "expectedOutput": "\"Kristina, Devin, Carla, Ken, Leland, Carol, Allison, Delia, Henry, and Milly\""}, {"Line": 946, "Input": "Does she have a car?", "actualOutput": "She has a car according to Memory item i=0 with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 947, "Input": "What does Milly have?", "actualOutput": "Milly hypothetically has a car with a certainty of 0.7368. Memory item i=0.", "expectedOutput": "Green car"}, {"Line": 948, "Input": "Does Deanna have it?", "actualOutput": "Cannot answer as there is no memory item related to Deanna in the given memory contents.", "expectedOutput": "I don't know"}, {"Line": 949, "Input": "What does Deanna have?", "actualOutput": "Deanna hypothetically has a lamp, with a certainty value of 0.736842105263158. Memory item i=0.", "expectedOutput": "Purple lamp"}, {"Line": 950, "Input": "What color is it?", "actualOutput": "Memory item i=0 states that the bird color is red with a certainty of 0.736842105263158.", "expectedOutput": "purple"}, {"Line": 951, "Input": "Who has a lamp?", "actualOutput": "Lamp belongs to Deanna according to memory item i=4 with a certainty of 0.8214285.", "expectedOutput": "Deanna"}, {"Line": 952, "Input": "Does she have a lamp?", "actualOutput": "She has a lamp according to Memory item i=0 with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 953, "Input": "Does she have a car?", "actualOutput": "She has a car according to Memory item i=0 with a certainty of 0.8214285.", "expectedOutput": "I don't know"}, {"Line": 954, "Input": "What is Yahoo's ticker?", "actualOutput": "There is no memory item that provides the answer to this question.", "expectedOutput": "YHOO"}, {"Line": 955, "Input": "Who decided to push back the deadline?", "actualOutput": "yhoo decided to push back the deadline according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "Yahoo and Microsoft"}, {"Line": 956, "Input": "What did Yahoo and Microsoft decide?", "actualOutput": "Yahoo was claimed against hypothetically false (i=0) and Microsoft hypothetically decided to renegotiate a search deal (i=1) and push back a deadline (i=2).", "expectedOutput": "To push the deadline from 9/21/2016 to today to renegotiate Microsoft's 10-year search deal"}, {"Line": 957, "Input": "Did the tech giants join forces in 2011?", "actualOutput": "Memory does not contain information about tech giants joining forces in 2011.", "expectedOutput": "no in 2010"}, {"Line": 958, "Input": "When did the tech giants join forces?", "actualOutput": "There is no memory item that states when the tech giants joined forces.", "expectedOutput": "In 2010"}, {"Line": 959, "Input": "who joined forces?", "actualOutput": "No memory item provides a clear answer to this question.", "expectedOutput": "The tech giants"}, {"Line": 960, "Input": "When did they join forces?", "actualOutput": "There is no memory item that directly answers when they joined forces.", "expectedOutput": "In 2010"}, {"Line": 961, "Input": "Who is Yahoo's CEO?", "actualOutput": "Memory item 2 (britta isa ceo) suggests that Britta may be Yahoo's CEO with a certainty of 0.736842105263158.", "expectedOutput": "Marissa Mayer"}, {"Line": 962, "Input": "Who has 47 plants in 13 countries?", "actualOutput": "There is no memory item that mentions someone having 47 plants in 13 countries.", "expectedOutput": "Verallia"}, {"Line": 963, "Input": "\"Who employs nearly 10,000 people?\"?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "Verallia"}, {"Line": 964, "Input": "What did an official say?", "actualOutput": "There is no memory item that mentions what an official said.", "expectedOutput": "\"An ancient Egyptian amulet that girl discovered dates at more than r_quant 3,200 years to the days of the the Pharaohs back\""}, {"Line": 965, "Input": "Whose family took part in the Temple Mount Sifting Project?", "actualOutput": "Memory does not contain information about any family taking part in the temple mount sifting project.", "expectedOutput": "Neshama Spielman's"}, {"Line": 966, "Input": "Who took part in the Temple Mount Sifting Project?", "actualOutput": "Memory does not contain information about who took part in the temple mount sifting project.", "expectedOutput": "Neshama Spielman and her family"}, {"Line": 967, "Input": "What is an initiative?", "actualOutput": "Memory does not contain information about what an initiative is.", "expectedOutput": "An initiative to sort through earth discarded from the area of the biblical temples in Jerusalem"}, {"Line": 968, "Input": "Where did Neshama find a pendant-shaped amulet?", "actualOutput": "Neshama found a pendant-shaped amulet hypothetically true with a certainty of 0.736842105263158 in memory item i=1.", "expectedOutput": "The area of the biblical temples in Jerusalem"}, {"Line": 969, "Input": "What did Neshama find?", "actualOutput": "Neshama found a thing, with a hypothetical truth certainty of 0.641 (memory item i=0).", "expectedOutput": "A pendant-shaped amulet"}, {"Line": 970, "Input": "What does the amulet bear?", "actualOutput": "The amulet is pendant-shaped according to Memory. This information is in memory item i=0 with a certainty value of 0.8214285.", "expectedOutput": "Name"}, {"Line": 971, "Input": "Is the Temple Mount Sifting Project an initiative?", "actualOutput": "There is no memory item related to the Temple Mount Sifting Project in the given memory.", "expectedOutput": "Yes"}, {"Line": 972, "Input": "What was started by scientists?", "actualOutput": "According to memory item i=2, scientists started something hypothetically true with a certainty of 0.736842105263158.", "expectedOutput": "The deepest hole"}, {"Line": 973, "Input": "Who found some pretty cool things?", "actualOutput": "Memory item i=0 states that \"they find cool_thing\" with a certainty of 0.736842105263158.", "expectedOutput": "The Russian scientists"}, {"Line": 974, "Input": "What did the scientists find?", "actualOutput": "The scientists found a fossil with a hypothetical truth value of 0.736842105263158 at memory item i=3.", "expectedOutput": "2-billion-year-old fossils"}, {"Line": 975, "Input": "Who found 2-billion-year-old fossils?", "actualOutput": "Memory item i=3 states that \"they find cool_thing\" with a certainty of 0.8214285, which could refer to the discovery of the 2-billion-year-old fossils.", "expectedOutput": "The Russian scientists"}, {"Line": 976, "Input": "What was deeper than scientists thought?", "actualOutput": "Memory item i=12, cocoa being a coffee was hypothetically contradictory with a certainty of 0.491520117627.", "expectedOutput": "Free water"}, {"Line": 977, "Input": "Who is Jane's band's director?", "actualOutput": "Memory item 2 states that the band has a director with a certainty of 0.736842105263158. The director's name is not mentioned.", "expectedOutput": "Omar"}, {"Line": 978, "Input": "Who goes shopping?", "actualOutput": "Forrest goes shopping according to memory item i=0 with a certainty of 0.8214285.", "expectedOutput": "Omar"}, {"Line": 979, "Input": "Who is going shopping with Sam?", "actualOutput": "Memory item i=2 states that Sam walks the dog, but there is no information about who is going shopping with Sam.", "expectedOutput": "Omar"}, {"Line": 980, "Input": "Who is going to the competition?", "actualOutput": "Memory item i=0 states that a band is going to the competition with a certainty of 0.263.", "expectedOutput": "No bands"}, {"Line": 981, "Input": "HarperCollins:: HarperCollins is a company.", "actualOutput": "RelationClaim(\"harpercollins\",\"IsA\",\"company\")", "expectedOutput": ""}, {"Line": 982, "Input": "We are glad Jean has picked up one of our plays.", "actualOutput": "RelationClaim(\"we\",\"are glad\", \"jean\")\nRelationClaim(\"jean\", \"picked up\", \"one of our plays\")", "expectedOutput": ""}, {"Line": 983, "Input": "Our plays have strong characters and good stories.", "actualOutput": "PropertyClaim(\"our plays\",\"HaveProperty\",\"strong characters\")\nPropertyClaim(\"our plays\",\"HaveProperty\",\"good stories\")", "expectedOutput": ""}, {"Line": 984, "Input": "DefaultUser:: What plays did Jean pick up?", "actualOutput": "Jean picked up one of our plays according to memory item i=19 with a certainty of 0.5.", "expectedOutput": "HarperCollins' plays"}, {"Line": 985, "Input": "DefaultUser:: Whose plays have strong characters?", "actualOutput": "The plays with strong characters are in our_play, according to memory item i=23, with a hypothetical certainty of 0.5.", "expectedOutput": "HarperCollins'"}, {"Line": 986, "Input": "What do the plays have?", "actualOutput": "The plays have strong characters and good stories according to memory item i=23 and i=24 with a hypothetical certainty of 0.5.", "expectedOutput": "Strong characters and good stories"}, {"Line": 987, "Input": "HarperCollins:: Hi Jean.", "actualOutput": "RelationClaim(harpercollins, \"Said\", hi jean)", "expectedOutput": ""}, {"Line": 988, "Input": "We hope you liked our plays.", "actualOutput": "PropertyClaim(\"we\",\"Hope\",PropertyClaim(\"you\",\"Liked\",PropertyClaim(\"our_plays\",\"HaveProperty\",\"good\")))", "expectedOutput": ""}, {"Line": 989, "Input": "DefaultUser:: What does HarperCollins hope?", "actualOutput": "Memory item i=0 states that HarperCollins is a company, but there is no information about their hopes.", "expectedOutput": "Jean liked HarperCollins' plays"}, {"Line": 990, "Input": "Who emailed Otto Vantassel about his project?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "Anastacia Shuttleworth"}, {"Line": 991, "Input": "What did Anastacia Shuttleworth email?", "actualOutput": "Anastacia sent an email to Otto VanTassel, i=0, with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "An email about Otto Vantassel's project"}, {"Line": 992, "Input": "What did Grayce Molina email Ben Fernandez?", "actualOutput": "There is no memory item that directly answers the question.", "expectedOutput": "I don't know"}, {"Line": 993, "Input": "Who did Grayce Molina email packages?", "actualOutput": "Grayce Molina sent a package, hypothetically true with certainty 0.7368, memory item i=1. The recipient is not specified in the memory.", "expectedOutput": "I don't know"}, {"Line": 994, "Input": "Who does Ellis Hamel send texts to?", "actualOutput": "Ellis Hamel sends texts hypothetically, with a certainty of 0.736842105263158, but it is not specified to whom. (Memory item i=4)", "expectedOutput": "Joan Blanco"}, {"Line": 995, "Input": "What does Ellis Hamel text?", "actualOutput": "Ellis Hamel sent a text, with a certainty value of 0.8214285, according to memory item i=18. The content of the text is not specified in the memory.", "expectedOutput": "texts"}, {"Line": 996, "Input": "What does Maya Molina text?", "actualOutput": "There is no memory item that directly answers the question of what Maya Molina texted.", "expectedOutput": "I don't know"}, {"Line": 997, "Input": "What does Maya Molina email?", "actualOutput": "There is no memory item that mentions Maya Molina emailing, so it cannot be answered within the given parameters.", "expectedOutput": "I don't know"}, {"Line": 998, "Input": "Does Loise Monge bike decently?", "actualOutput": "Memory does not provide enough information to determine if Loise Monge can bike decently. (i=2)", "expectedOutput": "Yes"}, {"Line": 999, "Input": "What does Loise Monge ride decently?", "actualOutput": "Loise Monge rides a bike according to memory item i=16 with a certainty of 0.8214285.", "expectedOutput": "Bikes"}, {"Line": 1000, "Input": "Who does Arnold Arno hug?", "actualOutput": "Arnold hugs Matilda Aigner according to memory item i=3 with a certainty of 0.736842105263158.", "expectedOutput": "Matilda Aigner"}, {"Line": 1001, "Input": "Who does Arnold Arno give a hug to?", "actualOutput": "Arnold gives a hug to someone, but it is not specified who. This is memory item i=20 with a certainty value of 0.8214285.", "expectedOutput": "Matilda Aigner"}, {"Line": 1002, "Input": "When does Amy Hamel nap?", "actualOutput": "Amy Hamel naps in the afternoon according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "From 12:01 PM to 5 PM"}, {"Line": 1003, "Input": "Who showers in the evenings?", "actualOutput": "Memory item i=4 states that shower occurs in the evening with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "Jackie Peden"}, {"Line": 1004, "Input": "Does Jackie Peden take baths?", "actualOutput": "There is no memory item that directly states whether Jackie Peden takes baths or not.", "expectedOutput": "\"No, showers\""}, {"Line": 1005, "Input": "Did Kyle Hohl's goldfish die?", "actualOutput": "Memory item i=2 states that Kyle Hohl has a goldfish with a certainty value of 0.736842105263158. No information is given about the goldfish's current status.", "expectedOutput": "yes"}, {"Line": 1006, "Input": "Did Lydia Tye die?", "actualOutput": "There is no memory item indicating that Lydia Tye died, so the probability is 0.", "expectedOutput": "I don't know"}, {"Line": 1007, "Input": "Where did Lydia Tye kick the bucket?", "actualOutput": "Memory does not provide a clear answer to where Lydia Tye kicked the bucket. The memory item i=2 suggests it did not happen.", "expectedOutput": "Down the street"}, {"Line": 1008, "Input": "Who departed the basketball game at 3 pm?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "Jessie Dreiling"}, {"Line": 1009, "Input": "Who forgot the game at home?", "actualOutput": "There is no memory item that directly answers the question, so it cannot be determined with certainty.", "expectedOutput": "Julie Lybarger"}, {"Line": 1010, "Input": "Who abandoned Melly Burleson?", "actualOutput": "There is no information in the given Memory about who abandoned Melly Burleson.", "expectedOutput": "Stevie Burleson"}, {"Line": 1011, "Input": "Who entrusted Lola Vizcarra an entire fortune?", "actualOutput": "There is no memory item that directly answers the question, so no probabilistic answer can be given.", "expectedOutput": "Darrell Tupper"}, {"Line": 1012, "Input": "What did Acie Newbury inquire about?", "actualOutput": "Acie Newbury inquired about quarterly revenue according to memory item i=1 with a certainty of 0.8214285.", "expectedOutput": "if dinner was ready"}, {"Line": 1013, "Input": "What did Abner Abbas inquire about?", "actualOutput": "Abner asked for a drink, with a certainty of 0.7368, and it is stored in memory item i=0.", "expectedOutput": "I don't know"}, {"Line": 1014, "Input": "Did Abner Abbas request a drink?", "actualOutput": "Abner asked for a drink according to memory item i=15 with a certainty value of 0.8214285.", "expectedOutput": "Yes"}, {"Line": 1015, "Input": "What did Abner Abbas request?", "actualOutput": "Abner asked for a drink according to memory item i=10 with a certainty of 0.8214285.", "expectedOutput": "a drink"}, {"Line": 1016, "Input": "Who did Santo Sober invite for dinner?", "actualOutput": "Santo hypothetically invited Elaina Booe for dinner with a certainty of 0.7368 (memory item i=4).", "expectedOutput": "Elaina Booe"}, {"Line": 1017, "Input": "What did Brent Huson get Brenda Bale?", "actualOutput": "Memory does not contain information about Brent Huson getting anything for Brenda Bale.", "expectedOutput": "some vases"}, {"Line": 1018, "Input": "Is Bradley Rollings purchasing time?", "actualOutput": "There is no memory item that directly mentions Bradley Rollings purchasing time.", "expectedOutput": "I don't know"}, {"Line": 1019, "Input": "Who quit smoking?", "actualOutput": "There is no memory item that directly answers the question of who quit smoking.", "expectedOutput": "Sebastian Helfer"}, {"Line": 1020, "Input": "Who paused to smoke?", "actualOutput": "There is no memory item that directly answers the question of who paused to smoke.", "expectedOutput": "Sean Zentz"}, {"Line": 1021, "Input": "Who made the sketch of a bench by the fireplace?", "actualOutput": "Dominick Huson made the sketch of a bench by the fireplace according to Memory item i=1 with a certainty of 0.736842105263158.", "expectedOutput": "Dominick Huson"}, {"Line": 1022, "Input": "Where did Bobby Dieguez move the bench?", "actualOutput": "Memory does not provide a clear answer to where Bobby Dieguez moved the bench.", "expectedOutput": "towards the fireplace"}, {"Line": 1023, "Input": "Who pulled Mrs. Twellman into the disagreement?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "Shon Mundy"}, {"Line": 1024, "Input": "Who is fulfilling the dream?", "actualOutput": "Memory item i=0 suggests that levi_gagnon is living out a dream with a certainty of 0.736842105263158.", "expectedOutput": "Levi Gagnon"}, {"Line": 1025, "Input": "Who is residing in the wild?", "actualOutput": "There is no memory item that directly answers this question.", "expectedOutput": "Liam Gorham"}, {"Line": 1026, "Input": "Who resides down the street?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "Lauren Wendell"}, {"Line": 1027, "Input": "What does Leanna Salo downplay?", "actualOutput": "Memory does not provide information about what Leanna Salo downplays. Item i=6 has a certainty value of 0.8214285.", "expectedOutput": "Leanna Salo's achievements"}, {"Line": 1028, "Input": "Did Carl's employees name him homie?", "actualOutput": "Memory item i=4 suggests that it is hypothetically true that an employee called Carl \"homie\" with a certainty of 0.736842105263158.", "expectedOutput": "Yes"}, {"Line": 1029, "Input": "Where did Carl's employees call him?", "actualOutput": "Memory item i=4 states that an employee called Carl hypothetically true with a certainty of 0.736842105263158.", "expectedOutput": "Home"}, {"Line": 1030, "Input": "What did Terry Sieg clean?", "actualOutput": "There is no memory item that mentions Terry Sieg cleaning, so it cannot be answered within the given parameters.", "expectedOutput": "The table"}, {"Line": 1031, "Input": "What did Terry Sieg remove?", "actualOutput": "There is no information in the given memory about Terry Sieg removing anything. Therefore, there is no corresponding memory item i.", "expectedOutput": "Crumbs"}, {"Line": 1032, "Input": "Who is Volvoing?", "actualOutput": "There is no memory item that mentions \"volvoing\" so it cannot be answered within the given parameters.", "expectedOutput": "Chuck Saban"}, {"Line": 1033, "Input": "Who is IBMing?", "actualOutput": "There is no memory item that mentions \"ibming\" so it cannot be determined who or what it refers to.", "expectedOutput": "Jan Cesario"}, {"Line": 1034, "Input": "Who skyped in during the Q&A session?", "actualOutput": "There is no memory item that directly answers the question about who skyped in during the q&a session.", "expectedOutput": "Students"}, {"Line": 1035, "Input": "What does Gerry Trombley enjoy doing?", "actualOutput": "Gerry Trombley enjoys uncling according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "Uncling"}, {"Line": 1036, "Input": "Who whapped two winters ago?", "actualOutput": "Memory item i=0 states that Tonie Harrod whapped two winters ago with a certainty value of 0.263.", "expectedOutput": "Tonie Harrod"}, {"Line": 1037, "Input": "Who is fobbing joyfully?", "actualOutput": "Memory item i=0 states that ruth_lavin is fobbing joyfully with a certainty of 0.736842105263158.", "expectedOutput": "Ruth Lavin"}, {"Line": 1038, "Input": "Who was vivified?", "actualOutput": "There is no memory item that mentions someone being vivified, so it is impossible to answer the question.", "expectedOutput": "Tanja Charlton"}, {"Line": 1039, "Input": "What is Sheilah Rector trying to do?", "actualOutput": "Memory does not provide information on what Sheilah Rector is trying to do.", "expectedOutput": "To unfreeze Sheilah Rector's assets"}, {"Line": 1040, "Input": "Who arrests those who break the law?", "actualOutput": "No memory item provides a clear answer to this question.", "expectedOutput": "Those s_noun"}, {"Line": 1041, "Input": "What was misplaced?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "Stacks of documents"}, {"Line": 1042, "Input": "Which team won after a poor start?", "actualOutput": "There is no memory item that directly answers the question, so the answer cannot be provided with certainty.", "expectedOutput": "The varsity volleyball team"}, {"Line": 1043, "Input": "Who drives a Chevrolet?", "actualOutput": "John Schneider drives a Chevrolet according to memory item i=2 with a certainty value of 0.736842105263158.", "expectedOutput": "John Schneider"}, {"Line": 1044, "Input": "Who is Murray's client?", "actualOutput": "Murray's client is mentioned in memory item i=0 with a certainty value of 0.736842105263158.", "expectedOutput": "Stan Weber"}, {"Line": 1045, "Input": "What did Harriette Phung wonder about?", "actualOutput": "Harriette Phung's wonder is not mentioned in Memory.", "expectedOutput": "Whether Svetlana Golla would admit guilt"}, {"Line": 1046, "Input": "What did Harvey Paetzold tell Dee Darrell?", "actualOutput": "Harvey Paetzold told Dee Darrell something, with a certainty of 0.8214285, according to memory item i=1.", "expectedOutput": "To eat an apple"}, {"Line": 1047, "Input": "Who said that all fruits are good?", "actualOutput": "Memory item i=4 states \"fruit are good for you\" with a certainty of 0.8214285. It is not clear who said it.", "expectedOutput": "Carter Hageman"}, {"Line": 1048, "Input": "What did Martin say?", "actualOutput": "Martin said he has confidence. Memory item i=2 with a certainty of 0.736842105263158.", "expectedOutput": "Beagles are great"}, {"Line": 1049, "Input": "What is a car to buy in 2018?", "actualOutput": "Memory item i=3 states that a car is to buy in 2018 with a certainty of 0.7368.", "expectedOutput": "Toyota"}, {"Line": 1050, "Input": "What did Dr. Russo report?", "actualOutput": "Memory does not provide information on what Dr. Russo reported.", "expectedOutput": "the extra data"}, {"Line": 1051, "Input": "What do American students need to study?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "To study more math in order to compete in global marketplace today"}, {"Line": 1052, "Input": "What do American students need to study math?", "actualOutput": "Memory does not provide a clear answer to this question.", "expectedOutput": "I don't know"}, {"Line": 1053, "Input": "What did Brendon Potts promise Krystin Quail?", "actualOutput": "Brendon Potts promised Krystin Quail, hypothetically true, with a certainty of 0.736842105263158. Memory item i=0.", "expectedOutput": "To leave"}, {"Line": 1054, "Input": "What did Karl Betterton promise?", "actualOutput": "There is no memory item that mentions Karl Betterton or a promise he made.", "expectedOutput": "To leave Ewa Odum"}, {"Line": 1055, "Input": "What did Mr. Middleton's grandchildren receive?", "actualOutput": "Memory does not provide information on what Mr. Middleton's grandchildren received.", "expectedOutput": "Presents"}, {"Line": 1056, "Input": "Did Valencia Mcardle buy Jeffrey Kittle's bike?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "yes"}, {"Line": 1057, "Input": "Is the office door closed?", "actualOutput": "Memory item i=0 states that Alita Ramsdell closed the office door with a certainty of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 1058, "Input": "Are the kitchen lights turned off?", "actualOutput": "There is no memory item that directly answers the question about the kitchen lights being turned off.", "expectedOutput": "Yes"}, {"Line": 1059, "Input": "Are the hallway lights turned off?", "actualOutput": "There is no memory item that directly answers the question about the hallway lights being turned off.", "expectedOutput": "I don't know"}, {"Line": 1060, "Input": "What flies like an arrow?", "actualOutput": "Memory does not contain information about what flies like an arrow.", "expectedOutput": "time"}, {"Line": 1061, "Input": "What likes bananas?", "actualOutput": "There is no information in Memory about what likes bananas.", "expectedOutput": "fruit flies"}, {"Line": 1062, "Input": "Does time like an arrow?", "actualOutput": "Memory item i=4 states \"time flies like arrow\" with a hypothetical truth type and a certainty value of 0.736842105263158, suggesting a moderate probability that time behaves similarly to an arrow.", "expectedOutput": "I don't know"}, {"Line": 1063, "Input": "Does fruit fly bananas?", "actualOutput": "Memory item i=2 states that fruit flies like bananas with a certainty of 0.8214285.", "expectedOutput": "I don't know"}, {"Line": 1064, "Input": "What do the old man?", "actualOutput": "The old man has a boat according to memory item i=0 with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "The boat"}, {"Line": 1065, "Input": "What do the old do?", "actualOutput": "The old were on a stage according to memory item i=0 with a certainty of 0.6150568214625839.", "expectedOutput": "Man the boat"}, {"Line": 1066, "Input": "Who is Dorian Gray?", "actualOutput": "There is no memory item that mentions Dorian Gray.", "expectedOutput": "Dorian Gray is the subject of a full-length portrait in oil by Basil Hallward."}, {"Line": 1067, "Input": "Where is Southern California Children's Museum?", "actualOutput": "The location of Southern California Children's Museum is not mentioned in the given memory contents.", "expectedOutput": "In Pasadena"}, {"Line": 1068, "Input": "What cake is not good?", "actualOutput": "Memory does not provide information on what cake is not good.", "expectedOutput": "The chocolate cake"}, {"Line": 1069, "Input": "Is the food at a new Italian restaurant delicious?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "\"Yes, very delicious\""}, {"Line": 1070, "Input": "Did Iida meet Pearl's cousin?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "Yes"}, {"Line": 1071, "Input": "Did Iida meet Callie's cousin?", "actualOutput": "There is no memory item that directly answers the question with certainty.", "expectedOutput": "I don't know"}, {"Line": 1072, "Input": "Is Jeremy's class difficult?", "actualOutput": "Memory item i=0 suggests that the class is difficult, but with a certainty of only 0.64. No other memory item mentions Jeremy's class.", "expectedOutput": "I don't know"}, {"Line": 1073, "Input": "Is the student from Jeremy's class difficult?", "actualOutput": "Memory item i=4 states that the student is from a class, but it is only hypothetically true with a certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 1074, "Input": "Is the homework difficult?", "actualOutput": "The homework is hypothetically difficult with a certainty of 0.7368, according to memory item i=0.", "expectedOutput": "Yes"}, {"Line": 1075, "Input": "What is difficult?", "actualOutput": "It is difficult to determine the truth value of memory item i=9 (cocoa isa coffee) with a certainty of 0.491.", "expectedOutput": "\"Student's homework, the student from Brandon's class, and the students from Georgette's class' homework\""}, {"Line": 1076, "Input": "Where is the loud student from?", "actualOutput": "There is no memory item that directly answers the question about the loud student's origin.", "expectedOutput": "Jeremy's class"}, {"Line": 1077, "Input": "Who owns the homework?", "actualOutput": "The homework belongs to the student with a certainty of 0.736842105263158, according to memory item i=3.", "expectedOutput": "The loud student from Jeremy's class"}, {"Line": 1078, "Input": "Does Jeremy's class own the homework?", "actualOutput": "Memory item i=3 suggests that the homework is hypothetically true to be from Jeremy's class with a certainty of 0.604262.", "expectedOutput": "I don't know"}, {"Line": 1079, "Input": "Does the student from Jeremy's class own the homework?", "actualOutput": "Memory item i=3 states that the homework belongs to the student with a certainty of 0.8214285.", "expectedOutput": "Yes"}, {"Line": 1080, "Input": "does the student from Jeremy's class have devoirs?", "actualOutput": "Memory item i=1 suggests that devoirs belong to a student, but certainty is only hypothetically true (0.641).", "expectedOutput": "\"Yes, difficult homework\""}, {"Line": 1081, "Input": "Is the devoirs difficult?", "actualOutput": "Memory item i=0 states that devoir has the property difficult with a certainty of 0.5745, indicating a moderate likelihood.", "expectedOutput": "Yes"}, {"Line": 1082, "Input": "Is Brandon's class difficult?", "actualOutput": "Memory item i=12 states that \"devoir hasproperty difficult\" with a certainty of 0.6040225, but it is unclear if Brandon's class is specifically mentioned.", "expectedOutput": "I don't know"}, {"Line": 1083, "Input": "Is the student from Brandon's class difficult?", "actualOutput": "Memory item i=4 states that the student is from Brandon's class with a certainty of 0.8913044999999999. The difficulty property is hypothetically true with a certainty of 0.736842105263158.", "expectedOutput": "Yes"}, {"Line": 1084, "Input": "Is Georgette's class difficult?", "actualOutput": "Memory item i=12 states that difficult has the property of belonging to Georgette's class with a certainty of 0.6040225. Therefore, it is probabilistically likely that Georgette's class is difficult according to Memory.", "expectedOutput": "I don't know"}, {"Line": 1085, "Input": "Are the students from Georgette's class's homework difficult?", "actualOutput": "Memory item i=14 states that homework has the property of being difficult with a certainty of 0.8281755.", "expectedOutput": "Yes"}, {"Line": 1086, "Input": "Is the student from Georgette's class difficult?", "actualOutput": "Memory item i=4 states that the student is from class with a certainty of 0.8913044999999999, but difficulty is not mentioned.", "expectedOutput": "I don't know"}, {"Line": 1087, "Input": "What is from France?", "actualOutput": "Mammals, hamsters, dogs, and cats are hypothetically from France. Memory items i=0, i=1, i=2, and i=3.", "expectedOutput": "\"Cats, dogs, and hamsters\""}, {"Line": 1088, "Input": "Did Ludovic pack the hotdogs?", "actualOutput": "Memory item i=1 states that \"ludovic pack everything\" with a certainty of 0.736842105263158, but there is no mention of hotdogs specifically.", "expectedOutput": "\"No, everything minus the hotdogs\""}, {"Line": 1089, "Input": "Is the pasta from Italy?", "actualOutput": "Memory item i=4 states that the pasta is hypothetically true to be from Italy with a certainty of 0.736842105263158. Therefore, there is a high probability that the pasta is from Italy according to Memory.", "expectedOutput": "I don't know"}, {"Line": 1090, "Input": "Who does Holly trust?", "actualOutput": "Holly trusts someone, but it is only hypothetically true. Memory item i=0 has a certainty value of 0.736842105263158.", "expectedOutput": "Benedict"}, {"Line": 1091, "Input": "Does Holly trust Mendel?", "actualOutput": "Memory item i=3 states that \"holly trust him\" with a certainty of 0.8214285, but it does not specify who \"him\" refers to. Memory item i=1 states that \"mendel are from france\" with a higher certainty of 0.6048745832414667, but it does not mention anything about trust. Therefore, it is uncertain whether Holly trusts Mendel based on the given memory contents.", "expectedOutput": "\"No, Benedict\""}, {"Line": 1092, "Input": "Who did Lain see?", "actualOutput": "Lain saw a man according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "Leland"}, {"Line": 1093, "Input": "Who saw the electrician?", "actualOutput": "Gregor saw the electrician according to Memory. Memory item i=3 with a certainty value of 0.5745213152056722.", "expectedOutput": "Lain"}, {"Line": 1094, "Input": "Who saw Britta?", "actualOutput": "Gregor saw Britta according to Memory. Memory item i=4 with a certainty value of 0.736842105263158.", "expectedOutput": "Leland and Gregor"}, {"Line": 1095, "Input": "Who did Kelly see?", "actualOutput": "Kelly saw a pet according to memory item i=1 with a certainty of 0.736842105263158.", "expectedOutput": "Umbra"}, {"Line": 1096, "Input": "Did Kelly see Jill?", "actualOutput": "There is no memory item that directly states whether Kelly saw Jill, so it cannot be determined with certainty.", "expectedOutput": "\"No, Umbra\""}, {"Line": 1097, "Input": "Is Umbra warm blooded?", "actualOutput": "Memory does not provide a direct answer to whether Umbra is warm-blooded. None of the memory items directly address this question.", "expectedOutput": "Yes"}, {"Line": 1098, "Input": "Are crows as big as ravens?", "actualOutput": "Memory item i=1 states that crows are as big as ravens with a hypothetical truth certainty of 0.7368.", "expectedOutput": "yes"}, {"Line": 1099, "Input": "Are crows as big as elephants?", "actualOutput": "There is no memory item that directly answers the question, so the certainty value is 0.", "expectedOutput": "I don't know"}, {"Line": 1100, "Input": "Are crows as rotund as elephants?", "actualOutput": "Memory does not contain information about the rotundness of crows or elephants.", "expectedOutput": "I don't know"}, {"Line": 1101, "Input": "Are ravens as big as crows?", "actualOutput": "Memory item i=1 states that \"crow areas big as raven\" with a certainty of 0.8214285, suggesting that ravens are bigger than crows.", "expectedOutput": "yes"}, {"Line": 1102, "Input": "Are ravens as big as elephants?", "actualOutput": "Memory does not contain information about ravens being as big as elephants.", "expectedOutput": "I don't know"}, {"Line": 1103, "Input": "Are pidgeons as big as crows?", "actualOutput": "Memory item i=1 states that \"crow areassmallas pidgeons\" with a certainty of 0.736842105263158, suggesting that pidgeons are smaller than crows but not with complete certainty.", "expectedOutput": "yes"}, {"Line": 1104, "Input": "Are pidgeons as big as ravens?", "actualOutput": "Memory item i=1 states that \"crow areassmallas pidgeons\" with a certainty of 0.8214285, but it does not mention ravens. Therefore, we cannot determine if pidgeons are as big as ravens based on this memory content.", "expectedOutput": "yes"}, {"Line": 1105, "Input": "Are pidgeons as big as elephants?", "actualOutput": "There is no memory item that directly answers the question, so the answer is unknown.", "expectedOutput": "I don't know"}, {"Line": 1106, "Input": "Are crows as small as ravens?", "actualOutput": "Memory item i=1 states that crows are as big as ravens with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 1107, "Input": "Are ravens as small as crows?", "actualOutput": "Memory item i=1 states that crows are as big as ravens with a certainty of 0.8214285.", "expectedOutput": "yes"}, {"Line": 1108, "Input": "Are crows as small as pidgeons?", "actualOutput": "Memory item i=1 states that \"crow areassmallas pidgeons\" with a certainty of 0.8214285, indicating a high probability that crows are not as small as pigeons.", "expectedOutput": "yes"}, {"Line": 1109, "Input": "Are pidgeons as small as ravens?", "actualOutput": "Memory item i=1 states that \"crow areassmallas pidgeons\" with a certainty of 0.8214285, but it does not compare their size to ravens.", "expectedOutput": "yes"}, {"Line": 1110, "Input": "Are crows as small as elephants?", "actualOutput": "There is no memory item that directly addresses whether crows are as small as elephants.", "expectedOutput": "I don't know"}, {"Line": 1111, "Input": "Are elephants as small as ravens?", "actualOutput": "There is no memory item that directly compares the size of elephants and ravens.", "expectedOutput": "I don't know"}, {"Line": 1112, "Input": "Are crows bigger than ravens?", "actualOutput": "Memory item i=1 states that crows are as big as ravens with a certainty of 0.8214285. No information suggests that crows are bigger than ravens.", "expectedOutput": "\"no, the same\""}, {"Line": 1113, "Input": "Are ravens bigger than crows?", "actualOutput": "Memory item i=1 states that \"crow areas big as raven\" with a certainty of 0.8214285, suggesting that ravens are not necessarily bigger than crows.", "expectedOutput": "\"no, the same\""}, {"Line": 1114, "Input": "Are pidgeons bigger than crows?", "actualOutput": "Memory item i=1 states that \"crow areassmallas pidgeons\" with a certainty of 0.8214285, suggesting that pidgeons are smaller than crows.", "expectedOutput": "\"no, the same\""}, {"Line": 1115, "Input": "Are ravens bigger than pidgeons?", "actualOutput": "Memory item i=1 states that \"crow areas big as raven\" with a certainty of 0.8214285, but it does not directly compare the size of ravens and pigeons.", "expectedOutput": "\"no, the same\""}, {"Line": 1116, "Input": "Are crows smaller than ravens?", "actualOutput": "Memory item i=0 states that crows are smaller than pigeons, but there is no direct comparison between crows and ravens.", "expectedOutput": "\"no, the same\""}, {"Line": 1117, "Input": "Are ravens smaller than crows?", "actualOutput": "Memory item i=1 states that crows are as big as ravens with a certainty of 0.8214285. No information is given about ravens being smaller than crows.", "expectedOutput": "\"no, the same\""}, {"Line": 1118, "Input": "Are pidgeons smaller than crows?", "actualOutput": "Memory item i=1 states that \"crow areassmallas pidgeons\" with a certainty of 0.8214285, indicating that it is likely that pidgeons are smaller than crows.", "expectedOutput": "\"no, the same\""}, {"Line": 1119, "Input": "Where are velots from?", "actualOutput": "Velots are hypothetically from Spain according to memory item i=4 with a certainty of 0.736842105263158.", "expectedOutput": "Spain"}, {"Line": 1120, "Input": "What color are velots?", "actualOutput": "Velots are hypothetically true to be green according to memory item i=1 with a certainty of 0.736842105263158.", "expectedOutput": "Green"}, {"Line": 1121, "Input": "What color is Kyle's velot?", "actualOutput": "Kyle's velot is hypothetically red with a certainty value of 0.736842105263158, according to memory item i=0.", "expectedOutput": "Red"}, {"Line": 1122, "Input": "Is Kyle's velot green?", "actualOutput": "Memory item i=2 states that \"velots isa green\" with a certainty of 0.8214285, suggesting that Kyle's velot is green with high probability.", "expectedOutput": "\"No, red\""}, {"Line": 1123, "Input": "Are velots loud?", "actualOutput": "Memory item i=0 states that velots hypothetically have the property of being loud with a certainty of 0.6707.", "expectedOutput": "Yes"}, {"Line": 1124, "Input": "Are velots angelic?", "actualOutput": "According to memory item i=0, there is a 69.66% chance that velots have the property of being angelic.", "expectedOutput": "Yes"}, {"Line": 1125, "Input": "Are velots hairy?", "actualOutput": "Memory item i=0 states that mammals have the property of being hairy with a certainty of 0.7368, but there is no mention of Velots.", "expectedOutput": "Yes"}, {"Line": 1126, "Input": "What color is Kyle's velot?", "actualOutput": "Kyle's velot is red according to memory. This information is in memory item i=1 with a certainty value of 0.8214285.", "expectedOutput": "Red"}, {"Line": 1127, "Input": "Does Kyle have an endotherm?", "actualOutput": "There is no memory item that directly states whether Kyle has an endotherm or not.", "expectedOutput": "Yes"}, {"Line": 1128, "Input": "what color is Kyle's endotherm?", "actualOutput": "There is no memory item that directly answers the question about the color of Kyle's endotherm.", "expectedOutput": "Red"}, {"Line": 1129, "Input": "Are the yellow birds in dogs?", "actualOutput": "There is no memory item that directly answers the question about yellow birds in dogs.", "expectedOutput": "\"No, in cages\""}, {"Line": 1130, "Input": "Are the red birds in dogs?", "actualOutput": "Memory does not provide information on red birds being in dogs.", "expectedOutput": "No. In cages and boxes"}, {"Line": 1131, "Input": "Which word has Latin origin?", "actualOutput": "The word with Latin origin is \"liminality\" according to memory item i=3 with a hypothetical truth certainty of 0.736842105263158.", "expectedOutput": "Liminality"}, {"Line": 1132, "Input": "Does Elijah live in California?", "actualOutput": "Memory does not provide a direct answer to whether Elijah lives in California.", "expectedOutput": "yes"}, {"Line": 1133, "Input": "Does Elijah live in Irvine?", "actualOutput": "There is no memory item that states whether Elijah lives in Irvine, so the answer is unknown.", "expectedOutput": "\"No, in Westwood\""}, {"Line": 1134, "Input": "Did Elijah live in New York City?", "actualOutput": "Yes, Elijah is from New York City according to memory item i=2 with a certainty value of 0.736842105263158.", "expectedOutput": "yes"}, {"Line": 1135, "Input": "Did Elijah live in Irvine?", "actualOutput": "There is no memory item that states whether Elijah lived in Irvine, so the answer is uncertain (certainty=0).", "expectedOutput": "\"No, in Westwood\""}, {"Line": 1136, "Input": "Where does Elijah reside?", "actualOutput": "Elijah resides in Westwood according to memory item i=0 with a certainty value of 0.736842105263158.", "expectedOutput": "In Westwood and New York City"}, {"Line": 1137, "Input": "Where did Elijah reside?", "actualOutput": "Elijah resided in Westwood according to memory item i=0 with a certainty value of 0.8214285.", "expectedOutput": "In Westwood and New York City"}, {"Line": 1138, "Input": "When does Rob eat breakfast?", "actualOutput": "Rob hypothetically eats breakfast according to Memory, with a certainty value of 0.736842105263158, in memory item i=4.", "expectedOutput": "At 8 AM"}, {"Line": 1139, "Input": "When does Rob eat dinner?", "actualOutput": "Rob eats dinner according to Memory in item i=4 with a hypothetical truth value and a certainty of 0.736842105263158.", "expectedOutput": "At 8 PM"}, {"Line": 1140, "Input": "Who is Tesla's employee?", "actualOutput": "There is no memory item in the given Memory that directly answers the question with certainty.", "expectedOutput": "Steven"}, {"Line": 1141, "Input": "Who is in The Matrix?", "actualOutput": "There is no memory item in the given Memory that mentions anyone being in the matrix.", "expectedOutput": "Keanu Reeves"}, {"Line": 1142, "Input": "Who played Neo?", "actualOutput": "Keanu Reeves played Neo according to memory item i=2 with a certainty of 0.736842105263158.", "expectedOutput": "Keanu Reeves"}, {"Line": 1143, "Input": "Who starred in The Matrix?", "actualOutput": "There is no memory item in the given memory that directly answers the question with certainty.", "expectedOutput": "Keanu Reeves"}, {"Line": 1144, "Input": "Who acted in The Matrix?", "actualOutput": "There is no memory item in the given memory that provides information about actors in the Matrix.", "expectedOutput": "Keanu Reeves"}, {"Line": 1145, "Input": "What is Keanu Reeves in?", "actualOutput": "There is no mention of Keanu Reeves in the given memory contents.", "expectedOutput": "The Matrix"}, {"Line": 1146, "Input": "What movie is Keanu Reeves in?", "actualOutput": "Memory does not provide a direct answer to the question.", "expectedOutput": "The Matrix"}, {"Line": 1147, "Input": "What book is Keanu Reeves in?", "actualOutput": "There is no memory item that mentions Keanu Reeves and a book, so the answer is unknown.", "expectedOutput": "I don't know"}, {"Line": 1148, "Input": "What kind of movie is Dracula?", "actualOutput": "Dracula is hypothetically true to be a horror movie with a certainty value of 0.736842105263158, found in memory item i=1.", "expectedOutput": "A horror movie"}, {"Line": 1149, "Input": "What kind of movie is Happy Gilmore?", "actualOutput": "There is no memory item in the given Memory that directly mentions the movie \"Happy Gilmore\".", "expectedOutput": "A comedy movie"}, {"Line": 1150, "Input": "What do the young man?", "actualOutput": "The young man has a boat according to memory item i=2 with a certainty of 0.8214285.", "expectedOutput": "The cars"}, {"Line": 1151, "Input": "What do the rich man?", "actualOutput": "The rich man bought a turtle according to memory item i=0 with a certainty of 0.736842105263158.", "expectedOutput": "The bikes"}, {"Line": 1152, "Input": "What do the poor man?", "actualOutput": "The poor man has a car according to Memory item i=1 with a certainty of 0.736842105263158.", "expectedOutput": "I don't know"}, {"Line": 1153, "Input": "Is Sam's dog friendly?", "actualOutput": "Memory item i=4 states that \"dog is a friendly\" with a hypothetical truth value of 0.736842105263158, suggesting that there is a high probability that Sam's dog is friendly.", "expectedOutput": "Yes"}, {"Line": 1154, "Input": "Is Robert's dog friendly?", "actualOutput": "Memory item i=20 states that \"dog isa friendly\" with a certainty of 0.8214285, suggesting that there is a high probability that Robert's dog is friendly.", "expectedOutput": "No"}, {"Line": 1155, "Input": "When are the rates going to increase?", "actualOutput": "There is no memory content that directly answers the question about when rates will increase.", "expectedOutput": "From 12/1/2018 to 12/31/2018"}, {"Line": 1156, "Input": "Why does the Federal Open Market Committee raise the rates?", "actualOutput": "No memory item provides an answer to this question.", "expectedOutput": "In order to keep inflation steady at around 2 percent per year from 12/1/2018"}, {"Line": 1157, "Input": "Did Team A make any mistakes?", "actualOutput": "Memory item i=4 states that \"team make mistake\" with a certainty value of 0.2631578947368421, indicating a low probability of a mistake being made.", "expectedOutput": "I don't know"}, {"Line": 1158, "Input": "Did Team B make any mistakes?", "actualOutput": "Memory item i=4 states that \"team make mistake\" with a certainty of 0.1785715, indicating a low probability of a mistake.", "expectedOutput": "Yes"}, {"Line": 1159, "Input": "Who made the project possible?", "actualOutput": "Jasmine made the project possible according to memory item i=2 with a certainty of 0.6121885.", "expectedOutput": "Team A"}], 1]